(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["layouts-admin-layout-admin-layout-module"],{

/***/ "+rOU":
/*!*******************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js ***!
  \*******************************************************************/
/*! exports provided: BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BasePortalHost", function() { return BasePortalHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BasePortalOutlet", function() { return BasePortalOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkPortal", function() { return CdkPortal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkPortalOutlet", function() { return CdkPortalOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentPortal", function() { return ComponentPortal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomPortal", function() { return DomPortal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomPortalHost", function() { return DomPortalHost; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DomPortalOutlet", function() { return DomPortalOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Portal", function() { return Portal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortalHostDirective", function() { return PortalHostDirective; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortalInjector", function() { return PortalInjector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortalModule", function() { return PortalModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplatePortal", function() { return TemplatePortal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TemplatePortalDirective", function() { return TemplatePortalDirective; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "ofXK");









/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Throws an exception when attempting to attach a null portal to a host.
 * @docs-private
 */



function throwNullPortalError() {
  throw Error('Must provide a portal to attach');
}
/**
 * Throws an exception when attempting to attach a portal to a host that is already attached.
 * @docs-private
 */


function throwPortalAlreadyAttachedError() {
  throw Error('Host already has a portal attached');
}
/**
 * Throws an exception when attempting to attach a portal to an already-disposed host.
 * @docs-private
 */


function throwPortalOutletAlreadyDisposedError() {
  throw Error('This PortalOutlet has already been disposed');
}
/**
 * Throws an exception when attempting to attach an unknown portal type.
 * @docs-private
 */


function throwUnknownPortalTypeError() {
  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' + 'a ComponentPortal or a TemplatePortal.');
}
/**
 * Throws an exception when attempting to attach a portal to a null host.
 * @docs-private
 */


function throwNullPortalOutletError() {
  throw Error('Attempting to attach a portal to a null PortalOutlet');
}
/**
 * Throws an exception when attempting to detach a portal that is not attached.
 * @docs-private
 */


function throwNoPortalAttachedError() {
  throw Error('Attempting to detach a portal that is not attached to a host');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A `Portal` is something that you want to render somewhere else.
 * It can be attach to / detached from a `PortalOutlet`.
 */


var Portal = /*#__PURE__*/function () {
  function Portal() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, Portal);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(Portal, [{
    key: "attach",
    value:
    /** Attach this portal to a host. */
    function attach(host) {
      if (typeof ngDevMode === 'undefined' || ngDevMode) {
        if (host == null) {
          throwNullPortalOutletError();
        }

        if (host.hasAttached()) {
          throwPortalAlreadyAttachedError();
        }
      }

      this._attachedHost = host;
      return host.attach(this);
    }
    /** Detach this portal from its host */

  }, {
    key: "detach",
    value: function detach() {
      var host = this._attachedHost;

      if (host != null) {
        this._attachedHost = null;
        host.detach();
      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {
        throwNoPortalAttachedError();
      }
    }
    /** Whether this portal is attached to a host. */

  }, {
    key: "isAttached",
    get: function get() {
      return this._attachedHost != null;
    }
    /**
     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by
     * the PortalOutlet when it is performing an `attach()` or `detach()`.
     */

  }, {
    key: "setAttachedHost",
    value: function setAttachedHost(host) {
      this._attachedHost = host;
    }
  }]);

  return Portal;
}();
/**
 * A `ComponentPortal` is a portal that instantiates some Component upon attachment.
 */


var ComponentPortal = /*#__PURE__*/function (_Portal) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(ComponentPortal, _Portal);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(ComponentPortal);

  function ComponentPortal(component, viewContainerRef, injector, componentFactoryResolver) {
    var _this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ComponentPortal);

    _this = _super.call(this);
    _this.component = component;
    _this.viewContainerRef = viewContainerRef;
    _this.injector = injector;
    _this.componentFactoryResolver = componentFactoryResolver;
    return _this;
  }

  return ComponentPortal;
}(Portal);
/**
 * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).
 */


var TemplatePortal = /*#__PURE__*/function (_Portal2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(TemplatePortal, _Portal2);

  var _super2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(TemplatePortal);

  function TemplatePortal(template, viewContainerRef, context) {
    var _this2;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, TemplatePortal);

    _this2 = _super2.call(this);
    _this2.templateRef = template;
    _this2.viewContainerRef = viewContainerRef;
    _this2.context = context;
    return _this2;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(TemplatePortal, [{
    key: "origin",
    get: function get() {
      return this.templateRef.elementRef;
    }
    /**
     * Attach the portal to the provided `PortalOutlet`.
     * When a context is provided it will override the `context` property of the `TemplatePortal`
     * instance.
     */

  }, {
    key: "attach",
    value: function attach(host) {
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.context;
      this.context = context;
      return Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(TemplatePortal.prototype), "attach", this).call(this, host);
    }
  }, {
    key: "detach",
    value: function detach() {
      this.context = undefined;
      return Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(TemplatePortal.prototype), "detach", this).call(this);
    }
  }]);

  return TemplatePortal;
}(Portal);
/**
 * A `DomPortal` is a portal whose DOM element will be taken from its current position
 * in the DOM and moved into a portal outlet, when it is attached. On detach, the content
 * will be restored to its original position.
 */


var DomPortal = /*#__PURE__*/function (_Portal3) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(DomPortal, _Portal3);

  var _super3 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(DomPortal);

  function DomPortal(element) {
    var _this3;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DomPortal);

    _this3 = _super3.call(this);
    _this3.element = element instanceof _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"] ? element.nativeElement : element;
    return _this3;
  }

  return DomPortal;
}(Portal);
/**
 * Partial implementation of PortalOutlet that handles attaching
 * ComponentPortal and TemplatePortal.
 */


var BasePortalOutlet = /*#__PURE__*/function () {
  function BasePortalOutlet() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BasePortalOutlet);

    /** Whether this host has already been permanently disposed. */
    this._isDisposed = false; // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.

    this.attachDomPortal = null;
  }
  /** Whether this host has an attached portal. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(BasePortalOutlet, [{
    key: "hasAttached",
    value: function hasAttached() {
      return !!this._attachedPortal;
    }
    /** Attaches a portal. */

  }, {
    key: "attach",
    value: function attach(portal) {
      if (typeof ngDevMode === 'undefined' || ngDevMode) {
        if (!portal) {
          throwNullPortalError();
        }

        if (this.hasAttached()) {
          throwPortalAlreadyAttachedError();
        }

        if (this._isDisposed) {
          throwPortalOutletAlreadyDisposedError();
        }
      }

      if (portal instanceof ComponentPortal) {
        this._attachedPortal = portal;
        return this.attachComponentPortal(portal);
      } else if (portal instanceof TemplatePortal) {
        this._attachedPortal = portal;
        return this.attachTemplatePortal(portal); // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.
      } else if (this.attachDomPortal && portal instanceof DomPortal) {
        this._attachedPortal = portal;
        return this.attachDomPortal(portal);
      }

      if (typeof ngDevMode === 'undefined' || ngDevMode) {
        throwUnknownPortalTypeError();
      }
    }
    /** Detaches a previously attached portal. */

  }, {
    key: "detach",
    value: function detach() {
      if (this._attachedPortal) {
        this._attachedPortal.setAttachedHost(null);

        this._attachedPortal = null;
      }

      this._invokeDisposeFn();
    }
    /** Permanently dispose of this portal host. */

  }, {
    key: "dispose",
    value: function dispose() {
      if (this.hasAttached()) {
        this.detach();
      }

      this._invokeDisposeFn();

      this._isDisposed = true;
    }
    /** @docs-private */

  }, {
    key: "setDisposeFn",
    value: function setDisposeFn(fn) {
      this._disposeFn = fn;
    }
  }, {
    key: "_invokeDisposeFn",
    value: function _invokeDisposeFn() {
      if (this._disposeFn) {
        this._disposeFn();

        this._disposeFn = null;
      }
    }
  }]);

  return BasePortalOutlet;
}();
/**
 * @deprecated Use `BasePortalOutlet` instead.
 * @breaking-change 9.0.0
 */


var BasePortalHost = /*#__PURE__*/function (_BasePortalOutlet) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(BasePortalHost, _BasePortalOutlet);

  var _super4 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(BasePortalHost);

  function BasePortalHost() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, BasePortalHost);

    return _super4.apply(this, arguments);
  }

  return BasePortalHost;
}(BasePortalOutlet);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular
 * application context.
 */


var DomPortalOutlet = /*#__PURE__*/function (_BasePortalOutlet2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(DomPortalOutlet, _BasePortalOutlet2);

  var _super5 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(DomPortalOutlet);

  function DomPortalOutlet(
  /** Element into which the content is projected. */
  outletElement, _componentFactoryResolver, _appRef, _defaultInjector,
  /**
   * @deprecated `_document` Parameter to be made required.
   * @breaking-change 10.0.0
   */
  _document) {
    var _thisSuper, _this4;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DomPortalOutlet);

    _this4 = _super5.call(this);
    _this4.outletElement = outletElement;
    _this4._componentFactoryResolver = _componentFactoryResolver;
    _this4._appRef = _appRef;
    _this4._defaultInjector = _defaultInjector;
    /**
     * Attaches a DOM portal by transferring its content into the outlet.
     * @param portal Portal to be attached.
     * @deprecated To be turned into a method.
     * @breaking-change 10.0.0
     */

    _this4.attachDomPortal = function (portal) {
      // @breaking-change 10.0.0 Remove check and error once the
      // `_document` constructor parameter is required.
      if (!_this4._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('Cannot attach DOM portal without _document constructor parameter');
      }

      var element = portal.element;

      if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('DOM portal content must be attached to a parent node.');
      } // Anchor used to save the element's previous position so
      // that we can restore it when the portal is detached.


      var anchorNode = _this4._document.createComment('dom-portal');

      element.parentNode.insertBefore(anchorNode, element);

      _this4.outletElement.appendChild(element);

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])((_thisSuper = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this4), Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(DomPortalOutlet.prototype)), "setDisposeFn", _thisSuper).call(_thisSuper, function () {
        // We can't use `replaceWith` here because IE doesn't support it.
        if (anchorNode.parentNode) {
          anchorNode.parentNode.replaceChild(element, anchorNode);
        }
      });
    };

    _this4._document = _document;
    return _this4;
  }
  /**
   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.
   * @param portal Portal to be attached
   * @returns Reference to the created component.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(DomPortalOutlet, [{
    key: "attachComponentPortal",
    value: function attachComponentPortal(portal) {
      var _this5 = this;

      var resolver = portal.componentFactoryResolver || this._componentFactoryResolver;
      var componentFactory = resolver.resolveComponentFactory(portal.component);
      var componentRef; // If the portal specifies a ViewContainerRef, we will use that as the attachment point
      // for the component (in terms of Angular's component tree, not rendering).
      // When the ViewContainerRef is missing, we use the factory to create the component directly
      // and then manually attach the view to the application.

      if (portal.viewContainerRef) {
        componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);
        this.setDisposeFn(function () {
          return componentRef.destroy();
        });
      } else {
        componentRef = componentFactory.create(portal.injector || this._defaultInjector);

        this._appRef.attachView(componentRef.hostView);

        this.setDisposeFn(function () {
          _this5._appRef.detachView(componentRef.hostView);

          componentRef.destroy();
        });
      } // At this point the component has been instantiated, so we move it to the location in the DOM
      // where we want it to be rendered.


      this.outletElement.appendChild(this._getComponentRootNode(componentRef));
      return componentRef;
    }
    /**
     * Attaches a template portal to the DOM as an embedded view.
     * @param portal Portal to be attached.
     * @returns Reference to the created embedded view.
     */

  }, {
    key: "attachTemplatePortal",
    value: function attachTemplatePortal(portal) {
      var _this6 = this;

      var viewContainer = portal.viewContainerRef;
      var viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context); // The method `createEmbeddedView` will add the view as a child of the viewContainer.
      // But for the DomPortalOutlet the view can be added everywhere in the DOM
      // (e.g Overlay Container) To move the view to the specified host element. We just
      // re-append the existing root nodes.

      viewRef.rootNodes.forEach(function (rootNode) {
        return _this6.outletElement.appendChild(rootNode);
      }); // Note that we want to detect changes after the nodes have been moved so that
      // any directives inside the portal that are looking at the DOM inside a lifecycle
      // hook won't be invoked too early.

      viewRef.detectChanges();
      this.setDisposeFn(function () {
        var index = viewContainer.indexOf(viewRef);

        if (index !== -1) {
          viewContainer.remove(index);
        }
      }); // TODO(jelbourn): Return locals from view.

      return viewRef;
    }
    /**
     * Clears out a portal from the DOM.
     */

  }, {
    key: "dispose",
    value: function dispose() {
      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(DomPortalOutlet.prototype), "dispose", this).call(this);

      if (this.outletElement.parentNode != null) {
        this.outletElement.parentNode.removeChild(this.outletElement);
      }
    }
    /** Gets the root HTMLElement for an instantiated component. */

  }, {
    key: "_getComponentRootNode",
    value: function _getComponentRootNode(componentRef) {
      return componentRef.hostView.rootNodes[0];
    }
  }]);

  return DomPortalOutlet;
}(BasePortalOutlet);
/**
 * @deprecated Use `DomPortalOutlet` instead.
 * @breaking-change 9.0.0
 */


var DomPortalHost = /*#__PURE__*/function (_DomPortalOutlet) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(DomPortalHost, _DomPortalOutlet);

  var _super6 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(DomPortalHost);

  function DomPortalHost() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, DomPortalHost);

    return _super6.apply(this, arguments);
  }

  return DomPortalHost;
}(DomPortalOutlet);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,
 * the directive instance itself can be attached to a host, enabling declarative use of portals.
 */


var CdkPortal = /*#__PURE__*/function (_TemplatePortal) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(CdkPortal, _TemplatePortal);

  var _super7 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(CdkPortal);

  function CdkPortal(templateRef, viewContainerRef) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CdkPortal);

    return _super7.call(this, templateRef, viewContainerRef);
  }

  return CdkPortal;
}(TemplatePortal);

CdkPortal.ɵfac = function CdkPortal_Factory(t) {
  return new (t || CdkPortal)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewContainerRef"]));
};

CdkPortal.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: CdkPortal,
  selectors: [["", "cdkPortal", ""]],
  exportAs: ["cdkPortal"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});

CdkPortal.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["TemplateRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewContainerRef"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](CdkPortal, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[cdkPortal]',
      exportAs: 'cdkPortal'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["TemplateRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewContainerRef"]
    }];
  }, null);
})();
/**
 * @deprecated Use `CdkPortal` instead.
 * @breaking-change 9.0.0
 */


var TemplatePortalDirective = /*#__PURE__*/function (_CdkPortal) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(TemplatePortalDirective, _CdkPortal);

  var _super8 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(TemplatePortalDirective);

  function TemplatePortalDirective() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, TemplatePortalDirective);

    return _super8.apply(this, arguments);
  }

  return TemplatePortalDirective;
}(CdkPortal);

TemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) {
  return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective);
};

TemplatePortalDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: TemplatePortalDirective,
  selectors: [["", "cdk-portal", ""], ["", "portal", ""]],
  exportAs: ["cdkPortal"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: CdkPortal,
    useExisting: TemplatePortalDirective
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵTemplatePortalDirective_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](TemplatePortalDirective);
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](TemplatePortalDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[cdk-portal], [portal]',
      exportAs: 'cdkPortal',
      providers: [{
        provide: CdkPortal,
        useExisting: TemplatePortalDirective
      }]
    }]
  }], null, null);
})();
/**
 * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be
 * directly attached to it, enabling declarative use.
 *
 * Usage:
 * `<ng-template [cdkPortalOutlet]="greeting"></ng-template>`
 */


var CdkPortalOutlet = /*#__PURE__*/function (_BasePortalOutlet3) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(CdkPortalOutlet, _BasePortalOutlet3);

  var _super9 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(CdkPortalOutlet);

  function CdkPortalOutlet(_componentFactoryResolver, _viewContainerRef,
  /**
   * @deprecated `_document` parameter to be made required.
   * @breaking-change 9.0.0
   */
  _document) {
    var _thisSuper2, _this7;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CdkPortalOutlet);

    _this7 = _super9.call(this);
    _this7._componentFactoryResolver = _componentFactoryResolver;
    _this7._viewContainerRef = _viewContainerRef;
    /** Whether the portal component is initialized. */

    _this7._isInitialized = false;
    /** Emits when a portal is attached to the outlet. */

    _this7.attached = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
    /**
     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.
     * @param portal Portal to be attached.
     * @deprecated To be turned into a method.
     * @breaking-change 10.0.0
     */

    _this7.attachDomPortal = function (portal) {
      // @breaking-change 9.0.0 Remove check and error once the
      // `_document` constructor parameter is required.
      if (!_this7._document && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('Cannot attach DOM portal without _document constructor parameter');
      }

      var element = portal.element;

      if (!element.parentNode && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('DOM portal content must be attached to a parent node.');
      } // Anchor used to save the element's previous position so
      // that we can restore it when the portal is detached.


      var anchorNode = _this7._document.createComment('dom-portal');

      portal.setAttachedHost(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this7));
      element.parentNode.insertBefore(anchorNode, element);

      _this7._getRootNode().appendChild(element);

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])((_thisSuper2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this7), Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkPortalOutlet.prototype)), "setDisposeFn", _thisSuper2).call(_thisSuper2, function () {
        if (anchorNode.parentNode) {
          anchorNode.parentNode.replaceChild(element, anchorNode);
        }
      });
    };

    _this7._document = _document;
    return _this7;
  }
  /** Portal associated with the Portal outlet. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkPortalOutlet, [{
    key: "portal",
    get: function get() {
      return this._attachedPortal;
    },
    set: function set(portal) {
      // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have
      // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`
      // and attach a portal programmatically in the parent component. When Angular does the first CD
      // round, it will fire the setter with empty string, causing the user's content to be cleared.
      if (this.hasAttached() && !portal && !this._isInitialized) {
        return;
      }

      if (this.hasAttached()) {
        Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkPortalOutlet.prototype), "detach", this).call(this);
      }

      if (portal) {
        Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkPortalOutlet.prototype), "attach", this).call(this, portal);
      }

      this._attachedPortal = portal;
    }
    /** Component or view reference that is attached to the portal. */

  }, {
    key: "attachedRef",
    get: function get() {
      return this._attachedRef;
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      this._isInitialized = true;
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkPortalOutlet.prototype), "dispose", this).call(this);

      this._attachedPortal = null;
      this._attachedRef = null;
    }
    /**
     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.
     *
     * @param portal Portal to be attached to the portal outlet.
     * @returns Reference to the created component.
     */

  }, {
    key: "attachComponentPortal",
    value: function attachComponentPortal(portal) {
      portal.setAttachedHost(this); // If the portal specifies an origin, use that as the logical location of the component
      // in the application tree. Otherwise use the location of this PortalOutlet.

      var viewContainerRef = portal.viewContainerRef != null ? portal.viewContainerRef : this._viewContainerRef;
      var resolver = portal.componentFactoryResolver || this._componentFactoryResolver;
      var componentFactory = resolver.resolveComponentFactory(portal.component);
      var ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector); // If we're using a view container that's different from the injected one (e.g. when the portal
      // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered
      // inside of the alternate view container.

      if (viewContainerRef !== this._viewContainerRef) {
        this._getRootNode().appendChild(ref.hostView.rootNodes[0]);
      }

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkPortalOutlet.prototype), "setDisposeFn", this).call(this, function () {
        return ref.destroy();
      });

      this._attachedPortal = portal;
      this._attachedRef = ref;
      this.attached.emit(ref);
      return ref;
    }
    /**
     * Attach the given TemplatePortal to this PortalHost as an embedded View.
     * @param portal Portal to be attached.
     * @returns Reference to the created embedded view.
     */

  }, {
    key: "attachTemplatePortal",
    value: function attachTemplatePortal(portal) {
      var _this8 = this;

      portal.setAttachedHost(this);

      var viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkPortalOutlet.prototype), "setDisposeFn", this).call(this, function () {
        return _this8._viewContainerRef.clear();
      });

      this._attachedPortal = portal;
      this._attachedRef = viewRef;
      this.attached.emit(viewRef);
      return viewRef;
    }
    /** Gets the root node of the portal outlet. */

  }, {
    key: "_getRootNode",
    value: function _getRootNode() {
      var nativeElement = this._viewContainerRef.element.nativeElement; // The directive could be set on a template which will result in a comment
      // node being the root. Use the comment's parent node if that is the case.

      return nativeElement.nodeType === nativeElement.ELEMENT_NODE ? nativeElement : nativeElement.parentNode;
    }
  }]);

  return CdkPortalOutlet;
}(BasePortalOutlet);

CdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) {
  return new (t || CdkPortalOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ComponentFactoryResolver"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"]));
};

CdkPortalOutlet.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: CdkPortalOutlet,
  selectors: [["", "cdkPortalOutlet", ""]],
  inputs: {
    portal: ["cdkPortalOutlet", "portal"]
  },
  outputs: {
    attached: "attached"
  },
  exportAs: ["cdkPortalOutlet"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});

CdkPortalOutlet.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ComponentFactoryResolver"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewContainerRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"]]
    }]
  }];
};

CdkPortalOutlet.propDecorators = {
  attached: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](CdkPortalOutlet, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[cdkPortalOutlet]',
      exportAs: 'cdkPortalOutlet',
      inputs: ['portal: cdkPortalOutlet']
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ComponentFactoryResolver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewContainerRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"]]
      }]
    }];
  }, {
    attached: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
    }]
  });
})();
/**
 * @deprecated Use `CdkPortalOutlet` instead.
 * @breaking-change 9.0.0
 */


var PortalHostDirective = /*#__PURE__*/function (_CdkPortalOutlet) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(PortalHostDirective, _CdkPortalOutlet);

  var _super10 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(PortalHostDirective);

  function PortalHostDirective() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PortalHostDirective);

    return _super10.apply(this, arguments);
  }

  return PortalHostDirective;
}(CdkPortalOutlet);

PortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) {
  return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective);
};

PortalHostDirective.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: PortalHostDirective,
  selectors: [["", "cdkPortalHost", ""], ["", "portalHost", ""]],
  inputs: {
    portal: ["cdkPortalHost", "portal"]
  },
  exportAs: ["cdkPortalHost"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: CdkPortalOutlet,
    useExisting: PortalHostDirective
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵPortalHostDirective_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](PortalHostDirective);
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](PortalHostDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[cdkPortalHost], [portalHost]',
      exportAs: 'cdkPortalHost',
      inputs: ['portal: cdkPortalHost'],
      providers: [{
        provide: CdkPortalOutlet,
        useExisting: PortalHostDirective
      }]
    }]
  }], null, null);
})();

var PortalModule = function PortalModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PortalModule);
};

PortalModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: PortalModule
});
PortalModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function PortalModule_Factory(t) {
    return new (t || PortalModule)();
  }
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](PortalModule, {
    declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],
    exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](PortalModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],
      declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Custom injector to be used when providing custom
 * injection tokens to components inside a portal.
 * @docs-private
 * @deprecated Use `Injector.create` instead.
 * @breaking-change 11.0.0
 */


var PortalInjector = /*#__PURE__*/function () {
  function PortalInjector(_parentInjector, _customTokens) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PortalInjector);

    this._parentInjector = _parentInjector;
    this._customTokens = _customTokens;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(PortalInjector, [{
    key: "get",
    value: function get(token, notFoundValue) {
      var value = this._customTokens.get(token);

      if (typeof value !== 'undefined') {
        return value;
      }

      return this._parentInjector.get(token, notFoundValue);
    }
  }]);

  return PortalInjector;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "/19h":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/user/edit-user/edit-user.component.html ***!
  \*****************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-md-8 mx-auto\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-danger\">\n                        <h4 class=\"card-title\">Edit Profile</h4>\n                        <p class=\"card-category\">Complete your profile</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <form>\n                            <div class=\"row\">\n                                <div class=\"col-md-5\">\n                                  <mat-form-field class=\"example-full-width\">\n                                      <input matInput placeholder=\"Company (disabled)\" disabled>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input matInput placeholder=\"Username\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <mat-form-field class=\"example-full-width\">\n                                      <input matInput placeholder=\"Email address\" type=\"email\">\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Fist Name\" type=\"text\">\n                                  </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Last Name\" type=\"text\">\n                                  </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Adress\" type=\"text\">\n                                  </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"City\" type=\"text\">\n                                  </mat-form-field>\n                                </div>\n                                <div class=\"col-md-4\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Country\" type=\"text\">\n                                  </mat-form-field>\n                                </div>\n                                <div class=\"col-md-4\">\n                                  <mat-form-field class=\"example-full-width\">\n                                    <input matInput placeholder=\"Postal Code\" type=\"text\">\n                                  </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                  <label>About Me</label>\n                                  <mat-form-field class=\"example-full-width\">\n                                     <textarea matInput placeholder=\"Lamborghini Mercy, Your chick she so thirsty, I'm in that two seat Lambo.\"></textarea>\n                                   </mat-form-field>\n                                </div>\n                            </div>\n                            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">Update Profile</button>\n                            <div class=\"clearfix\"></div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  ");

/***/ }),

/***/ "0EQZ":
/*!************************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js ***!
  \************************************************************************/
/*! exports provided: ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, _DisposeViewRepeaterStrategy, _RecycleViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY, getMultipleValuesInSingleSelectionError, isDataSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ArrayDataSource", function() { return ArrayDataSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataSource", function() { return DataSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectionModel", function() { return SelectionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UniqueSelectionDispatcher", function() { return UniqueSelectionDispatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_DisposeViewRepeaterStrategy", function() { return _DisposeViewRepeaterStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_RecycleViewRepeaterStrategy", function() { return _RecycleViewRepeaterStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_VIEW_REPEATER_STRATEGY", function() { return _VIEW_REPEATER_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMultipleValuesInSingleSelectionError", function() { return getMultipleValuesInSingleSelectionError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isDataSource", function() { return isDataSource; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "fXoL");







/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */



var DataSource = function DataSource() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, DataSource);
};
/** Checks whether an object is a data source. */


function isDataSource(value) {
  // Check if the value is a DataSource by observing if it has a connect function. Cannot
  // be checked as an `instanceof DataSource` since people could create their own sources
  // that match the interface, but don't extend DataSource.
  return value && typeof value.connect === 'function';
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** DataSource wrapper for a native array. */


var ArrayDataSource = /*#__PURE__*/function (_DataSource) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(ArrayDataSource, _DataSource);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(ArrayDataSource);

  function ArrayDataSource(_data) {
    var _this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, ArrayDataSource);

    _this = _super.call(this);
    _this._data = _data;
    return _this;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(ArrayDataSource, [{
    key: "connect",
    value: function connect() {
      return Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["isObservable"])(this._data) ? this._data : Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["of"])(this._data);
    }
  }, {
    key: "disconnect",
    value: function disconnect() {}
  }]);

  return ArrayDataSource;
}(DataSource);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A repeater that destroys views when they are removed from a
 * {@link ViewContainerRef}. When new items are inserted into the container,
 * the repeater will always construct a new embedded view for each item.
 *
 * @template T The type for the embedded view's $implicit property.
 * @template R The type for the item in each IterableDiffer change record.
 * @template C The type for the context passed to each embedded view.
 */


var _DisposeViewRepeaterStrategy = /*#__PURE__*/function () {
  function _DisposeViewRepeaterStrategy() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, _DisposeViewRepeaterStrategy);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(_DisposeViewRepeaterStrategy, [{
    key: "applyChanges",
    value: function applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {
      changes.forEachOperation(function (record, adjustedPreviousIndex, currentIndex) {
        var view;
        var operation;

        if (record.previousIndex == null) {
          var insertContext = itemContextFactory(record, adjustedPreviousIndex, currentIndex);
          view = viewContainerRef.createEmbeddedView(insertContext.templateRef, insertContext.context, insertContext.index);
          operation = 1
          /* INSERTED */
          ;
        } else if (currentIndex == null) {
          viewContainerRef.remove(adjustedPreviousIndex);
          operation = 3
          /* REMOVED */
          ;
        } else {
          view = viewContainerRef.get(adjustedPreviousIndex);
          viewContainerRef.move(view, currentIndex);
          operation = 2
          /* MOVED */
          ;
        }

        if (itemViewChanged) {
          itemViewChanged({
            context: view === null || view === void 0 ? void 0 : view.context,
            operation: operation,
            record: record
          });
        }
      });
    }
  }, {
    key: "detach",
    value: function detach() {}
  }]);

  return _DisposeViewRepeaterStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A repeater that caches views when they are removed from a
 * {@link ViewContainerRef}. When new items are inserted into the container,
 * the repeater will reuse one of the cached views instead of creating a new
 * embedded view. Recycling cached views reduces the quantity of expensive DOM
 * inserts.
 *
 * @template T The type for the embedded view's $implicit property.
 * @template R The type for the item in each IterableDiffer change record.
 * @template C The type for the context passed to each embedded view.
 */


var _RecycleViewRepeaterStrategy = /*#__PURE__*/function () {
  function _RecycleViewRepeaterStrategy() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, _RecycleViewRepeaterStrategy);

    /**
     * The size of the cache used to store unused views.
     * Setting the cache size to `0` will disable caching. Defaults to 20 views.
     */
    this.viewCacheSize = 20;
    /**
     * View cache that stores embedded view instances that have been previously stamped out,
     * but don't are not currently rendered. The view repeater will reuse these views rather than
     * creating brand new ones.
     *
     * TODO(michaeljamesparsons) Investigate whether using a linked list would improve performance.
     */

    this._viewCache = [];
  }
  /** Apply changes to the DOM. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(_RecycleViewRepeaterStrategy, [{
    key: "applyChanges",
    value: function applyChanges(changes, viewContainerRef, itemContextFactory, itemValueResolver, itemViewChanged) {
      var _this2 = this;

      // Rearrange the views to put them in the right location.
      changes.forEachOperation(function (record, adjustedPreviousIndex, currentIndex) {
        var view;
        var operation;

        if (record.previousIndex == null) {
          // Item added.
          var viewArgsFactory = function viewArgsFactory() {
            return itemContextFactory(record, adjustedPreviousIndex, currentIndex);
          };

          view = _this2._insertView(viewArgsFactory, currentIndex, viewContainerRef, itemValueResolver(record));
          operation = view ? 1
          /* INSERTED */
          : 0
          /* REPLACED */
          ;
        } else if (currentIndex == null) {
          // Item removed.
          _this2._detachAndCacheView(adjustedPreviousIndex, viewContainerRef);

          operation = 3
          /* REMOVED */
          ;
        } else {
          // Item moved.
          view = _this2._moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, itemValueResolver(record));
          operation = 2
          /* MOVED */
          ;
        }

        if (itemViewChanged) {
          itemViewChanged({
            context: view === null || view === void 0 ? void 0 : view.context,
            operation: operation,
            record: record
          });
        }
      });
    }
  }, {
    key: "detach",
    value: function detach() {
      var _iterator = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this._viewCache),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var view = _step.value;
          view.destroy();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /**
     * Inserts a view for a new item, either from the cache or by creating a new
     * one. Returns `undefined` if the item was inserted into a cached view.
     */

  }, {
    key: "_insertView",
    value: function _insertView(viewArgsFactory, currentIndex, viewContainerRef, value) {
      var cachedView = this._insertViewFromCache(currentIndex, viewContainerRef);

      if (cachedView) {
        cachedView.context.$implicit = value;
        return undefined;
      }

      var viewArgs = viewArgsFactory();
      return viewContainerRef.createEmbeddedView(viewArgs.templateRef, viewArgs.context, viewArgs.index);
    }
    /** Detaches the view at the given index and inserts into the view cache. */

  }, {
    key: "_detachAndCacheView",
    value: function _detachAndCacheView(index, viewContainerRef) {
      var detachedView = this._detachView(index, viewContainerRef);

      this._maybeCacheView(detachedView, viewContainerRef);
    }
    /** Moves view at the previous index to the current index. */

  }, {
    key: "_moveView",
    value: function _moveView(adjustedPreviousIndex, currentIndex, viewContainerRef, value) {
      var view = viewContainerRef.get(adjustedPreviousIndex);
      viewContainerRef.move(view, currentIndex);
      view.context.$implicit = value;
      return view;
    }
    /**
     * Cache the given detached view. If the cache is full, the view will be
     * destroyed.
     */

  }, {
    key: "_maybeCacheView",
    value: function _maybeCacheView(view, viewContainerRef) {
      if (this._viewCache.length < this.viewCacheSize) {
        this._viewCache.push(view);
      } else {
        var index = viewContainerRef.indexOf(view); // The host component could remove views from the container outside of
        // the view repeater. It's unlikely this will occur, but just in case,
        // destroy the view on its own, otherwise destroy it through the
        // container to ensure that all the references are removed.

        if (index === -1) {
          view.destroy();
        } else {
          viewContainerRef.remove(index);
        }
      }
    }
    /** Inserts a recycled view from the cache at the given index. */

  }, {
    key: "_insertViewFromCache",
    value: function _insertViewFromCache(index, viewContainerRef) {
      var cachedView = this._viewCache.pop();

      if (cachedView) {
        viewContainerRef.insert(cachedView, index);
      }

      return cachedView || null;
    }
    /** Detaches the embedded view at the given index. */

  }, {
    key: "_detachView",
    value: function _detachView(index, viewContainerRef) {
      return viewContainerRef.detach(index);
    }
  }]);

  return _RecycleViewRepeaterStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Class to be used to power selecting one or more options from a list.
 */


var SelectionModel = /*#__PURE__*/function () {
  function SelectionModel() {
    var _this3 = this;

    var _multiple = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    var initiallySelectedValues = arguments.length > 1 ? arguments[1] : undefined;

    var _emitChanges = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, SelectionModel);

    this._multiple = _multiple;
    this._emitChanges = _emitChanges;
    /** Currently-selected values. */

    this._selection = new Set();
    /** Keeps track of the deselected options that haven't been emitted by the change event. */

    this._deselectedToEmit = [];
    /** Keeps track of the selected options that haven't been emitted by the change event. */

    this._selectedToEmit = [];
    /** Event emitted when the value has changed. */

    this.changed = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();

    if (initiallySelectedValues && initiallySelectedValues.length) {
      if (_multiple) {
        initiallySelectedValues.forEach(function (value) {
          return _this3._markSelected(value);
        });
      } else {
        this._markSelected(initiallySelectedValues[0]);
      } // Clear the array in order to avoid firing the change event for preselected values.


      this._selectedToEmit.length = 0;
    }
  }
  /** Selected values. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(SelectionModel, [{
    key: "selected",
    get: function get() {
      if (!this._selected) {
        this._selected = Array.from(this._selection.values());
      }

      return this._selected;
    }
    /**
     * Selects a value or an array of values.
     */

  }, {
    key: "select",
    value: function select() {
      var _this4 = this;

      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {
        values[_key] = arguments[_key];
      }

      this._verifyValueAssignment(values);

      values.forEach(function (value) {
        return _this4._markSelected(value);
      });

      this._emitChangeEvent();
    }
    /**
     * Deselects a value or an array of values.
     */

  }, {
    key: "deselect",
    value: function deselect() {
      var _this5 = this;

      for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        values[_key2] = arguments[_key2];
      }

      this._verifyValueAssignment(values);

      values.forEach(function (value) {
        return _this5._unmarkSelected(value);
      });

      this._emitChangeEvent();
    }
    /**
     * Toggles a value between selected and deselected.
     */

  }, {
    key: "toggle",
    value: function toggle(value) {
      this.isSelected(value) ? this.deselect(value) : this.select(value);
    }
    /**
     * Clears all of the selected values.
     */

  }, {
    key: "clear",
    value: function clear() {
      this._unmarkAll();

      this._emitChangeEvent();
    }
    /**
     * Determines whether a value is selected.
     */

  }, {
    key: "isSelected",
    value: function isSelected(value) {
      return this._selection.has(value);
    }
    /**
     * Determines whether the model does not have a value.
     */

  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this._selection.size === 0;
    }
    /**
     * Determines whether the model has a value.
     */

  }, {
    key: "hasValue",
    value: function hasValue() {
      return !this.isEmpty();
    }
    /**
     * Sorts the selected values based on a predicate function.
     */

  }, {
    key: "sort",
    value: function sort(predicate) {
      if (this._multiple && this.selected) {
        this._selected.sort(predicate);
      }
    }
    /**
     * Gets whether multiple values can be selected.
     */

  }, {
    key: "isMultipleSelection",
    value: function isMultipleSelection() {
      return this._multiple;
    }
    /** Emits a change event and clears the records of selected and deselected values. */

  }, {
    key: "_emitChangeEvent",
    value: function _emitChangeEvent() {
      // Clear the selected values so they can be re-cached.
      this._selected = null;

      if (this._selectedToEmit.length || this._deselectedToEmit.length) {
        this.changed.next({
          source: this,
          added: this._selectedToEmit,
          removed: this._deselectedToEmit
        });
        this._deselectedToEmit = [];
        this._selectedToEmit = [];
      }
    }
    /** Selects a value. */

  }, {
    key: "_markSelected",
    value: function _markSelected(value) {
      if (!this.isSelected(value)) {
        if (!this._multiple) {
          this._unmarkAll();
        }

        this._selection.add(value);

        if (this._emitChanges) {
          this._selectedToEmit.push(value);
        }
      }
    }
    /** Deselects a value. */

  }, {
    key: "_unmarkSelected",
    value: function _unmarkSelected(value) {
      if (this.isSelected(value)) {
        this._selection.delete(value);

        if (this._emitChanges) {
          this._deselectedToEmit.push(value);
        }
      }
    }
    /** Clears out the selected values. */

  }, {
    key: "_unmarkAll",
    value: function _unmarkAll() {
      var _this6 = this;

      if (!this.isEmpty()) {
        this._selection.forEach(function (value) {
          return _this6._unmarkSelected(value);
        });
      }
    }
    /**
     * Verifies the value assignment and throws an error if the specified value array is
     * including multiple values while the selection model is not supporting multiple values.
     */

  }, {
    key: "_verifyValueAssignment",
    value: function _verifyValueAssignment(values) {
      if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMultipleValuesInSingleSelectionError();
      }
    }
  }]);

  return SelectionModel;
}();
/**
 * Returns an error that reports that multiple values are passed into a selection model
 * with a single value.
 * @docs-private
 */


function getMultipleValuesInSingleSelectionError() {
  return Error('Cannot pass multiple values into SelectionModel with single-value mode.');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Class to coordinate unique selection based on name.
 * Intended to be consumed as an Angular service.
 * This service is needed because native radio change events are only fired on the item currently
 * being selected, and we still need to uncheck the previous selection.
 *
 * This service does not *store* any IDs and names because they may change at any time, so it is
 * less error-prone if they are simply passed through when the events occur.
 */


var UniqueSelectionDispatcher = /*#__PURE__*/function () {
  function UniqueSelectionDispatcher() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, UniqueSelectionDispatcher);

    this._listeners = [];
  }
  /**
   * Notify other items that selection for the given name has been set.
   * @param id ID of the item.
   * @param name Name of the item.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(UniqueSelectionDispatcher, [{
    key: "notify",
    value: function notify(id, name) {
      var _iterator2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this._listeners),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var listener = _step2.value;
          listener(id, name);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
    /**
     * Listen for future changes to item selection.
     * @return Function used to deregister listener
     */

  }, {
    key: "listen",
    value: function listen(listener) {
      var _this7 = this;

      this._listeners.push(listener);

      return function () {
        _this7._listeners = _this7._listeners.filter(function (registered) {
          return listener !== registered;
        });
      };
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._listeners = [];
    }
  }]);

  return UniqueSelectionDispatcher;
}();

UniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) {
  return new (t || UniqueSelectionDispatcher)();
};

UniqueSelectionDispatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"])({
  factory: function UniqueSelectionDispatcher_Factory() {
    return new UniqueSelectionDispatcher();
  },
  token: UniqueSelectionDispatcher,
  providedIn: "root"
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](UniqueSelectionDispatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Injection token for {@link _ViewRepeater}.
 *
 * INTERNAL ONLY - not for public consumption.
 * @docs-private
 */


var _VIEW_REPEATER_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('_ViewRepeater');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "0MNC":
/*!*******************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js ***!
  \*******************************************************************/
/*! exports provided: BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreakpointObserver", function() { return BreakpointObserver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Breakpoints", function() { return Breakpoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutModule", function() { return LayoutModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MediaMatcher", function() { return MediaMatcher; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");







/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */




var LayoutModule = function LayoutModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, LayoutModule);
};

LayoutModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: LayoutModule
});
LayoutModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  factory: function LayoutModule_Factory(t) {
    return new (t || LayoutModule)();
  }
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](LayoutModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
    args: [{}]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Global registry for all dynamically-created, injected media queries. */


var mediaQueriesForWebkitCompatibility = new Set();
/** Style tag that holds all of the dynamically-created media queries. */

var mediaQueryStyleNode;
/** A utility for calling matchMedia queries. */

var MediaMatcher = /*#__PURE__*/function () {
  function MediaMatcher(_platform) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MediaMatcher);

    this._platform = _platform;
    this._matchMedia = this._platform.isBrowser && window.matchMedia ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to
    // call it from a different scope.
    window.matchMedia.bind(window) : noopMatchMedia;
  }
  /**
   * Evaluates the given media query and returns the native MediaQueryList from which results
   * can be retrieved.
   * Confirms the layout engine will trigger for the selector query provided and returns the
   * MediaQueryList for the query provided.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MediaMatcher, [{
    key: "matchMedia",
    value: function matchMedia(query) {
      if (this._platform.WEBKIT) {
        createEmptyStyleRule(query);
      }

      return this._matchMedia(query);
    }
  }]);

  return MediaMatcher;
}();

MediaMatcher.ɵfac = function MediaMatcher_Factory(t) {
  return new (t || MediaMatcher)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]));
};

MediaMatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"])({
  factory: function MediaMatcher_Factory() {
    return new MediaMatcher(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]));
  },
  token: MediaMatcher,
  providedIn: "root"
});

MediaMatcher.ctorParameters = function () {
  return [{
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](MediaMatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_6__["Platform"]
    }];
  }, null);
})();
/**
 * For Webkit engines that only trigger the MediaQueryListListener when
 * there is at least one CSS selector for the respective media query.
 */


function createEmptyStyleRule(query) {
  if (mediaQueriesForWebkitCompatibility.has(query)) {
    return;
  }

  try {
    if (!mediaQueryStyleNode) {
      mediaQueryStyleNode = document.createElement('style');
      mediaQueryStyleNode.setAttribute('type', 'text/css');
      document.head.appendChild(mediaQueryStyleNode);
    }

    if (mediaQueryStyleNode.sheet) {
      mediaQueryStyleNode.sheet.insertRule("@media ".concat(query, " {.fx-query-test{ }}"), 0);
      mediaQueriesForWebkitCompatibility.add(query);
    }
  } catch (e) {
    console.error(e);
  }
}
/** No-op matchMedia replacement for non-browser platforms. */


function noopMatchMedia(query) {
  // Use `as any` here to avoid adding additional necessary properties for
  // the noop matcher.
  return {
    matches: query === 'all' || query === '',
    media: query,
    addListener: function addListener() {},
    removeListener: function removeListener() {}
  };
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Utility for checking the matching state of @media queries. */


var BreakpointObserver = /*#__PURE__*/function () {
  function BreakpointObserver(_mediaMatcher, _zone) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, BreakpointObserver);

    this._mediaMatcher = _mediaMatcher;
    this._zone = _zone;
    /**  A map of all media queries currently being listened for. */

    this._queries = new Map();
    /** A subject for all other observables to takeUntil based on. */

    this._destroySubject = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
  }
  /** Completes the active subject, signalling to all other observables to complete. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(BreakpointObserver, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroySubject.next();

      this._destroySubject.complete();
    }
    /**
     * Whether one or more media queries match the current viewport size.
     * @param value One or more media queries to check.
     * @returns Whether any of the media queries match.
     */

  }, {
    key: "isMatched",
    value: function isMatched(value) {
      var _this = this;

      var queries = splitQueries(Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__["coerceArray"])(value));
      return queries.some(function (mediaQuery) {
        return _this._registerQuery(mediaQuery).mql.matches;
      });
    }
    /**
     * Gets an observable of results for the given queries that will emit new results for any changes
     * in matching of the given queries.
     * @param value One or more media queries to check.
     * @returns A stream of matches for the given queries.
     */

  }, {
    key: "observe",
    value: function observe(value) {
      var _this2 = this;

      var queries = splitQueries(Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__["coerceArray"])(value));
      var observables = queries.map(function (query) {
        return _this2._registerQuery(query).observable;
      });
      var stateObservable = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["combineLatest"])(observables); // Emit the first state immediately, and then debounce the subsequent emissions.

      stateObservable = Object(rxjs__WEBPACK_IMPORTED_MODULE_4__["concat"])(stateObservable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["take"])(1)), stateObservable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["skip"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["debounceTime"])(0)));
      return stateObservable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (breakpointStates) {
        var response = {
          matches: false,
          breakpoints: {}
        };
        breakpointStates.forEach(function (_ref) {
          var matches = _ref.matches,
              query = _ref.query;
          response.matches = response.matches || matches;
          response.breakpoints[query] = matches;
        });
        return response;
      }));
    }
    /** Registers a specific query to be listened for. */

  }, {
    key: "_registerQuery",
    value: function _registerQuery(query) {
      var _this3 = this;

      // Only set up a new MediaQueryList if it is not already being listened for.
      if (this._queries.has(query)) {
        return this._queries.get(query);
      }

      var mql = this._mediaMatcher.matchMedia(query); // Create callback for match changes and add it is as a listener.


      var queryObservable = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"](function (observer) {
        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed
        // back into the zone because matchMedia is only included in Zone.js by loading the
        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not
        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js
        // patches it.
        var handler = function handler(e) {
          return _this3._zone.run(function () {
            return observer.next(e);
          });
        };

        mql.addListener(handler);
        return function () {
          mql.removeListener(handler);
        };
      }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["startWith"])(mql), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["map"])(function (_ref2) {
        var matches = _ref2.matches;
        return {
          query: query,
          matches: matches
        };
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this._destroySubject)); // Add the MediaQueryList to the set of queries.

      var output = {
        observable: queryObservable,
        mql: mql
      };

      this._queries.set(query, output);

      return output;
    }
  }]);

  return BreakpointObserver;
}();

BreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) {
  return new (t || BreakpointObserver)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](MediaMatcher), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]));
};

BreakpointObserver.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"])({
  factory: function BreakpointObserver_Factory() {
    return new BreakpointObserver(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(MediaMatcher), Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]));
  },
  token: BreakpointObserver,
  providedIn: "root"
});

BreakpointObserver.ctorParameters = function () {
  return [{
    type: MediaMatcher
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](BreakpointObserver, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: MediaMatcher
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgZone"]
    }];
  }, null);
})();
/**
 * Split each query string into separate query strings if two queries are provided as comma
 * separated.
 */


function splitQueries(queries) {
  return queries.map(function (query) {
    return query.split(',');
  }).reduce(function (a1, a2) {
    return a1.concat(a2);
  }).map(function (query) {
    return query.trim();
  });
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// PascalCase is being used as Breakpoints is used like an enum.
// tslint:disable-next-line:variable-name


var Breakpoints = {
  XSmall: '(max-width: 599.99px)',
  Small: '(min-width: 600px) and (max-width: 959.99px)',
  Medium: '(min-width: 960px) and (max-width: 1279.99px)',
  Large: '(min-width: 1280px) and (max-width: 1919.99px)',
  XLarge: '(min-width: 1920px)',
  Handset: '(max-width: 599.99px) and (orientation: portrait), ' + '(max-width: 959.99px) and (orientation: landscape)',
  Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',
  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',
  HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',
  TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',
  WebPortrait: '(min-width: 840px) and (orientation: portrait)',
  HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',
  TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',
  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ "1W2z":
/*!**************************************************************!*\
  !*** ./src/app/pages/user/edit-user/edit-user.component.css ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXIvZWRpdC11c2VyL2VkaXQtdXNlci5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "3OJA":
/*!**********************************************!*\
  !*** ./src/app/pages/user/user.component.ts ***!
  \**********************************************/
/*! exports provided: UserComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserComponent", function() { return UserComponent; });
/* harmony import */ var _raw_loader_user_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./user.component.html */ "QMMq");
/* harmony import */ var _user_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user.component.css */ "Tt67");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var UserComponent = /** @class */ (function () {
    function UserComponent() {
    }
    UserComponent.prototype.ngOnInit = function () {
    };
    UserComponent.ctorParameters = function () { return []; };
    UserComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-user',
            template: _raw_loader_user_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_user_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [])
    ], UserComponent);
    return UserComponent;
}());



/***/ }),

/***/ "5rky":
/*!*************************************************************!*\
  !*** ./src/app/pages/user/edit-user/edit-user.component.ts ***!
  \*************************************************************/
/*! exports provided: EditUserComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditUserComponent", function() { return EditUserComponent; });
/* harmony import */ var _raw_loader_edit_user_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./edit-user.component.html */ "/19h");
/* harmony import */ var _edit_user_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./edit-user.component.css */ "1W2z");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var EditUserComponent = /** @class */ (function () {
    function EditUserComponent() {
    }
    EditUserComponent.prototype.ngOnInit = function () {
    };
    EditUserComponent.ctorParameters = function () { return []; };
    EditUserComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-edit-user',
            template: _raw_loader_edit_user_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_edit_user_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [])
    ], EditUserComponent);
    return EditUserComponent;
}());



/***/ }),

/***/ "7nHy":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/discussion/discussion.component.html ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n    <div class=\"container-fluid\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-primary\">\n                        <h4 class=\"card-title \">Discussion</h4>\n                        <p class=\"card-category\"> A guide to achieving your goal</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <table class=\"table table-hover\">\n                            <tbody>\n                                <tr>\n                                    <td>12/06/2021</td>\n                                    <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">forum</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>12/06/2021</td>\n                                    <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">forum</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>10/06/2021</td>\n                                    <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                    </td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">forum</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>04/06/2021</td>\n                                    <td>Create 4 Invisible User Experiences you Never Knew About</td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">forum</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>04/06/2021</td>\n                                    <td>Create 4 Invisible User Experiences you Never Knew About</td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">forum</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  ");

/***/ }),

/***/ "8LU1":
/*!********************************************************!*\
  !*** ./node_modules/@angular/cdk/fesm2015/coercion.js ***!
  \********************************************************/
/*! exports provided: _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_isNumberValue", function() { return _isNumberValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceArray", function() { return coerceArray; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceBooleanProperty", function() { return coerceBooleanProperty; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceCssPixelValue", function() { return coerceCssPixelValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceElement", function() { return coerceElement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "coerceNumberProperty", function() { return coerceNumberProperty; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Coerces a data-bound value (typically a string) to a boolean. */

function coerceBooleanProperty(value) {
  return value != null && "".concat(value) !== 'false';
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function coerceNumberProperty(value) {
  var fallbackValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  return _isNumberValue(value) ? Number(value) : fallbackValue;
}
/**
 * Whether the provided value is considered a number.
 * @docs-private
 */


function _isNumberValue(value) {
  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,
  // and other non-number values as NaN, where Number just uses 0) but it considers the string
  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.
  return !isNaN(parseFloat(value)) && !isNaN(Number(value));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


function coerceArray(value) {
  return Array.isArray(value) ? value : [value];
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Coerces a value to a CSS pixel value. */


function coerceCssPixelValue(value) {
  if (value == null) {
    return '';
  }

  return typeof value === 'string' ? value : "".concat(value, "px");
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Coerces an ElementRef or an Element into an element.
 * Useful for APIs that can accept either a ref or the native element itself.
 */


function coerceElement(elementOrRef) {
  return elementOrRef instanceof _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"] ? elementOrRef.nativeElement : elementOrRef;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */




/***/ }),

/***/ "8Xqe":
/*!**********************************************************!*\
  !*** ./src/app/pages/discussion/discussion.component.ts ***!
  \**********************************************************/
/*! exports provided: DiscussionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiscussionComponent", function() { return DiscussionComponent; });
/* harmony import */ var _raw_loader_discussion_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./discussion.component.html */ "7nHy");
/* harmony import */ var _discussion_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discussion.component.css */ "gMzh");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var DiscussionComponent = /** @class */ (function () {
    function DiscussionComponent() {
    }
    DiscussionComponent.prototype.ngOnInit = function () {
    };
    DiscussionComponent.ctorParameters = function () { return []; };
    DiscussionComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-discussion',
            template: _raw_loader_discussion_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_discussion_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [])
    ], DiscussionComponent);
    return DiscussionComponent;
}());



/***/ }),

/***/ "BI0k":
/*!*********************************************************!*\
  !*** ./src/app/pages/resources/resources.component.css ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc291cmNlcy9yZXNvdXJjZXMuY29tcG9uZW50LmNzcyJ9 */");

/***/ }),

/***/ "CjF6":
/*!*********************************************************!*\
  !*** ./src/app/pages/dashboard/dashboard.component.css ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".user-type{\n    display: inline-block;\n    background-color: #f8a41d;\n    text-align: center;\n    vertical-align: middle;\n    font-size: 12px;\n    border-radius: 60px;\n    padding: 0 20px;\n    height: 20px;\n    line-height: 180%;\n}\n\n/* For mobile screens */\n\n@media screen and (max-width: 399px) {\n    .large-progress{\n        display: none\n    }\n}\n\n/* Non mobile screen */\n\n@media screen and (min-width: 400px) {\n    .mobile-progress{\n        display: none\n    }\n}\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7O0FBRUEsdUJBQXVCOztBQUN2QjtJQUNJO1FBQ0k7SUFDSjtBQUNKOztBQUVBLHNCQUFzQjs7QUFDdEI7SUFDSTtRQUNJO0lBQ0o7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLXR5cGV7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGE0MWQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgZm9udC1zaXplOiAxMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDYwcHg7XG4gICAgcGFkZGluZzogMCAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBsaW5lLWhlaWdodDogMTgwJTtcbn1cblxuLyogRm9yIG1vYmlsZSBzY3JlZW5zICovXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzOTlweCkge1xuICAgIC5sYXJnZS1wcm9ncmVzc3tcbiAgICAgICAgZGlzcGxheTogbm9uZVxuICAgIH1cbn1cblxuLyogTm9uIG1vYmlsZSBzY3JlZW4gKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQwMHB4KSB7XG4gICAgLm1vYmlsZS1wcm9ncmVzc3tcbiAgICAgICAgZGlzcGxheTogbm9uZVxuICAgIH1cbn1cbiJdfQ== */");

/***/ }),

/***/ "F3Tb":
/*!********************************************************!*\
  !*** ./src/app/pages/resources/resources.component.ts ***!
  \********************************************************/
/*! exports provided: ResourcesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResourcesComponent", function() { return ResourcesComponent; });
/* harmony import */ var _raw_loader_resources_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./resources.component.html */ "IsEm");
/* harmony import */ var _resources_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resources.component.css */ "BI0k");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ResourcesComponent = /** @class */ (function () {
    function ResourcesComponent() {
    }
    ResourcesComponent.prototype.ngOnInit = function () {
    };
    ResourcesComponent.ctorParameters = function () { return []; };
    ResourcesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-resources',
            template: _raw_loader_resources_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_resources_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [])
    ], ResourcesComponent);
    return ResourcesComponent;
}());



/***/ }),

/***/ "FKr1":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js ***!
  \**********************************************************************/
/*! exports provided: APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, ɵ0, ɵangular_material_src_material_core_core_a */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APR", function() { return APR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUG", function() { return AUG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationCurves", function() { return AnimationCurves; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationDurations", function() { return AnimationDurations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEC", function() { return DEC; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateAdapter", function() { return DateAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorStateMatcher", function() { return ErrorStateMatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FEB", function() { return FEB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JAN", function() { return JAN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JUL", function() { return JUL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JUN", function() { return JUN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAR", function() { return MAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MATERIAL_SANITY_CHECKS", function() { return MATERIAL_SANITY_CHECKS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATE_FORMATS", function() { return MAT_DATE_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATE_LOCALE", function() { return MAT_DATE_LOCALE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATE_LOCALE_FACTORY", function() { return MAT_DATE_LOCALE_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATE_LOCALE_PROVIDER", function() { return MAT_DATE_LOCALE_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_LABEL_GLOBAL_OPTIONS", function() { return MAT_LABEL_GLOBAL_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_NATIVE_DATE_FORMATS", function() { return MAT_NATIVE_DATE_FORMATS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_OPTGROUP", function() { return MAT_OPTGROUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_OPTION_PARENT_COMPONENT", function() { return MAT_OPTION_PARENT_COMPONENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_RIPPLE_GLOBAL_OPTIONS", function() { return MAT_RIPPLE_GLOBAL_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAY", function() { return MAY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCommonModule", function() { return MatCommonModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatLine", function() { return MatLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatLineModule", function() { return MatLineModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatLineSetter", function() { return MatLineSetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatNativeDateModule", function() { return MatNativeDateModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatOptgroup", function() { return MatOptgroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatOption", function() { return MatOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatOptionModule", function() { return MatOptionModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatOptionSelectionChange", function() { return MatOptionSelectionChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatPseudoCheckbox", function() { return MatPseudoCheckbox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatPseudoCheckboxModule", function() { return MatPseudoCheckboxModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatRipple", function() { return MatRipple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatRippleModule", function() { return MatRippleModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NOV", function() { return NOV; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NativeDateAdapter", function() { return NativeDateAdapter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NativeDateModule", function() { return NativeDateModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OCT", function() { return OCT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RippleRef", function() { return RippleRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RippleRenderer", function() { return RippleRenderer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SEP", function() { return SEP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShowOnDirtyErrorStateMatcher", function() { return ShowOnDirtyErrorStateMatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatOptgroupBase", function() { return _MatOptgroupBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatOptionBase", function() { return _MatOptionBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_countGroupLabelsBeforeOption", function() { return _countGroupLabelsBeforeOption; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_getOptionScrollPosition", function() { return _getOptionScrollPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultRippleAnimationConfig", function() { return defaultRippleAnimationConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinColor", function() { return mixinColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinDisableRipple", function() { return mixinDisableRipple; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinDisabled", function() { return mixinDisabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinErrorState", function() { return mixinErrorState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinInitialized", function() { return mixinInitialized; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinTabIndex", function() { return mixinTabIndex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLines", function() { return setLines; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0$1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_core_core_a", function() { return MATERIAL_SANITY_CHECKS_FACTORY; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_cdk__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk */ "xz+E");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");


















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Current version of Angular Material. */





var _c0 = ["*", [["mat-option"], ["ng-container"]]];
var _c1 = ["*", "mat-option, ng-container"];

function MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](0, "mat-pseudo-checkbox", 3);
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("state", ctx_r0.selected ? "checked" : "unchecked")("disabled", ctx_r0.disabled);
  }
}

var _c2 = ["*"];
var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["Version"]('10.2.4');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @docs-private */

var AnimationCurves = function AnimationCurves() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, AnimationCurves);
};

AnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';
AnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';
AnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';
AnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';
/** @docs-private */

var AnimationDurations = function AnimationDurations() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, AnimationDurations);
};

AnimationDurations.COMPLEX = '375ms';
AnimationDurations.ENTERING = '225ms';
AnimationDurations.EXITING = '195ms';
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Private version constant to circumvent test/build issues,
// i.e. avoid core to depend on the @angular/material primary entry-point
// Can be removed once the Material primary entry-point no longer
// re-exports all secondary entry-points

var VERSION$1 = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["Version"]('10.2.4');
/** @docs-private */

function MATERIAL_SANITY_CHECKS_FACTORY() {
  return true;
}
/** Injection token that configures whether the Material sanity checks are enabled. */


var MATERIAL_SANITY_CHECKS = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('mat-sanity-checks', {
  providedIn: 'root',
  factory: MATERIAL_SANITY_CHECKS_FACTORY
});
/**
 * Module that captures anything that should be loaded and/or run for *all* Angular Material
 * components. This includes Bidi, etc.
 *
 * This module should be imported to each top-level component module (e.g., MatTabsModule).
 */

var MatCommonModule = /*#__PURE__*/function () {
  function MatCommonModule(highContrastModeDetector, sanityChecks,
  /** @breaking-change 11.0.0 make document required */
  document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatCommonModule);

    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */
    this._hasDoneGlobalChecks = false;
    this._document = document; // While A11yModule also does this, we repeat it here to avoid importing A11yModule
    // in MatCommonModule.

    highContrastModeDetector._applyBodyHighContrastModeCssClasses(); // Note that `_sanityChecks` is typed to `any`, because AoT
    // throws an error if we use the `SanityChecks` type directly.


    this._sanityChecks = sanityChecks;

    if (!this._hasDoneGlobalChecks) {
      this._checkDoctypeIsDefined();

      this._checkThemeIsPresent();

      this._checkCdkVersionMatch();

      this._hasDoneGlobalChecks = true;
    }
  }
  /** Access injected document if available or fallback to global document reference */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(MatCommonModule, [{
    key: "_getDocument",
    value: function _getDocument() {
      var doc = this._document || document;
      return typeof doc === 'object' && doc ? doc : null;
    }
    /** Use defaultView of injected document if available or fallback to global window reference */

  }, {
    key: "_getWindow",
    value: function _getWindow() {
      var doc = this._getDocument();

      var win = (doc === null || doc === void 0 ? void 0 : doc.defaultView) || window;
      return typeof win === 'object' && win ? win : null;
    }
    /** Whether any sanity checks are enabled. */

  }, {
    key: "_checksAreEnabled",
    value: function _checksAreEnabled() {
      // TODO(crisbeto): we can't use `ngDevMode` here yet, because ViewEngine apps might not support
      // it. Since these checks can have performance implications and they aren't tree shakeable
      // in their current form, we can leave the `isDevMode` check in for now.
      // tslint:disable-next-line:ban
      return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["isDevMode"])() && !this._isTestEnv();
    }
    /** Whether the code is running in tests. */

  }, {
    key: "_isTestEnv",
    value: function _isTestEnv() {
      var window = this._getWindow();

      return window && (window.__karma__ || window.jasmine);
    }
  }, {
    key: "_checkDoctypeIsDefined",
    value: function _checkDoctypeIsDefined() {
      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.doctype);

      var document = this._getDocument();

      if (isEnabled && document && !document.doctype) {
        console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');
      }
    }
  }, {
    key: "_checkThemeIsPresent",
    value: function _checkThemeIsPresent() {
      // We need to assert that the `body` is defined, because these checks run very early
      // and the `body` won't be defined if the consumer put their scripts in the `head`.
      var isDisabled = !this._checksAreEnabled() || this._sanityChecks === false || !this._sanityChecks.theme;

      var document = this._getDocument();

      if (isDisabled || !document || !document.body || typeof getComputedStyle !== 'function') {
        return;
      }

      var testElement = document.createElement('div');
      testElement.classList.add('mat-theme-loaded-marker');
      document.body.appendChild(testElement);
      var computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in
      // Firefox, the computed style is null if an application is running inside of a hidden iframe.
      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

      if (computedStyle && computedStyle.display !== 'none') {
        console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');
      }

      document.body.removeChild(testElement);
    }
    /** Checks whether the material version matches the cdk version */

  }, {
    key: "_checkCdkVersionMatch",
    value: function _checkCdkVersionMatch() {
      var isEnabled = this._checksAreEnabled() && (this._sanityChecks === true || this._sanityChecks.version);

      if (isEnabled && VERSION$1.full !== _angular_cdk__WEBPACK_IMPORTED_MODULE_10__["VERSION"].full) {
        console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' + 'the Angular CDK version (' + _angular_cdk__WEBPACK_IMPORTED_MODULE_10__["VERSION"].full + ').\n' + 'Please ensure the versions of these two packages exactly match.');
      }
    }
  }]);

  return MatCommonModule;
}();

MatCommonModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatCommonModule
});
MatCommonModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatCommonModule_Factory(t) {
    return new (t || MatCommonModule)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["HighContrastModeDetector"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](MATERIAL_SANITY_CHECKS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"], 8));
  },
  imports: [[_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["BidiModule"]], _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["BidiModule"]]
});

MatCommonModule.ctorParameters = function () {
  return [{
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["HighContrastModeDetector"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MATERIAL_SANITY_CHECKS]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
    }]
  }];
};

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatCommonModule, {
    imports: function imports() {
      return [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["BidiModule"]];
    },
    exports: function exports() {
      return [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["BidiModule"]];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatCommonModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["BidiModule"]],
      exports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["BidiModule"]]
    }]
  }], function () {
    return [{
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["HighContrastModeDetector"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MATERIAL_SANITY_CHECKS]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Mixin to augment a directive with a `disabled` property. */


function mixinDisabled(base) {
  return /*#__PURE__*/function (_base) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(_class, _base);

    var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(_class);

    function _class() {
      var _this;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _class);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      _this._disabled = false;
      return _this;
    }

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(_class, [{
      key: "disabled",
      get: function get() {
        return this._disabled;
      },
      set: function set(value) {
        this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__["coerceBooleanProperty"])(value);
      }
    }]);

    return _class;
  }(base);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Mixin to augment a directive with a `color` property. */


function mixinColor(base, defaultColor) {
  return /*#__PURE__*/function (_base2) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(_class2, _base2);

    var _super2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(_class2);

    function _class2() {
      var _this2;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _class2);

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      _this2 = _super2.call.apply(_super2, [this].concat(args));
      _this2.defaultColor = defaultColor; // Set the default color that can be specified from the mixin.

      _this2.color = defaultColor;
      return _this2;
    }

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(_class2, [{
      key: "color",
      get: function get() {
        return this._color;
      },
      set: function set(value) {
        var colorPalette = value || this.defaultColor;

        if (colorPalette !== this._color) {
          if (this._color) {
            this._elementRef.nativeElement.classList.remove("mat-".concat(this._color));
          }

          if (colorPalette) {
            this._elementRef.nativeElement.classList.add("mat-".concat(colorPalette));
          }

          this._color = colorPalette;
        }
      }
    }]);

    return _class2;
  }(base);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Mixin to augment a directive with a `disableRipple` property. */


function mixinDisableRipple(base) {
  var Mixin = /*#__PURE__*/function (_base3) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(Mixin, _base3);

    var _super3 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(Mixin);

    function Mixin() {
      var _this3;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, Mixin);

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      _this3 = _super3.call.apply(_super3, [this].concat(args));
      _this3._disableRipple = false;
      return _this3;
    }
    /** Whether the ripple effect is disabled or not. */


    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Mixin, [{
      key: "disableRipple",
      get: function get() {
        return this._disableRipple;
      },
      set: function set(value) {
        this._disableRipple = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__["coerceBooleanProperty"])(value);
      }
    }]);

    return Mixin;
  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct
  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.
  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.


  return Mixin;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Mixin to augment a directive with a `tabIndex` property. */


function mixinTabIndex(base) {
  var defaultTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  // Note: We cast `base` to `unknown` and then `Constructor`. It could be an abstract class,
  // but given we `extend` it from another class, we can assume a constructor being accessible.
  var Mixin = /*#__PURE__*/function (_base4) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(Mixin, _base4);

    var _super4 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(Mixin);

    function Mixin() {
      var _this4;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, Mixin);

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      _this4 = _super4.call.apply(_super4, [this].concat(args));
      _this4._tabIndex = defaultTabIndex;
      _this4.defaultTabIndex = defaultTabIndex;
      return _this4;
    }

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Mixin, [{
      key: "tabIndex",
      get: function get() {
        return this.disabled ? -1 : this._tabIndex;
      },
      set: function set(value) {
        // If the specified tabIndex value is null or undefined, fall back to the default value.
        this._tabIndex = value != null ? Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__["coerceNumberProperty"])(value) : this.defaultTabIndex;
      }
    }]);

    return Mixin;
  }(base); // Since we don't directly extend from `base` with it's original types, and we instruct
  // TypeScript that `T` actually is instantiatable through `new`, the types don't overlap.
  // This is a limitation in TS as abstract classes cannot be typed properly dynamically.


  return Mixin;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Mixin to augment a directive with updateErrorState method.
 * For component with `errorState` and need to update `errorState`.
 */


function mixinErrorState(base) {
  return /*#__PURE__*/function (_base5) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(_class3, _base5);

    var _super5 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(_class3);

    function _class3() {
      var _this5;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _class3);

      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      _this5 = _super5.call.apply(_super5, [this].concat(args));
      /** Whether the component is in an error state. */

      _this5.errorState = false;
      /**
       * Stream that emits whenever the state of the input changes such that the wrapping
       * `MatFormField` needs to run change detection.
       */

      _this5.stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Subject"]();
      return _this5;
    }

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(_class3, [{
      key: "updateErrorState",
      value: function updateErrorState() {
        var oldState = this.errorState;
        var parent = this._parentFormGroup || this._parentForm;
        var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;
        var control = this.ngControl ? this.ngControl.control : null;
        var newState = matcher.isErrorState(control, parent);

        if (newState !== oldState) {
          this.errorState = newState;
          this.stateChanges.next();
        }
      }
    }]);

    return _class3;
  }(base);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */


function mixinInitialized(base) {
  return /*#__PURE__*/function (_base6) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(_class4, _base6);

    var _super6 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(_class4);

    function _class4() {
      var _this6;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _class4);

      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }

      _this6 = _super6.call.apply(_super6, [this].concat(args));
      /** Whether this directive has been marked as initialized. */

      _this6._isInitialized = false;
      /**
       * List of subscribers that subscribed before the directive was initialized. Should be notified
       * during _markInitialized. Set to null after pending subscribers are notified, and should
       * not expect to be populated after.
       */

      _this6._pendingSubscribers = [];
      /**
       * Observable stream that emits when the directive initializes. If already initialized, the
       * subscriber is stored to be notified once _markInitialized is called.
       */

      _this6.initialized = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Observable"](function (subscriber) {
        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify
        // when _markInitialized is called.
        if (_this6._isInitialized) {
          _this6._notifySubscriber(subscriber);
        } else {
          _this6._pendingSubscribers.push(subscriber);
        }
      });
      return _this6;
    }
    /**
     * Marks the state as initialized and notifies pending subscribers. Should be called at the end
     * of ngOnInit.
     * @docs-private
     */


    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(_class4, [{
      key: "_markInitialized",
      value: function _markInitialized() {
        if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');
        }

        this._isInitialized = true;

        this._pendingSubscribers.forEach(this._notifySubscriber);

        this._pendingSubscribers = null;
      }
      /** Emits and completes the subscriber stream (should only emit once). */

    }, {
      key: "_notifySubscriber",
      value: function _notifySubscriber(subscriber) {
        subscriber.next();
        subscriber.complete();
      }
    }]);

    return _class4;
  }(base);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** InjectionToken for datepicker that can be used to override default locale code. */


var MAT_DATE_LOCALE = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MAT_DATE_LOCALE', {
  providedIn: 'root',
  factory: MAT_DATE_LOCALE_FACTORY
});
/** @docs-private */

function MAT_DATE_LOCALE_FACTORY() {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["inject"])(_angular_core__WEBPACK_IMPORTED_MODULE_7__["LOCALE_ID"]);
}
/**
 * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.
 * If you are importing and providing this in your code you can simply remove it.
 * @deprecated
 * @breaking-change 8.0.0
 */


var MAT_DATE_LOCALE_PROVIDER = {
  provide: MAT_DATE_LOCALE,
  useExisting: _angular_core__WEBPACK_IMPORTED_MODULE_7__["LOCALE_ID"]
};
/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */

var DateAdapter = /*#__PURE__*/function () {
  function DateAdapter() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, DateAdapter);

    this._localeChanges = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Subject"]();
    /** A stream that emits when the locale changes. */

    this.localeChanges = this._localeChanges;
  }
  /**
   * Given a potential date object, returns that same date object if it is
   * a valid date, or `null` if it's not a valid date.
   * @param obj The object to check.
   * @returns A date or `null`.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(DateAdapter, [{
    key: "getValidDateOrNull",
    value: function getValidDateOrNull(obj) {
      return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;
    }
    /**
     * Attempts to deserialize a value to a valid date object. This is different from parsing in that
     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601
     * string). The default implementation does not allow any deserialization, it simply checks that
     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this
     * method on all of its `@Input()` properties that accept dates. It is therefore possible to
     * support passing values from your backend directly to these properties by overriding this method
     * to also deserialize the format used by your backend.
     * @param value The value to be deserialized into a date object.
     * @returns The deserialized date object, either a valid date, null if the value can be
     *     deserialized into a null date (e.g. the empty string), or an invalid date.
     */

  }, {
    key: "deserialize",
    value: function deserialize(value) {
      if (value == null || this.isDateInstance(value) && this.isValid(value)) {
        return value;
      }

      return this.invalid();
    }
    /**
     * Sets the locale used for all dates.
     * @param locale The new locale.
     */

  }, {
    key: "setLocale",
    value: function setLocale(locale) {
      this.locale = locale;

      this._localeChanges.next();
    }
    /**
     * Compares two dates.
     * @param first The first date to compare.
     * @param second The second date to compare.
     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,
     *     a number greater than 0 if the first date is later.
     */

  }, {
    key: "compareDate",
    value: function compareDate(first, second) {
      return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);
    }
    /**
     * Checks if two dates are equal.
     * @param first The first date to check.
     * @param second The second date to check.
     * @returns Whether the two dates are equal.
     *     Null dates are considered equal to other null dates.
     */

  }, {
    key: "sameDate",
    value: function sameDate(first, second) {
      if (first && second) {
        var firstValid = this.isValid(first);
        var secondValid = this.isValid(second);

        if (firstValid && secondValid) {
          return !this.compareDate(first, second);
        }

        return firstValid == secondValid;
      }

      return first == second;
    }
    /**
     * Clamp the given date between min and max dates.
     * @param date The date to clamp.
     * @param min The minimum value to allow. If null or omitted no min is enforced.
     * @param max The maximum value to allow. If null or omitted no max is enforced.
     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,
     *     otherwise `date`.
     */

  }, {
    key: "clampDate",
    value: function clampDate(date, min, max) {
      if (min && this.compareDate(date, min) < 0) {
        return min;
      }

      if (max && this.compareDate(date, max) > 0) {
        return max;
      }

      return date;
    }
  }]);

  return DateAdapter;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MAT_DATE_FORMATS = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('mat-date-formats');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO(mmalerba): Remove when we no longer support safari 9.

/** Whether the browser supports the Intl API. */

var SUPPORTS_INTL_API; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can
// cause IE to throw. These cases are tied to particular versions of Windows and can happen if
// the consumer is providing a polyfilled `Map`. See:
// https://github.com/Microsoft/ChakraCore/issues/3189
// https://github.com/angular/components/issues/15687

try {
  SUPPORTS_INTL_API = typeof Intl != 'undefined';
} catch (_a) {
  SUPPORTS_INTL_API = false;
}
/** The default month names to use if Intl API is not available. */


var DEFAULT_MONTH_NAMES = {
  'long': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']
};

var ɵ0 = function ɵ0(i) {
  return String(i + 1);
};
/** The default date names to use if Intl API is not available. */


var DEFAULT_DATE_NAMES = range(31, ɵ0);
/** The default day of the week names to use if Intl API is not available. */

var DEFAULT_DAY_OF_WEEK_NAMES = {
  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']
};
/**
 * Matches strings that have the form of a valid RFC 3339 string
 * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date
 * because the regex will match strings an with out of bounds month, date, etc.
 */

var ISO_8601_REGEX = /^\d{4}-\d{2}-\d{2}(?:T\d{2}:\d{2}:\d{2}(?:\.\d+)?(?:Z|(?:(?:\+|-)\d{2}:\d{2}))?)?$/;
/** Creates an array and fills it with values. */

function range(length, valueFunction) {
  var valuesArray = Array(length);

  for (var i = 0; i < length; i++) {
    valuesArray[i] = valueFunction(i);
  }

  return valuesArray;
}
/** Adapts the native JS Date for use with cdk-based components that work with dates. */


var NativeDateAdapter = /*#__PURE__*/function (_DateAdapter) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(NativeDateAdapter, _DateAdapter);

  var _super7 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(NativeDateAdapter);

  function NativeDateAdapter(matDateLocale, platform) {
    var _thisSuper, _this7;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, NativeDateAdapter);

    _this7 = _super7.call(this);
    /**
     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.
     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off
     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`
     * will produce `'8/13/1800'`.
     *
     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now
     * getting the string representation of a Date object from its utc representation. We're keeping
     * it here for sometime, just for precaution, in case we decide to revert some of these changes
     * though.
     */

    _this7.useUtcForDisplay = true;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])((_thisSuper = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this7), Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(NativeDateAdapter.prototype)), "setLocale", _thisSuper).call(_thisSuper, matDateLocale); // IE does its own time zone correction, so we disable this on IE.


    _this7.useUtcForDisplay = !platform.TRIDENT;
    _this7._clampDate = platform.TRIDENT || platform.EDGE;
    return _this7;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(NativeDateAdapter, [{
    key: "getYear",
    value: function getYear(date) {
      return date.getFullYear();
    }
  }, {
    key: "getMonth",
    value: function getMonth(date) {
      return date.getMonth();
    }
  }, {
    key: "getDate",
    value: function getDate(date) {
      return date.getDate();
    }
  }, {
    key: "getDayOfWeek",
    value: function getDayOfWeek(date) {
      return date.getDay();
    }
  }, {
    key: "getMonthNames",
    value: function getMonthNames(style) {
      var _this8 = this;

      if (SUPPORTS_INTL_API) {
        var dtf = new Intl.DateTimeFormat(this.locale, {
          month: style,
          timeZone: 'utc'
        });
        return range(12, function (i) {
          return _this8._stripDirectionalityCharacters(_this8._format(dtf, new Date(2017, i, 1)));
        });
      }

      return DEFAULT_MONTH_NAMES[style];
    }
  }, {
    key: "getDateNames",
    value: function getDateNames() {
      var _this9 = this;

      if (SUPPORTS_INTL_API) {
        var dtf = new Intl.DateTimeFormat(this.locale, {
          day: 'numeric',
          timeZone: 'utc'
        });
        return range(31, function (i) {
          return _this9._stripDirectionalityCharacters(_this9._format(dtf, new Date(2017, 0, i + 1)));
        });
      }

      return DEFAULT_DATE_NAMES;
    }
  }, {
    key: "getDayOfWeekNames",
    value: function getDayOfWeekNames(style) {
      var _this10 = this;

      if (SUPPORTS_INTL_API) {
        var dtf = new Intl.DateTimeFormat(this.locale, {
          weekday: style,
          timeZone: 'utc'
        });
        return range(7, function (i) {
          return _this10._stripDirectionalityCharacters(_this10._format(dtf, new Date(2017, 0, i + 1)));
        });
      }

      return DEFAULT_DAY_OF_WEEK_NAMES[style];
    }
  }, {
    key: "getYearName",
    value: function getYearName(date) {
      if (SUPPORTS_INTL_API) {
        var dtf = new Intl.DateTimeFormat(this.locale, {
          year: 'numeric',
          timeZone: 'utc'
        });
        return this._stripDirectionalityCharacters(this._format(dtf, date));
      }

      return String(this.getYear(date));
    }
  }, {
    key: "getFirstDayOfWeek",
    value: function getFirstDayOfWeek() {
      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.
      return 0;
    }
  }, {
    key: "getNumDaysInMonth",
    value: function getNumDaysInMonth(date) {
      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));
    }
  }, {
    key: "clone",
    value: function clone(date) {
      return new Date(date.getTime());
    }
  }, {
    key: "createDate",
    value: function createDate(year, month, date) {
      if (typeof ngDevMode === 'undefined' || ngDevMode) {
        // Check for invalid month and date (except upper bound on date which we have to check after
        // creating the Date).
        if (month < 0 || month > 11) {
          throw Error("Invalid month index \"".concat(month, "\". Month index has to be between 0 and 11."));
        }

        if (date < 1) {
          throw Error("Invalid date \"".concat(date, "\". Date has to be greater than 0."));
        }
      }

      var result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow


      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error("Invalid date \"".concat(date, "\" for month with index \"").concat(month, "\"."));
      }

      return result;
    }
  }, {
    key: "today",
    value: function today() {
      return new Date();
    }
  }, {
    key: "parse",
    value: function parse(value) {
      // We have no way using the native JS Date to set the parse format or locale, so we ignore these
      // parameters.
      if (typeof value == 'number') {
        return new Date(value);
      }

      return value ? new Date(Date.parse(value)) : null;
    }
  }, {
    key: "format",
    value: function format(date, displayFormat) {
      if (!this.isValid(date)) {
        throw Error('NativeDateAdapter: Cannot format invalid date.');
      }

      if (SUPPORTS_INTL_API) {
        // On IE and Edge the i18n API will throw a hard error that can crash the entire app
        // if we attempt to format a date whose year is less than 1 or greater than 9999.
        if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {
          date = this.clone(date);
          date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));
        }

        displayFormat = Object.assign(Object.assign({}, displayFormat), {
          timeZone: 'utc'
        });
        var dtf = new Intl.DateTimeFormat(this.locale, displayFormat);
        return this._stripDirectionalityCharacters(this._format(dtf, date));
      }

      return this._stripDirectionalityCharacters(date.toDateString());
    }
  }, {
    key: "addCalendarYears",
    value: function addCalendarYears(date, years) {
      return this.addCalendarMonths(date, years * 12);
    }
  }, {
    key: "addCalendarMonths",
    value: function addCalendarMonths(date, months) {
      var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new
      // month. In this case we want to go to the last day of the desired month.
      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't
      // guarantee this.


      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {
        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);
      }

      return newDate;
    }
  }, {
    key: "addCalendarDays",
    value: function addCalendarDays(date, days) {
      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);
    }
  }, {
    key: "toIso8601",
    value: function toIso8601(date) {
      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');
    }
    /**
     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings
     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an
     * invalid date for all other values.
     */

  }, {
    key: "deserialize",
    value: function deserialize(value) {
      if (typeof value === 'string') {
        if (!value) {
          return null;
        } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the
        // string is the right format first.


        if (ISO_8601_REGEX.test(value)) {
          var date = new Date(value);

          if (this.isValid(date)) {
            return date;
          }
        }
      }

      return Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(NativeDateAdapter.prototype), "deserialize", this).call(this, value);
    }
  }, {
    key: "isDateInstance",
    value: function isDateInstance(obj) {
      return obj instanceof Date;
    }
  }, {
    key: "isValid",
    value: function isValid(date) {
      return !isNaN(date.getTime());
    }
  }, {
    key: "invalid",
    value: function invalid() {
      return new Date(NaN);
    }
    /** Creates a date but allows the month and date to overflow. */

  }, {
    key: "_createDateWithOverflow",
    value: function _createDateWithOverflow(year, month, date) {
      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.
      // To work around this we use `setFullYear` and `setHours` instead.
      var d = new Date();
      d.setFullYear(year, month, date);
      d.setHours(0, 0, 0, 0);
      return d;
    }
    /**
     * Pads a number to make it two digits.
     * @param n The number to pad.
     * @returns The padded number.
     */

  }, {
    key: "_2digit",
    value: function _2digit(n) {
      return ('00' + n).slice(-2);
    }
    /**
     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while
     * other browsers do not. We remove them to make output consistent and because they interfere with
     * date parsing.
     * @param str The string to strip direction characters from.
     * @returns The stripped string.
     */

  }, {
    key: "_stripDirectionalityCharacters",
    value: function _stripDirectionalityCharacters(str) {
      return str.replace(/[\u200e\u200f]/g, '');
    }
    /**
     * When converting Date object to string, javascript built-in functions may return wrong
     * results because it applies its internal DST rules. The DST rules around the world change
     * very frequently, and the current valid rule is not always valid in previous years though.
     * We work around this problem building a new Date object which has its internal UTC
     * representation with the local date and time.
     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have
     *    timeZone set to 'utc' to work fine.
     * @param date Date from which we want to get the string representation according to dtf
     * @returns A Date object with its UTC representation based on the passed in date info
     */

  }, {
    key: "_format",
    value: function _format(dtf, date) {
      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.
      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.
      var d = new Date();
      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());
      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());
      return dtf.format(d);
    }
  }]);

  return NativeDateAdapter;
}(DateAdapter);

NativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {
  return new (t || NativeDateAdapter)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](MAT_DATE_LOCALE, 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]));
};

NativeDateAdapter.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
  token: NativeDateAdapter,
  factory: NativeDateAdapter.ɵfac
});

NativeDateAdapter.ctorParameters = function () {
  return [{
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_DATE_LOCALE]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](NativeDateAdapter, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injectable"]
  }], function () {
    return [{
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_DATE_LOCALE]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MAT_NATIVE_DATE_FORMATS = {
  parse: {
    dateInput: null
  },
  display: {
    dateInput: {
      year: 'numeric',
      month: 'numeric',
      day: 'numeric'
    },
    monthYearLabel: {
      year: 'numeric',
      month: 'short'
    },
    dateA11yLabel: {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    },
    monthYearA11yLabel: {
      year: 'numeric',
      month: 'long'
    }
  }
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var NativeDateModule = function NativeDateModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, NativeDateModule);
};

NativeDateModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: NativeDateModule
});
NativeDateModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function NativeDateModule_Factory(t) {
    return new (t || NativeDateModule)();
  },
  providers: [{
    provide: DateAdapter,
    useClass: NativeDateAdapter
  }],
  imports: [[_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["PlatformModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](NativeDateModule, {
    imports: function imports() {
      return [_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["PlatformModule"]];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](NativeDateModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["PlatformModule"]],
      providers: [{
        provide: DateAdapter,
        useClass: NativeDateAdapter
      }]
    }]
  }], null, null);
})();

var ɵ0$1 = MAT_NATIVE_DATE_FORMATS;

var MatNativeDateModule = function MatNativeDateModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatNativeDateModule);
};

MatNativeDateModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatNativeDateModule
});
MatNativeDateModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatNativeDateModule_Factory(t) {
    return new (t || MatNativeDateModule)();
  },
  providers: [{
    provide: MAT_DATE_FORMATS,
    useValue: ɵ0$1
  }],
  imports: [[NativeDateModule]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatNativeDateModule, {
    imports: [NativeDateModule]
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatNativeDateModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [NativeDateModule],
      providers: [{
        provide: MAT_DATE_FORMATS,
        useValue: ɵ0$1
      }]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Error state matcher that matches when a control is invalid and dirty. */


var ShowOnDirtyErrorStateMatcher = /*#__PURE__*/function () {
  function ShowOnDirtyErrorStateMatcher() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ShowOnDirtyErrorStateMatcher);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ShowOnDirtyErrorStateMatcher, [{
    key: "isErrorState",
    value: function isErrorState(control, form) {
      return !!(control && control.invalid && (control.dirty || form && form.submitted));
    }
  }]);

  return ShowOnDirtyErrorStateMatcher;
}();

ShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {
  return new (t || ShowOnDirtyErrorStateMatcher)();
};

ShowOnDirtyErrorStateMatcher.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({
  token: ShowOnDirtyErrorStateMatcher,
  factory: ShowOnDirtyErrorStateMatcher.ɵfac
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](ShowOnDirtyErrorStateMatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injectable"]
  }], null, null);
})();
/** Provider that defines how form controls behave with regards to displaying error messages. */


var ErrorStateMatcher = /*#__PURE__*/function () {
  function ErrorStateMatcher() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ErrorStateMatcher);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ErrorStateMatcher, [{
    key: "isErrorState",
    value: function isErrorState(control, form) {
      return !!(control && control.invalid && (control.touched || form && form.submitted));
    }
  }]);

  return ErrorStateMatcher;
}();

ErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {
  return new (t || ErrorStateMatcher)();
};

ErrorStateMatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"])({
  factory: function ErrorStateMatcher_Factory() {
    return new ErrorStateMatcher();
  },
  token: ErrorStateMatcher,
  providedIn: "root"
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](ErrorStateMatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Shared directive to count lines inside a text area, such as a list item.
 * Line elements can be extracted with a @ContentChildren(MatLine) query, then
 * counted by checking the query list's length.
 */


var MatLine = function MatLine() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatLine);
};

MatLine.ɵfac = function MatLine_Factory(t) {
  return new (t || MatLine)();
};

MatLine.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatLine,
  selectors: [["", "mat-line", ""], ["", "matLine", ""]],
  hostAttrs: [1, "mat-line"]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatLine, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[mat-line], [matLine]',
      host: {
        'class': 'mat-line'
      }
    }]
  }], null, null);
})();
/**
 * Helper that takes a query list of lines and sets the correct class on the host.
 * @docs-private
 */


function setLines(lines, element) {
  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mat';
  // Note: doesn't need to unsubscribe, because `changes`
  // gets completed by Angular when the view is destroyed.
  lines.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_15__["startWith"])(lines)).subscribe(function (_ref) {
    var length = _ref.length;
    setClass(element, "".concat(prefix, "-2-line"), false);
    setClass(element, "".concat(prefix, "-3-line"), false);
    setClass(element, "".concat(prefix, "-multi-line"), false);

    if (length === 2 || length === 3) {
      setClass(element, "".concat(prefix, "-").concat(length, "-line"), true);
    } else if (length > 3) {
      setClass(element, "".concat(prefix, "-multi-line"), true);
    }
  });
}
/** Adds or removes a class from an element. */


function setClass(element, className, isAdd) {
  var classList = element.nativeElement.classList;
  isAdd ? classList.add(className) : classList.remove(className);
}
/**
 * Helper that takes a query list of lines and sets the correct class on the host.
 * @docs-private
 * @deprecated Use `setLines` instead.
 * @breaking-change 8.0.0
 */


var MatLineSetter = function MatLineSetter(lines, element) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatLineSetter);

  setLines(lines, element);
};

var MatLineModule = function MatLineModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatLineModule);
};

MatLineModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatLineModule
});
MatLineModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatLineModule_Factory(t) {
    return new (t || MatLineModule)();
  },
  imports: [[MatCommonModule], MatCommonModule]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatLineModule, {
    declarations: [MatLine],
    imports: [MatCommonModule],
    exports: [MatLine, MatCommonModule]
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatLineModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [MatCommonModule],
      exports: [MatLine, MatCommonModule],
      declarations: [MatLine]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Reference to a previously launched ripple element.
 */


var RippleRef = /*#__PURE__*/function () {
  function RippleRef(_renderer,
  /** Reference to the ripple HTML element. */
  element,
  /** Ripple configuration used for the ripple. */
  config) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, RippleRef);

    this._renderer = _renderer;
    this.element = element;
    this.config = config;
    /** Current state of the ripple. */

    this.state = 3
    /* HIDDEN */
    ;
  }
  /** Fades out the ripple element. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RippleRef, [{
    key: "fadeOut",
    value: function fadeOut() {
      this._renderer.fadeOutRipple(this);
    }
  }]);

  return RippleRef;
}();
/**
 * Default ripple animation configuration for ripples without an explicit
 * animation config specified.
 */


var defaultRippleAnimationConfig = {
  enterDuration: 450,
  exitDuration: 400
};
/**
 * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch
 * events to avoid synthetic mouse events.
 */

var ignoreMouseEventsTimeout = 800;
/** Options that apply to all the event listeners that are bound by the ripple renderer. */

var passiveEventOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["normalizePassiveListenerOptions"])({
  passive: true
});
/** Events that signal that the pointer is down. */

var pointerDownEvents = ['mousedown', 'touchstart'];
/** Events that signal that the pointer is up. */

var pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];
/**
 * Helper service that performs DOM manipulations. Not intended to be used outside this module.
 * The constructor takes a reference to the ripple directive's host element and a map of DOM
 * event handlers to be installed on the element that triggers ripple animations.
 * This will eventually become a custom renderer once Angular support exists.
 * @docs-private
 */

var RippleRenderer = /*#__PURE__*/function () {
  function RippleRenderer(_target, _ngZone, elementOrElementRef, platform) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, RippleRenderer);

    this._target = _target;
    this._ngZone = _ngZone;
    /** Whether the pointer is currently down or not. */

    this._isPointerDown = false;
    /** Set of currently active ripple references. */

    this._activeRipples = new Set();
    /** Whether pointer-up event listeners have been registered. */

    this._pointerUpEventsRegistered = false; // Only do anything if we're on the browser.

    if (platform.isBrowser) {
      this._containerElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__["coerceElement"])(elementOrElementRef);
    }
  }
  /**
   * Fades in a ripple at the given coordinates.
   * @param x Coordinate within the element, along the X axis at which to start the ripple.
   * @param y Coordinate within the element, along the Y axis at which to start the ripple.
   * @param config Extra ripple options.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(RippleRenderer, [{
    key: "fadeInRipple",
    value: function fadeInRipple(x, y) {
      var _this11 = this;

      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();

      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);

      if (config.centered) {
        x = containerRect.left + containerRect.width / 2;
        y = containerRect.top + containerRect.height / 2;
      }

      var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);
      var offsetX = x - containerRect.left;
      var offsetY = y - containerRect.top;
      var duration = animationConfig.enterDuration;
      var ripple = document.createElement('div');
      ripple.classList.add('mat-ripple-element');
      ripple.style.left = "".concat(offsetX - radius, "px");
      ripple.style.top = "".concat(offsetY - radius, "px");
      ripple.style.height = "".concat(radius * 2, "px");
      ripple.style.width = "".concat(radius * 2, "px"); // If a custom color has been specified, set it as inline style. If no color is
      // set, the default color will be applied through the ripple theme styles.

      if (config.color != null) {
        ripple.style.backgroundColor = config.color;
      }

      ripple.style.transitionDuration = "".concat(duration, "ms");

      this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created
      // ripple elements. This is critical because then the `scale` would not animate properly.


      enforceStyleRecalculation(ripple);
      ripple.style.transform = 'scale(1)'; // Exposed reference to the ripple that will be returned.

      var rippleRef = new RippleRef(this, ripple, config);
      rippleRef.state = 0
      /* FADING_IN */
      ; // Add the ripple reference to the list of all active ripples.

      this._activeRipples.add(rippleRef);

      if (!config.persistent) {
        this._mostRecentTransientRipple = rippleRef;
      } // Wait for the ripple element to be completely faded in.
      // Once it's faded in, the ripple can be hidden immediately if the mouse is released.


      this._runTimeoutOutsideZone(function () {
        var isMostRecentTransientRipple = rippleRef === _this11._mostRecentTransientRipple;
        rippleRef.state = 1
        /* VISIBLE */
        ; // When the timer runs out while the user has kept their pointer down, we want to
        // keep only the persistent ripples and the latest transient ripple. We do this,
        // because we don't want stacked transient ripples to appear after their enter
        // animation has finished.

        if (!config.persistent && (!isMostRecentTransientRipple || !_this11._isPointerDown)) {
          rippleRef.fadeOut();
        }
      }, duration);

      return rippleRef;
    }
    /** Fades out a ripple reference. */

  }, {
    key: "fadeOutRipple",
    value: function fadeOutRipple(rippleRef) {
      var wasActive = this._activeRipples.delete(rippleRef);

      if (rippleRef === this._mostRecentTransientRipple) {
        this._mostRecentTransientRipple = null;
      } // Clear out the cached bounding rect if we have no more ripples.


      if (!this._activeRipples.size) {
        this._containerRect = null;
      } // For ripples that are not active anymore, don't re-run the fade-out animation.


      if (!wasActive) {
        return;
      }

      var rippleEl = rippleRef.element;
      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);
      rippleEl.style.transitionDuration = "".concat(animationConfig.exitDuration, "ms");
      rippleEl.style.opacity = '0';
      rippleRef.state = 2
      /* FADING_OUT */
      ; // Once the ripple faded out, the ripple can be safely removed from the DOM.

      this._runTimeoutOutsideZone(function () {
        rippleRef.state = 3
        /* HIDDEN */
        ;
        rippleEl.parentNode.removeChild(rippleEl);
      }, animationConfig.exitDuration);
    }
    /** Fades out all currently active ripples. */

  }, {
    key: "fadeOutAll",
    value: function fadeOutAll() {
      this._activeRipples.forEach(function (ripple) {
        return ripple.fadeOut();
      });
    }
    /** Sets up the trigger event listeners */

  }, {
    key: "setupTriggerEvents",
    value: function setupTriggerEvents(elementOrElementRef) {
      var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__["coerceElement"])(elementOrElementRef);

      if (!element || element === this._triggerElement) {
        return;
      } // Remove all previously registered event listeners from the trigger element.


      this._removeTriggerEvents();

      this._triggerElement = element;

      this._registerEvents(pointerDownEvents);
    }
    /**
     * Handles all registered events.
     * @docs-private
     */

  }, {
    key: "handleEvent",
    value: function handleEvent(event) {
      if (event.type === 'mousedown') {
        this._onMousedown(event);
      } else if (event.type === 'touchstart') {
        this._onTouchStart(event);
      } else {
        this._onPointerUp();
      } // If pointer-up events haven't been registered yet, do so now.
      // We do this on-demand in order to reduce the total number of event listeners
      // registered by the ripples, which speeds up the rendering time for large UIs.


      if (!this._pointerUpEventsRegistered) {
        this._registerEvents(pointerUpEvents);

        this._pointerUpEventsRegistered = true;
      }
    }
    /** Function being called whenever the trigger is being pressed using mouse. */

  }, {
    key: "_onMousedown",
    value: function _onMousedown(event) {
      // Screen readers will fire fake mouse events for space/enter. Skip launching a
      // ripple in this case for consistency with the non-screen-reader experience.
      var isFakeMousedown = Object(_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["isFakeMousedownFromScreenReader"])(event);
      var isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;

      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {
        this._isPointerDown = true;
        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);
      }
    }
    /** Function being called whenever the trigger is being pressed using touch. */

  }, {
    key: "_onTouchStart",
    value: function _onTouchStart(event) {
      if (!this._target.rippleDisabled) {
        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse
        // events will launch a second ripple if we don't ignore mouse events for a specific
        // time after a touchstart event.
        this._lastTouchStartEvent = Date.now();
        this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put
        // their finger down, but used another finger to tap the element again.

        var touches = event.changedTouches;

        for (var i = 0; i < touches.length; i++) {
          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);
        }
      }
    }
    /** Function being called whenever the trigger is being released. */

  }, {
    key: "_onPointerUp",
    value: function _onPointerUp() {
      if (!this._isPointerDown) {
        return;
      }

      this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.

      this._activeRipples.forEach(function (ripple) {
        // By default, only ripples that are completely visible will fade out on pointer release.
        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.
        var isVisible = ripple.state === 1
        /* VISIBLE */
        || ripple.config.terminateOnPointerUp && ripple.state === 0
        /* FADING_IN */
        ;

        if (!ripple.config.persistent && isVisible) {
          ripple.fadeOut();
        }
      });
    }
    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */

  }, {
    key: "_runTimeoutOutsideZone",
    value: function _runTimeoutOutsideZone(fn) {
      var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      this._ngZone.runOutsideAngular(function () {
        return setTimeout(fn, delay);
      });
    }
    /** Registers event listeners for a given list of events. */

  }, {
    key: "_registerEvents",
    value: function _registerEvents(eventTypes) {
      var _this12 = this;

      this._ngZone.runOutsideAngular(function () {
        eventTypes.forEach(function (type) {
          _this12._triggerElement.addEventListener(type, _this12, passiveEventOptions);
        });
      });
    }
    /** Removes previously registered event listeners from the trigger element. */

  }, {
    key: "_removeTriggerEvents",
    value: function _removeTriggerEvents() {
      var _this13 = this;

      if (this._triggerElement) {
        pointerDownEvents.forEach(function (type) {
          _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);
        });

        if (this._pointerUpEventsRegistered) {
          pointerUpEvents.forEach(function (type) {
            _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);
          });
        }
      }
    }
  }]);

  return RippleRenderer;
}();
/** Enforces a style recalculation of a DOM element by computing its styles. */


function enforceStyleRecalculation(element) {
  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.
  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.
  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a
  window.getComputedStyle(element).getPropertyValue('opacity');
}
/**
 * Returns the distance from the point (x, y) to the furthest corner of a rectangle.
 */


function distanceToFurthestCorner(x, y, rect) {
  var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));
  var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));
  return Math.sqrt(distX * distX + distY * distY);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token that can be used to specify the global ripple options. */


var MAT_RIPPLE_GLOBAL_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('mat-ripple-global-options');

var MatRipple = /*#__PURE__*/function () {
  function MatRipple(_elementRef, ngZone, platform, globalOptions, _animationMode) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatRipple);

    this._elementRef = _elementRef;
    this._animationMode = _animationMode;
    /**
     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius
     * will be the distance from the center of the ripple to the furthest corner of the host element's
     * bounding rectangle.
     */

    this.radius = 0;
    this._disabled = false;
    /** Whether ripple directive is initialized and the input bindings are set. */

    this._isInitialized = false;
    this._globalOptions = globalOptions || {};
    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);
  }
  /**
   * Whether click events will not trigger the ripple. Ripples can be still launched manually
   * by using the `launch()` method.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(MatRipple, [{
    key: "disabled",
    get: function get() {
      return this._disabled;
    },
    set: function set(value) {
      this._disabled = value;

      this._setupTriggerEventsIfEnabled();
    }
    /**
     * The element that triggers the ripple when click events are received.
     * Defaults to the directive's host element.
     */

  }, {
    key: "trigger",
    get: function get() {
      return this._trigger || this._elementRef.nativeElement;
    },
    set: function set(trigger) {
      this._trigger = trigger;

      this._setupTriggerEventsIfEnabled();
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      this._isInitialized = true;

      this._setupTriggerEventsIfEnabled();
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._rippleRenderer._removeTriggerEvents();
    }
    /** Fades out all currently showing ripple elements. */

  }, {
    key: "fadeOutAll",
    value: function fadeOutAll() {
      this._rippleRenderer.fadeOutAll();
    }
    /**
     * Ripple configuration from the directive's input values.
     * @docs-private Implemented as part of RippleTarget
     */

  }, {
    key: "rippleConfig",
    get: function get() {
      return {
        centered: this.centered,
        radius: this.radius,
        color: this.color,
        animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), this._animationMode === 'NoopAnimations' ? {
          enterDuration: 0,
          exitDuration: 0
        } : {}), this.animation),
        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp
      };
    }
    /**
     * Whether ripples on pointer-down are disabled or not.
     * @docs-private Implemented as part of RippleTarget
     */

  }, {
    key: "rippleDisabled",
    get: function get() {
      return this.disabled || !!this._globalOptions.disabled;
    }
    /** Sets up the trigger event listeners if ripples are enabled. */

  }, {
    key: "_setupTriggerEventsIfEnabled",
    value: function _setupTriggerEventsIfEnabled() {
      if (!this.disabled && this._isInitialized) {
        this._rippleRenderer.setupTriggerEvents(this.trigger);
      }
    }
    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */

  }, {
    key: "launch",
    value: function launch(configOrX) {
      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var config = arguments.length > 2 ? arguments[2] : undefined;

      if (typeof configOrX === 'number') {
        return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));
      } else {
        return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));
      }
    }
  }]);

  return MatRipple;
}();

MatRipple.ɵfac = function MatRipple_Factory(t) {
  return new (t || MatRipple)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MAT_RIPPLE_GLOBAL_OPTIONS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["ANIMATION_MODULE_TYPE"], 8));
};

MatRipple.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatRipple,
  selectors: [["", "mat-ripple", ""], ["", "matRipple", ""]],
  hostAttrs: [1, "mat-ripple"],
  hostVars: 2,
  hostBindings: function MatRipple_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-ripple-unbounded", ctx.unbounded);
    }
  },
  inputs: {
    radius: ["matRippleRadius", "radius"],
    disabled: ["matRippleDisabled", "disabled"],
    trigger: ["matRippleTrigger", "trigger"],
    color: ["matRippleColor", "color"],
    unbounded: ["matRippleUnbounded", "unbounded"],
    centered: ["matRippleCentered", "centered"],
    animation: ["matRippleAnimation", "animation"]
  },
  exportAs: ["matRipple"]
});

MatRipple.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_RIPPLE_GLOBAL_OPTIONS]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatRipple.propDecorators = {
  color: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matRippleColor']
  }],
  unbounded: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matRippleUnbounded']
  }],
  centered: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matRippleCentered']
  }],
  radius: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matRippleRadius']
  }],
  animation: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matRippleAnimation']
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matRippleDisabled']
  }],
  trigger: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matRippleTrigger']
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatRipple, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[mat-ripple], [matRipple]',
      exportAs: 'matRipple',
      host: {
        'class': 'mat-ripple',
        '[class.mat-ripple-unbounded]': 'unbounded'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_RIPPLE_GLOBAL_OPTIONS]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    radius: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matRippleRadius']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matRippleDisabled']
    }],
    trigger: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matRippleTrigger']
    }],
    color: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matRippleColor']
    }],
    unbounded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matRippleUnbounded']
    }],
    centered: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matRippleCentered']
    }],
    animation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matRippleAnimation']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatRippleModule = function MatRippleModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatRippleModule);
};

MatRippleModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatRippleModule
});
MatRippleModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatRippleModule_Factory(t) {
    return new (t || MatRippleModule)();
  },
  imports: [[MatCommonModule, _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["PlatformModule"]], MatCommonModule]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatRippleModule, {
    declarations: function declarations() {
      return [MatRipple];
    },
    imports: function imports() {
      return [MatCommonModule, _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["PlatformModule"]];
    },
    exports: function exports() {
      return [MatRipple, MatCommonModule];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatRippleModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [MatCommonModule, _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["PlatformModule"]],
      exports: [MatRipple, MatCommonModule],
      declarations: [MatRipple]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Component that shows a simplified checkbox without including any kind of "real" checkbox.
 * Meant to be used when the checkbox is purely decorative and a large number of them will be
 * included, such as for the options in a multi-select. Uses no SVGs or complex animations.
 * Note that theming is meant to be handled by the parent element, e.g.
 * `mat-primary .mat-pseudo-checkbox`.
 *
 * Note that this component will be completely invisible to screen-reader users. This is *not*
 * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly
 * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail
 * of more complex components that appropriately handle selected / checked state.
 * @docs-private
 */


var MatPseudoCheckbox = function MatPseudoCheckbox(_animationMode) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatPseudoCheckbox);

  this._animationMode = _animationMode;
  /** Display state of the checkbox. */

  this.state = 'unchecked';
  /** Whether the checkbox is disabled. */

  this.disabled = false;
};

MatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {
  return new (t || MatPseudoCheckbox)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["ANIMATION_MODULE_TYPE"], 8));
};

MatPseudoCheckbox.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatPseudoCheckbox,
  selectors: [["mat-pseudo-checkbox"]],
  hostAttrs: [1, "mat-pseudo-checkbox"],
  hostVars: 8,
  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-pseudo-checkbox-indeterminate", ctx.state === "indeterminate")("mat-pseudo-checkbox-checked", ctx.state === "checked")("mat-pseudo-checkbox-disabled", ctx.disabled)("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
    }
  },
  inputs: {
    state: "state",
    disabled: "disabled"
  },
  decls: 0,
  vars: 0,
  template: function MatPseudoCheckbox_Template(rf, ctx) {},
  styles: [".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\"\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatPseudoCheckbox.ctorParameters = function () {
  return [{
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatPseudoCheckbox.propDecorators = {
  state: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatPseudoCheckbox, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].OnPush,
      selector: 'mat-pseudo-checkbox',
      template: '',
      host: {
        'class': 'mat-pseudo-checkbox',
        '[class.mat-pseudo-checkbox-indeterminate]': 'state === "indeterminate"',
        '[class.mat-pseudo-checkbox-checked]': 'state === "checked"',
        '[class.mat-pseudo-checkbox-disabled]': 'disabled',
        '[class._mat-animation-noopable]': '_animationMode === "NoopAnimations"'
      },
      styles: [".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\"\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\n"]
    }]
  }], function () {
    return [{
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_16__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    state: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatPseudoCheckboxModule = function MatPseudoCheckboxModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatPseudoCheckboxModule);
};

MatPseudoCheckboxModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatPseudoCheckboxModule
});
MatPseudoCheckboxModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatPseudoCheckboxModule_Factory(t) {
    return new (t || MatPseudoCheckboxModule)();
  }
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatPseudoCheckboxModule, {
    declarations: [MatPseudoCheckbox],
    exports: [MatPseudoCheckbox]
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatPseudoCheckboxModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      exports: [MatPseudoCheckbox],
      declarations: [MatPseudoCheckbox]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Boilerplate for applying mixins to MatOptgroup.

/** @docs-private */


var MatOptgroupBase = function MatOptgroupBase() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatOptgroupBase);
};

var _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase); // Counter for unique group ids.


var _uniqueOptgroupIdCounter = 0;

var _MatOptgroupBase = /*#__PURE__*/function (_MatOptgroupMixinBase2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(_MatOptgroupBase, _MatOptgroupMixinBase2);

  var _super8 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(_MatOptgroupBase);

  function _MatOptgroupBase() {
    var _this14;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _MatOptgroupBase);

    _this14 = _super8.apply(this, arguments);
    /** Unique id for the underlying label. */

    _this14._labelId = "mat-optgroup-label-".concat(_uniqueOptgroupIdCounter++);
    return _this14;
  }

  return _MatOptgroupBase;
}(_MatOptgroupMixinBase);

_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {
  return ɵ_MatOptgroupBase_BaseFactory(t || _MatOptgroupBase);
};

_MatOptgroupBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: _MatOptgroupBase,
  inputs: {
    label: "label"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
_MatOptgroupBase.propDecorators = {
  label: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }]
};
var ɵ_MatOptgroupBase_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](_MatOptgroupBase);
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](_MatOptgroupBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"]
  }], null, {
    label: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }]
  });
})();
/**
 * Injection token that can be used to reference instances of `MatOptgroup`. It serves as
 * alternative token to the actual `MatOptgroup` class which could cause unnecessary
 * retention of the class and its component metadata.
 */


var MAT_OPTGROUP = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatOptgroup');
/**
 * Component that is used to group instances of `mat-option`.
 */

var MatOptgroup = /*#__PURE__*/function (_MatOptgroupBase2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(MatOptgroup, _MatOptgroupBase2);

  var _super9 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(MatOptgroup);

  function MatOptgroup() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatOptgroup);

    return _super9.apply(this, arguments);
  }

  return MatOptgroup;
}(_MatOptgroupBase);

MatOptgroup.ɵfac = function MatOptgroup_Factory(t) {
  return ɵMatOptgroup_BaseFactory(t || MatOptgroup);
};

MatOptgroup.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatOptgroup,
  selectors: [["mat-optgroup"]],
  hostAttrs: ["role", "group", 1, "mat-optgroup"],
  hostVars: 4,
  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("aria-disabled", ctx.disabled.toString())("aria-labelledby", ctx._labelId);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-optgroup-disabled", ctx.disabled);
    }
  },
  inputs: {
    disabled: "disabled"
  },
  exportAs: ["matOptgroup"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_OPTGROUP,
    useExisting: MatOptgroup
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c1,
  decls: 4,
  vars: 2,
  consts: [[1, "mat-optgroup-label", 3, "id"]],
  template: function MatOptgroup_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojectionDef"](_c0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "label", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](3, 1);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("id", ctx._labelId);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("", ctx.label, " ");
    }
  },
  styles: [".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\n"],
  encapsulation: 2,
  changeDetection: 0
});
var ɵMatOptgroup_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatOptgroup);
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatOptgroup, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-optgroup',
      exportAs: 'matOptgroup',
      template: "<label class=\"mat-optgroup-label\" [id]=\"_labelId\">{{ label }} <ng-content></ng-content></label>\n<ng-content select=\"mat-option, ng-container\"></ng-content>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].OnPush,
      inputs: ['disabled'],
      host: {
        'class': 'mat-optgroup',
        'role': 'group',
        '[class.mat-optgroup-disabled]': 'disabled',
        '[attr.aria-disabled]': 'disabled.toString()',
        '[attr.aria-labelledby]': '_labelId'
      },
      providers: [{
        provide: MAT_OPTGROUP,
        useExisting: MatOptgroup
      }],
      styles: [".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\n"]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Option IDs need to be unique across components, so this counter exists outside of
 * the component definition.
 */


var _uniqueIdCounter = 0;
/** Event object emitted by MatOption when selected or deselected. */

var MatOptionSelectionChange = function MatOptionSelectionChange(
/** Reference to the option that emitted the event. */
source) {
  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatOptionSelectionChange);

  this.source = source;
  this.isUserInput = isUserInput;
};
/**
 * Injection token used to provide the parent component to options.
 */


var MAT_OPTION_PARENT_COMPONENT = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MAT_OPTION_PARENT_COMPONENT');

var _MatOptionBase = /*#__PURE__*/function () {
  function _MatOptionBase(_element, _changeDetectorRef, _parent, group) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _MatOptionBase);

    this._element = _element;
    this._changeDetectorRef = _changeDetectorRef;
    this._parent = _parent;
    this.group = group;
    this._selected = false;
    this._active = false;
    this._disabled = false;
    this._mostRecentViewValue = '';
    /** The unique ID of the option. */

    this.id = "mat-option-".concat(_uniqueIdCounter++);
    /** Event emitted when the option is selected or deselected. */
    // tslint:disable-next-line:no-output-on-prefix

    this.onSelectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
    /** Emits when the state of the option changes and any parents have to be notified. */

    this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Subject"]();
  }
  /** Whether the wrapping component is in multiple selection mode. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(_MatOptionBase, [{
    key: "multiple",
    get: function get() {
      return this._parent && this._parent.multiple;
    }
    /** Whether or not the option is currently selected. */

  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    }
    /** Whether the option is disabled. */

  }, {
    key: "disabled",
    get: function get() {
      return this.group && this.group.disabled || this._disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_12__["coerceBooleanProperty"])(value);
    }
    /** Whether ripples for the option are disabled. */

  }, {
    key: "disableRipple",
    get: function get() {
      return this._parent && this._parent.disableRipple;
    }
    /**
     * Whether or not the option is currently active and ready to be selected.
     * An active option displays styles as if it is focused, but the
     * focus is actually retained somewhere else. This comes in handy
     * for components like autocomplete where focus must remain on the input.
     */

  }, {
    key: "active",
    get: function get() {
      return this._active;
    }
    /**
     * The displayed value of the option. It is necessary to show the selected option in the
     * select's trigger.
     */

  }, {
    key: "viewValue",
    get: function get() {
      // TODO(kara): Add input property alternative for node envs.
      return (this._getHostElement().textContent || '').trim();
    }
    /** Selects the option. */

  }, {
    key: "select",
    value: function select() {
      if (!this._selected) {
        this._selected = true;

        this._changeDetectorRef.markForCheck();

        this._emitSelectionChangeEvent();
      }
    }
    /** Deselects the option. */

  }, {
    key: "deselect",
    value: function deselect() {
      if (this._selected) {
        this._selected = false;

        this._changeDetectorRef.markForCheck();

        this._emitSelectionChangeEvent();
      }
    }
    /** Sets focus onto this option. */

  }, {
    key: "focus",
    value: function focus(_origin, options) {
      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers
      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.
      var element = this._getHostElement();

      if (typeof element.focus === 'function') {
        element.focus(options);
      }
    }
    /**
     * This method sets display styles on the option to make it appear
     * active. This is used by the ActiveDescendantKeyManager so key
     * events will display the proper options as active on arrow key events.
     */

  }, {
    key: "setActiveStyles",
    value: function setActiveStyles() {
      if (!this._active) {
        this._active = true;

        this._changeDetectorRef.markForCheck();
      }
    }
    /**
     * This method removes display styles on the option that made it appear
     * active. This is used by the ActiveDescendantKeyManager so key
     * events will display the proper options as active on arrow key events.
     */

  }, {
    key: "setInactiveStyles",
    value: function setInactiveStyles() {
      if (this._active) {
        this._active = false;

        this._changeDetectorRef.markForCheck();
      }
    }
    /** Gets the label to be used when determining whether the option should be focused. */

  }, {
    key: "getLabel",
    value: function getLabel() {
      return this.viewValue;
    }
    /** Ensures the option is selected when activated from the keyboard. */

  }, {
    key: "_handleKeydown",
    value: function _handleKeydown(event) {
      if ((event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_17__["ENTER"] || event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_17__["SPACE"]) && !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_17__["hasModifierKey"])(event)) {
        this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.


        event.preventDefault();
      }
    }
    /**
     * `Selects the option while indicating the selection came from the user. Used to
     * determine if the select's view -> model callback should be invoked.`
     */

  }, {
    key: "_selectViaInteraction",
    value: function _selectViaInteraction() {
      if (!this.disabled) {
        this._selected = this.multiple ? !this._selected : true;

        this._changeDetectorRef.markForCheck();

        this._emitSelectionChangeEvent(true);
      }
    }
    /**
     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`
     * attribute from single-selection, unselected options. Including the `aria-selected="false"`
     * attributes adds a significant amount of noise to screen-reader users without providing useful
     * information.
     */

  }, {
    key: "_getAriaSelected",
    value: function _getAriaSelected() {
      return this.selected || (this.multiple ? false : null);
    }
    /** Returns the correct tabindex for the option depending on disabled state. */

  }, {
    key: "_getTabIndex",
    value: function _getTabIndex() {
      return this.disabled ? '-1' : '0';
    }
    /** Gets the host DOM element. */

  }, {
    key: "_getHostElement",
    value: function _getHostElement() {
      return this._element.nativeElement;
    }
  }, {
    key: "ngAfterViewChecked",
    value: function ngAfterViewChecked() {
      // Since parent components could be using the option's label to display the selected values
      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed
      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are
      // relatively cheap, however we still limit them only to selected options in order to avoid
      // hitting the DOM too often.
      if (this._selected) {
        var viewValue = this.viewValue;

        if (viewValue !== this._mostRecentViewValue) {
          this._mostRecentViewValue = viewValue;

          this._stateChanges.next();
        }
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._stateChanges.complete();
    }
    /** Emits the selection change event. */

  }, {
    key: "_emitSelectionChangeEvent",
    value: function _emitSelectionChangeEvent() {
      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));
    }
  }]);

  return _MatOptionBase;
}();

_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {
  return new (t || _MatOptionBase)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](undefined), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_MatOptgroupBase));
};

_MatOptionBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: _MatOptionBase,
  inputs: {
    id: "id",
    disabled: "disabled",
    value: "value"
  },
  outputs: {
    onSelectionChange: "onSelectionChange"
  }
});

_MatOptionBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
  }, {
    type: undefined
  }, {
    type: _MatOptgroupBase
  }];
};

_MatOptionBase.propDecorators = {
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  onSelectionChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](_MatOptionBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
    }, {
      type: undefined
    }, {
      type: _MatOptgroupBase
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    onSelectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }]
  });
})();
/**
 * Single option inside of a `<mat-select>` element.
 */


var MatOption = /*#__PURE__*/function (_MatOptionBase2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(MatOption, _MatOptionBase2);

  var _super10 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(MatOption);

  function MatOption(element, changeDetectorRef, parent, group) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatOption);

    return _super10.call(this, element, changeDetectorRef, parent, group);
  }

  return MatOption;
}(_MatOptionBase);

MatOption.ɵfac = function MatOption_Factory(t) {
  return new (t || MatOption)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MAT_OPTION_PARENT_COMPONENT, 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MAT_OPTGROUP, 8));
};

MatOption.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatOption,
  selectors: [["mat-option"]],
  hostAttrs: ["role", "option", 1, "mat-option", "mat-focus-indicator"],
  hostVars: 12,
  hostBindings: function MatOption_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MatOption_click_HostBindingHandler() {
        return ctx._selectViaInteraction();
      })("keydown", function MatOption_keydown_HostBindingHandler($event) {
        return ctx._handleKeydown($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵhostProperty"]("id", ctx.id);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("tabindex", ctx._getTabIndex())("aria-selected", ctx._getAriaSelected())("aria-disabled", ctx.disabled.toString());
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-selected", ctx.selected)("mat-option-multiple", ctx.multiple)("mat-active", ctx.active)("mat-option-disabled", ctx.disabled);
    }
  },
  exportAs: ["matOption"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c2,
  decls: 4,
  vars: 3,
  consts: [["class", "mat-option-pseudo-checkbox", 3, "state", "disabled", 4, "ngIf"], [1, "mat-option-text"], ["mat-ripple", "", 1, "mat-option-ripple", 3, "matRippleTrigger", "matRippleDisabled"], [1, "mat-option-pseudo-checkbox", 3, "state", "disabled"]],
  template: function MatOption_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, "mat-pseudo-checkbox", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "span", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](3, "div", 2);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.multiple);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("matRippleTrigger", ctx._getHostElement())("matRippleDisabled", ctx.disabled || ctx.disableRipple);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"], MatRipple, MatPseudoCheckbox],
  styles: [".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatOption.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_OPTION_PARENT_COMPONENT]
    }]
  }, {
    type: MatOptgroup,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_OPTGROUP]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatOption, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-option',
      exportAs: 'matOption',
      host: {
        'role': 'option',
        '[attr.tabindex]': '_getTabIndex()',
        '[class.mat-selected]': 'selected',
        '[class.mat-option-multiple]': 'multiple',
        '[class.mat-active]': 'active',
        '[id]': 'id',
        '[attr.aria-selected]': '_getAriaSelected()',
        '[attr.aria-disabled]': 'disabled.toString()',
        '[class.mat-option-disabled]': 'disabled',
        '(click)': '_selectViaInteraction()',
        '(keydown)': '_handleKeydown($event)',
        'class': 'mat-option mat-focus-indicator'
      },
      template: "<mat-pseudo-checkbox *ngIf=\"multiple\" class=\"mat-option-pseudo-checkbox\"\n    [state]=\"selected ? 'checked' : 'unchecked'\" [disabled]=\"disabled\"></mat-pseudo-checkbox>\n\n<span class=\"mat-option-text\"><ng-content></ng-content></span>\n\n<div class=\"mat-option-ripple\" mat-ripple\n     [matRippleTrigger]=\"_getHostElement()\"\n     [matRippleDisabled]=\"disabled || disableRipple\">\n</div>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_OPTION_PARENT_COMPONENT]
      }]
    }, {
      type: MatOptgroup,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_OPTGROUP]
      }]
    }];
  }, null);
})();
/**
 * Counts the amount of option group labels that precede the specified option.
 * @param optionIndex Index of the option at which to start counting.
 * @param options Flat list of all of the options.
 * @param optionGroups Flat list of all of the option groups.
 * @docs-private
 */


function _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {
  if (optionGroups.length) {
    var optionsArray = options.toArray();
    var groups = optionGroups.toArray();
    var groupCounter = 0;

    for (var i = 0; i < optionIndex + 1; i++) {
      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {
        groupCounter++;
      }
    }

    return groupCounter;
  }

  return 0;
}
/**
 * Determines the position to which to scroll a panel in order for an option to be into view.
 * @param optionOffset Offset of the option from the top of the panel.
 * @param optionHeight Height of the options.
 * @param currentScrollPosition Current scroll position of the panel.
 * @param panelHeight Height of the panel.
 * @docs-private
 */


function _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {
  if (optionOffset < currentScrollPosition) {
    return optionOffset;
  }

  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {
    return Math.max(0, optionOffset - panelHeight + optionHeight);
  }

  return currentScrollPosition;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatOptionModule = function MatOptionModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatOptionModule);
};

MatOptionModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatOptionModule
});
MatOptionModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatOptionModule_Factory(t) {
    return new (t || MatOptionModule)();
  },
  imports: [[MatRippleModule, _angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], MatPseudoCheckboxModule]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatOptionModule, {
    declarations: function declarations() {
      return [MatOption, MatOptgroup];
    },
    imports: function imports() {
      return [MatRippleModule, _angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], MatPseudoCheckboxModule];
    },
    exports: function exports() {
      return [MatOption, MatOptgroup];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatOptionModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [MatRippleModule, _angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], MatPseudoCheckboxModule],
      exports: [MatOption, MatOptgroup],
      declarations: [MatOption, MatOptgroup]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * InjectionToken that can be used to specify the global label options.
 * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from
 *     `@angular/material/form-field` instead.
 * @breaking-change 11.0.0
 */


var MAT_LABEL_GLOBAL_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('mat-label-global-options');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * When constructing a Date, the month is zero-based. This can be confusing, since people are
 * used to seeing them one-based. So we create these aliases to make writing the tests easier.
 * @docs-private
 * @breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.
 */

var JAN = 0,
    FEB = 1,
    MAR = 2,
    APR = 3,
    MAY = 4,
    JUN = 5,
    JUL = 6,
    AUG = 7,
    SEP = 8,
    OCT = 9,
    NOV = 10,
    DEC = 11;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */



/***/ }),

/***/ "FtGj":
/*!*********************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js ***!
  \*********************************************************************/
/*! exports provided: A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A", function() { return A; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ALT", function() { return ALT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APOSTROPHE", function() { return APOSTROPHE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AT_SIGN", function() { return AT_SIGN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "B", function() { return B; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BACKSLASH", function() { return BACKSLASH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BACKSPACE", function() { return BACKSPACE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "C", function() { return C; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CAPS_LOCK", function() { return CAPS_LOCK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLOSE_SQUARE_BRACKET", function() { return CLOSE_SQUARE_BRACKET; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COMMA", function() { return COMMA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTEXT_MENU", function() { return CONTEXT_MENU; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONTROL", function() { return CONTROL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "D", function() { return D; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DASH", function() { return DASH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DELETE", function() { return DELETE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOWN_ARROW", function() { return DOWN_ARROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "E", function() { return E; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EIGHT", function() { return EIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "END", function() { return END; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ENTER", function() { return ENTER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EQUALS", function() { return EQUALS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ESCAPE", function() { return ESCAPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F", function() { return F; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F1", function() { return F1; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F10", function() { return F10; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F11", function() { return F11; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F12", function() { return F12; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F2", function() { return F2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F3", function() { return F3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F4", function() { return F4; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F5", function() { return F5; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F6", function() { return F6; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F7", function() { return F7; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F8", function() { return F8; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "F9", function() { return F9; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FF_EQUALS", function() { return FF_EQUALS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FF_MINUS", function() { return FF_MINUS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FF_MUTE", function() { return FF_MUTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FF_SEMICOLON", function() { return FF_SEMICOLON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FF_VOLUME_DOWN", function() { return FF_VOLUME_DOWN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FF_VOLUME_UP", function() { return FF_VOLUME_UP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FIRST_MEDIA", function() { return FIRST_MEDIA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FIVE", function() { return FIVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOUR", function() { return FOUR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "G", function() { return G; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "H", function() { return H; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HOME", function() { return HOME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "I", function() { return I; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "INSERT", function() { return INSERT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "J", function() { return J; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "K", function() { return K; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "L", function() { return L; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LAST_MEDIA", function() { return LAST_MEDIA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LEFT_ARROW", function() { return LEFT_ARROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "M", function() { return M; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAC_ENTER", function() { return MAC_ENTER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAC_META", function() { return MAC_META; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAC_WK_CMD_LEFT", function() { return MAC_WK_CMD_LEFT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAC_WK_CMD_RIGHT", function() { return MAC_WK_CMD_RIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "META", function() { return META; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MUTE", function() { return MUTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "N", function() { return N; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NINE", function() { return NINE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_DIVIDE", function() { return NUMPAD_DIVIDE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_EIGHT", function() { return NUMPAD_EIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_FIVE", function() { return NUMPAD_FIVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_FOUR", function() { return NUMPAD_FOUR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_MINUS", function() { return NUMPAD_MINUS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_MULTIPLY", function() { return NUMPAD_MULTIPLY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_NINE", function() { return NUMPAD_NINE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_ONE", function() { return NUMPAD_ONE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_PERIOD", function() { return NUMPAD_PERIOD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_PLUS", function() { return NUMPAD_PLUS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_SEVEN", function() { return NUMPAD_SEVEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_SIX", function() { return NUMPAD_SIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_THREE", function() { return NUMPAD_THREE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_TWO", function() { return NUMPAD_TWO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUMPAD_ZERO", function() { return NUMPAD_ZERO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUM_CENTER", function() { return NUM_CENTER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NUM_LOCK", function() { return NUM_LOCK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "O", function() { return O; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ONE", function() { return ONE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OPEN_SQUARE_BRACKET", function() { return OPEN_SQUARE_BRACKET; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "P", function() { return P; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PAGE_DOWN", function() { return PAGE_DOWN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PAGE_UP", function() { return PAGE_UP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PAUSE", function() { return PAUSE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PLUS_SIGN", function() { return PLUS_SIGN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRINT_SCREEN", function() { return PRINT_SCREEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Q", function() { return Q; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QUESTION_MARK", function() { return QUESTION_MARK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "R", function() { return R; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RIGHT_ARROW", function() { return RIGHT_ARROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "S", function() { return S; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCROLL_LOCK", function() { return SCROLL_LOCK; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SEMICOLON", function() { return SEMICOLON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SEVEN", function() { return SEVEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SHIFT", function() { return SHIFT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SINGLE_QUOTE", function() { return SINGLE_QUOTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SIX", function() { return SIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SLASH", function() { return SLASH; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SPACE", function() { return SPACE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "T", function() { return T; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TAB", function() { return TAB; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "THREE", function() { return THREE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TILDE", function() { return TILDE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TWO", function() { return TWO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "U", function() { return U; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UP_ARROW", function() { return UP_ARROW; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "V", function() { return V; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VOLUME_DOWN", function() { return VOLUME_DOWN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VOLUME_UP", function() { return VOLUME_UP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "W", function() { return W; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "X", function() { return X; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Y", function() { return Y; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Z", function() { return Z; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZERO", function() { return ZERO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hasModifierKey", function() { return hasModifierKey; });
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var MAC_ENTER = 3;
var BACKSPACE = 8;
var TAB = 9;
var NUM_CENTER = 12;
var ENTER = 13;
var SHIFT = 16;
var CONTROL = 17;
var ALT = 18;
var PAUSE = 19;
var CAPS_LOCK = 20;
var ESCAPE = 27;
var SPACE = 32;
var PAGE_UP = 33;
var PAGE_DOWN = 34;
var END = 35;
var HOME = 36;
var LEFT_ARROW = 37;
var UP_ARROW = 38;
var RIGHT_ARROW = 39;
var DOWN_ARROW = 40;
var PLUS_SIGN = 43;
var PRINT_SCREEN = 44;
var INSERT = 45;
var DELETE = 46;
var ZERO = 48;
var ONE = 49;
var TWO = 50;
var THREE = 51;
var FOUR = 52;
var FIVE = 53;
var SIX = 54;
var SEVEN = 55;
var EIGHT = 56;
var NINE = 57;
var FF_SEMICOLON = 59; // Firefox (Gecko) fires this for semicolon instead of 186

var FF_EQUALS = 61; // Firefox (Gecko) fires this for equals instead of 187

var QUESTION_MARK = 63;
var AT_SIGN = 64;
var A = 65;
var B = 66;
var C = 67;
var D = 68;
var E = 69;
var F = 70;
var G = 71;
var H = 72;
var I = 73;
var J = 74;
var K = 75;
var L = 76;
var M = 77;
var N = 78;
var O = 79;
var P = 80;
var Q = 81;
var R = 82;
var S = 83;
var T = 84;
var U = 85;
var V = 86;
var W = 87;
var X = 88;
var Y = 89;
var Z = 90;
var META = 91; // WIN_KEY_LEFT

var MAC_WK_CMD_LEFT = 91;
var MAC_WK_CMD_RIGHT = 93;
var CONTEXT_MENU = 93;
var NUMPAD_ZERO = 96;
var NUMPAD_ONE = 97;
var NUMPAD_TWO = 98;
var NUMPAD_THREE = 99;
var NUMPAD_FOUR = 100;
var NUMPAD_FIVE = 101;
var NUMPAD_SIX = 102;
var NUMPAD_SEVEN = 103;
var NUMPAD_EIGHT = 104;
var NUMPAD_NINE = 105;
var NUMPAD_MULTIPLY = 106;
var NUMPAD_PLUS = 107;
var NUMPAD_MINUS = 109;
var NUMPAD_PERIOD = 110;
var NUMPAD_DIVIDE = 111;
var F1 = 112;
var F2 = 113;
var F3 = 114;
var F4 = 115;
var F5 = 116;
var F6 = 117;
var F7 = 118;
var F8 = 119;
var F9 = 120;
var F10 = 121;
var F11 = 122;
var F12 = 123;
var NUM_LOCK = 144;
var SCROLL_LOCK = 145;
var FIRST_MEDIA = 166;
var FF_MINUS = 173;
var MUTE = 173; // Firefox (Gecko) fires 181 for MUTE

var VOLUME_DOWN = 174; // Firefox (Gecko) fires 182 for VOLUME_DOWN

var VOLUME_UP = 175; // Firefox (Gecko) fires 183 for VOLUME_UP

var FF_MUTE = 181;
var FF_VOLUME_DOWN = 182;
var LAST_MEDIA = 183;
var FF_VOLUME_UP = 183;
var SEMICOLON = 186; // Firefox (Gecko) fires 59 for SEMICOLON

var EQUALS = 187; // Firefox (Gecko) fires 61 for EQUALS

var COMMA = 188;
var DASH = 189; // Firefox (Gecko) fires 173 for DASH/MINUS

var SLASH = 191;
var APOSTROPHE = 192;
var TILDE = 192;
var OPEN_SQUARE_BRACKET = 219;
var BACKSLASH = 220;
var CLOSE_SQUARE_BRACKET = 221;
var SINGLE_QUOTE = 222;
var MAC_META = 224;
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Checks whether a modifier key is pressed.
 * @param event Event to be checked.
 */

function hasModifierKey(event) {
  for (var _len = arguments.length, modifiers = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    modifiers[_key - 1] = arguments[_key];
  }

  if (modifiers.length) {
    return modifiers.some(function (modifier) {
      return event[modifier];
    });
  }

  return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "GU7r":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js ***!
  \**********************************************************************/
/*! exports provided: CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkObserveContent", function() { return CdkObserveContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ContentObserver", function() { return ContentObserver; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MutationObserverFactory", function() { return MutationObserverFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObserversModule", function() { return ObserversModule; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs/operators */ "kU1M");






/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.
 * @docs-private
 */



var MutationObserverFactory = /*#__PURE__*/function () {
  function MutationObserverFactory() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MutationObserverFactory);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MutationObserverFactory, [{
    key: "create",
    value: function create(callback) {
      return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);
    }
  }]);

  return MutationObserverFactory;
}();

MutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) {
  return new (t || MutationObserverFactory)();
};

MutationObserverFactory.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"])({
  factory: function MutationObserverFactory_Factory() {
    return new MutationObserverFactory();
  },
  token: MutationObserverFactory,
  providedIn: "root"
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](MutationObserverFactory, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], null, null);
})();
/** An injectable service that allows watching elements for changes to their content. */


var ContentObserver = /*#__PURE__*/function () {
  function ContentObserver(_mutationObserverFactory) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, ContentObserver);

    this._mutationObserverFactory = _mutationObserverFactory;
    /** Keeps track of the existing MutationObservers so they can be reused. */

    this._observedElements = new Map();
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(ContentObserver, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var _this = this;

      this._observedElements.forEach(function (_, element) {
        return _this._cleanupObserver(element);
      });
    }
  }, {
    key: "observe",
    value: function observe(elementOrRef) {
      var _this2 = this;

      var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__["coerceElement"])(elementOrRef);
      return new rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"](function (observer) {
        var stream = _this2._observeElement(element);

        var subscription = stream.subscribe(observer);
        return function () {
          subscription.unsubscribe();

          _this2._unobserveElement(element);
        };
      });
    }
    /**
     * Observes the given element by using the existing MutationObserver if available, or creating a
     * new one if not.
     */

  }, {
    key: "_observeElement",
    value: function _observeElement(element) {
      if (!this._observedElements.has(element)) {
        var stream = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();

        var observer = this._mutationObserverFactory.create(function (mutations) {
          return stream.next(mutations);
        });

        if (observer) {
          observer.observe(element, {
            characterData: true,
            childList: true,
            subtree: true
          });
        }

        this._observedElements.set(element, {
          observer: observer,
          stream: stream,
          count: 1
        });
      } else {
        this._observedElements.get(element).count++;
      }

      return this._observedElements.get(element).stream;
    }
    /**
     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is
     * observing this element.
     */

  }, {
    key: "_unobserveElement",
    value: function _unobserveElement(element) {
      if (this._observedElements.has(element)) {
        this._observedElements.get(element).count--;

        if (!this._observedElements.get(element).count) {
          this._cleanupObserver(element);
        }
      }
    }
    /** Clean up the underlying MutationObserver for the specified element. */

  }, {
    key: "_cleanupObserver",
    value: function _cleanupObserver(element) {
      if (this._observedElements.has(element)) {
        var _this$_observedElemen = this._observedElements.get(element),
            observer = _this$_observedElemen.observer,
            stream = _this$_observedElemen.stream;

        if (observer) {
          observer.disconnect();
        }

        stream.complete();

        this._observedElements.delete(element);
      }
    }
  }]);

  return ContentObserver;
}();

ContentObserver.ɵfac = function ContentObserver_Factory(t) {
  return new (t || ContentObserver)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](MutationObserverFactory));
};

ContentObserver.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"])({
  factory: function ContentObserver_Factory() {
    return new ContentObserver(Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"])(MutationObserverFactory));
  },
  token: ContentObserver,
  providedIn: "root"
});

ContentObserver.ctorParameters = function () {
  return [{
    type: MutationObserverFactory
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](ContentObserver, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: MutationObserverFactory
    }];
  }, null);
})();
/**
 * Directive that triggers a callback whenever the content of
 * its associated element has changed.
 */


var CdkObserveContent = /*#__PURE__*/function () {
  function CdkObserveContent(_contentObserver, _elementRef, _ngZone) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CdkObserveContent);

    this._contentObserver = _contentObserver;
    this._elementRef = _elementRef;
    this._ngZone = _ngZone;
    /** Event emitted for each change in the element's content. */

    this.event = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
    this._disabled = false;
    this._currentSubscription = null;
  }
  /**
   * Whether observing content is disabled. This option can be used
   * to disconnect the underlying MutationObserver until it is needed.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(CdkObserveContent, [{
    key: "disabled",
    get: function get() {
      return this._disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__["coerceBooleanProperty"])(value);
      this._disabled ? this._unsubscribe() : this._subscribe();
    }
    /** Debounce interval for emitting the changes. */

  }, {
    key: "debounce",
    get: function get() {
      return this._debounce;
    },
    set: function set(value) {
      this._debounce = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_2__["coerceNumberProperty"])(value);

      this._subscribe();
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      if (!this._currentSubscription && !this.disabled) {
        this._subscribe();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._unsubscribe();
    }
  }, {
    key: "_subscribe",
    value: function _subscribe() {
      var _this3 = this;

      this._unsubscribe();

      var stream = this._contentObserver.observe(this._elementRef); // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.
      // Consider brining it back inside the zone next time we're making breaking changes.
      // Bringing it back inside can cause things like infinite change detection loops and changed
      // after checked errors if people's code isn't handling it properly.


      this._ngZone.runOutsideAngular(function () {
        _this3._currentSubscription = (_this3.debounce ? stream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["debounceTime"])(_this3.debounce)) : stream).subscribe(_this3.event);
      });
    }
  }, {
    key: "_unsubscribe",
    value: function _unsubscribe() {
      if (this._currentSubscription) {
        this._currentSubscription.unsubscribe();
      }
    }
  }]);

  return CdkObserveContent;
}();

CdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) {
  return new (t || CdkObserveContent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](ContentObserver), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]));
};

CdkObserveContent.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
  type: CdkObserveContent,
  selectors: [["", "cdkObserveContent", ""]],
  inputs: {
    disabled: ["cdkObserveContentDisabled", "disabled"],
    debounce: "debounce"
  },
  outputs: {
    event: "cdkObserveContent"
  },
  exportAs: ["cdkObserveContent"]
});

CdkObserveContent.ctorParameters = function () {
  return [{
    type: ContentObserver
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
  }];
};

CdkObserveContent.propDecorators = {
  event: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"],
    args: ['cdkObserveContent']
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
    args: ['cdkObserveContentDisabled']
  }],
  debounce: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](CdkObserveContent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
    args: [{
      selector: '[cdkObserveContent]',
      exportAs: 'cdkObserveContent'
    }]
  }], function () {
    return [{
      type: ContentObserver
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
    }];
  }, {
    event: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"],
      args: ['cdkObserveContent']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
      args: ['cdkObserveContentDisabled']
    }],
    debounce: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"]
    }]
  });
})();

var ObserversModule = function ObserversModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, ObserversModule);
};

ObserversModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({
  type: ObserversModule
});
ObserversModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({
  factory: function ObserversModule_Factory(t) {
    return new (t || ObserversModule)();
  },
  providers: [MutationObserverFactory]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](ObserversModule, {
    declarations: [CdkObserveContent],
    exports: [CdkObserveContent]
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](ObserversModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"],
    args: [{
      exports: [CdkObserveContent],
      declarations: [CdkObserveContent],
      providers: [MutationObserverFactory]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "Gr0w":
/*!**********************************************************!*\
  !*** ./src/app/pages/challenges/challenges.component.ts ***!
  \**********************************************************/
/*! exports provided: ChallengesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChallengesComponent", function() { return ChallengesComponent; });
/* harmony import */ var _raw_loader_challenges_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./challenges.component.html */ "IBHi");
/* harmony import */ var _challenges_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./challenges.component.css */ "neyp");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ChallengesComponent = /** @class */ (function () {
    function ChallengesComponent() {
    }
    ChallengesComponent.prototype.ngOnInit = function () {
    };
    ChallengesComponent.ctorParameters = function () { return []; };
    ChallengesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-challenges',
            template: _raw_loader_challenges_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_challenges_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [])
    ], ChallengesComponent);
    return ChallengesComponent;
}());



/***/ }),

/***/ "IBHi":
/*!**************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/challenges/challenges.component.html ***!
  \**************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-header card-header-info card-header-icon\">\n                        <div class=\"card-icon\">\n                            <i class=\"material-icons\">emoji_events</i>\n                        </div>\n                        <p class=\"card-category\">Completed</p>\n                        <h3 class=\"card-title\">5</h3>\n                    </div>\n                    <div class=\"card-footer\">\n                        <div class=\"stats\">Total Projects</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-primary\">\n                        <h4 class=\"card-title \">Challenges</h4>\n                        <p class=\"card-category\"></p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                                <thead class=\" text-primary\">\n                                    <th>\n                                        ID\n                                    </th>\n                                    <th>\n                                        Name\n                                    </th>\n                                    <th>\n                                        Country\n                                    </th>\n                                    <th>\n                                        City\n                                    </th>\n                                    <th>\n                                        Salary\n                                    </th>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            1\n                                        </td>\n                                        <td>\n                                            Dakota Rice\n                                        </td>\n                                        <td>\n                                            Niger\n                                        </td>\n                                        <td>\n                                            Oud-Turnhout\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $36,738\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            2\n                                        </td>\n                                        <td>\n                                            Minerva Hooper\n                                        </td>\n                                        <td>\n                                            Curaçao\n                                        </td>\n                                        <td>\n                                            Sinaai-Waas\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $23,789\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            3\n                                        </td>\n                                        <td>\n                                            Sage Rodriguez\n                                        </td>\n                                        <td>\n                                            Netherlands\n                                        </td>\n                                        <td>\n                                            Baileux\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $56,142\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            4\n                                        </td>\n                                        <td>\n                                            Philip Chaney\n                                        </td>\n                                        <td>\n                                            Korea, South\n                                        </td>\n                                        <td>\n                                            Overland Park\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $38,735\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            5\n                                        </td>\n                                        <td>\n                                            Doris Greene\n                                        </td>\n                                        <td>\n                                            Malawi\n                                        </td>\n                                        <td>\n                                            Feldkirchen in Kärnten\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $63,542\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            6\n                                        </td>\n                                        <td>\n                                            Mason Porter\n                                        </td>\n                                        <td>\n                                            Chile\n                                        </td>\n                                        <td>\n                                            Gloucester\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $78,615\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  ");

/***/ }),

/***/ "IqXj":
/*!*************************************************************!*\
  !*** ./src/app/layouts/admin-layout/admin-layout.module.ts ***!
  \*************************************************************/
/*! exports provided: AdminLayoutModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLayoutModule", function() { return AdminLayoutModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var ng_circle_progress__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ng-circle-progress */ "K1R0");
/* harmony import */ var _admin_layout_routing__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./admin-layout.routing */ "qZ7x");
/* harmony import */ var _pages_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../pages/dashboard/dashboard.component */ "U5Cf");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/button */ "bTqV");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/input */ "qFsG");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/form-field */ "kmnG");
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/tooltip */ "Qu3c");
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/select */ "d3UM");
/* harmony import */ var app_pages_resources_resources_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/pages/resources/resources.component */ "F3Tb");
/* harmony import */ var app_pages_projects_projects_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/pages/projects/projects.component */ "u/sh");
/* harmony import */ var app_pages_blogs_blogs_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/pages/blogs/blogs.component */ "RdVG");
/* harmony import */ var app_pages_discussion_discussion_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! app/pages/discussion/discussion.component */ "8Xqe");
/* harmony import */ var app_pages_user_user_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! app/pages/user/user.component */ "3OJA");
/* harmony import */ var app_pages_user_edit_user_edit_user_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! app/pages/user/edit-user/edit-user.component */ "5rky");
/* harmony import */ var app_pages_challenges_challenges_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! app/pages/challenges/challenges.component */ "Gr0w");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};




















var AdminLayoutModule = /** @class */ (function () {
    function AdminLayoutModule() {
    }
    AdminLayoutModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forChild(_admin_layout_routing__WEBPACK_IMPORTED_MODULE_5__["AdminLayoutRoutes"]),
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"],
                _angular_material_button__WEBPACK_IMPORTED_MODULE_7__["MatButtonModule"],
                _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatRippleModule"],
                _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"],
                _angular_material_input__WEBPACK_IMPORTED_MODULE_8__["MatInputModule"],
                _angular_material_select__WEBPACK_IMPORTED_MODULE_12__["MatSelectModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_11__["MatTooltipModule"],
                ng_circle_progress__WEBPACK_IMPORTED_MODULE_4__["NgCircleProgressModule"].forRoot({
                    "unitsFontSize": "25",
                    "titleFontSize": "30",
                    "outerStrokeWidth": 29,
                    "innerStrokeWidth": 12,
                    "showSubtitle": false,
                    "showInnerStroke": false,
                    "responsive": true
                })
            ],
            declarations: [
                _pages_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_6__["DashboardComponent"],
                app_pages_resources_resources_component__WEBPACK_IMPORTED_MODULE_13__["ResourcesComponent"],
                app_pages_challenges_challenges_component__WEBPACK_IMPORTED_MODULE_19__["ChallengesComponent"],
                app_pages_projects_projects_component__WEBPACK_IMPORTED_MODULE_14__["ProjectsComponent"],
                app_pages_blogs_blogs_component__WEBPACK_IMPORTED_MODULE_15__["BlogsComponent"],
                app_pages_discussion_discussion_component__WEBPACK_IMPORTED_MODULE_16__["DiscussionComponent"],
                app_pages_user_user_component__WEBPACK_IMPORTED_MODULE_17__["UserComponent"],
                app_pages_user_edit_user_edit_user_component__WEBPACK_IMPORTED_MODULE_18__["EditUserComponent"]
            ]
        })
    ], AdminLayoutModule);
    return AdminLayoutModule;
}());



/***/ }),

/***/ "IsEm":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/resources/resources.component.html ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n    <div class=\"container\">\n        <div class=\"row\">\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-header card-header-info card-header-icon\">\n                        <div class=\"card-icon\">\n                            <i class=\"material-icons\">rule_folder</i>\n                        </div>\n                        <p class=\"card-category\">Completed</p>\n                        <h3 class=\"card-title\">5</h3>\n                    </div>\n                    <div class=\"card-footer\">\n                        <div class=\"stats\">\n                            <a href=\"javascript:void(0)\">Total Projects</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                <div class=\"card card-stats\">\n                    <div class=\"card-header card-header-info card-header-icon\">\n                        <div class=\"card-icon\">\n                            <i class=\"material-icons\">info_outline</i>\n                        </div>\n                        <p class=\"card-category\">Assessment</p>\n                        <h3 class=\"card-title\">127</h3>\n                        \n                    </div>\n                    <div class=\"card-footer\">\n                        <div class=\"stats\">\n                              <a href=\"javascript:void(0)\">Assessment score</a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-primary\">\n                        <h4 class=\"card-title \">Resources</h4>\n                        <p class=\"card-category\"> A guide to achieving your goal</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                                <thead class=\" text-primary\">\n                                    <th>\n                                        S/N\n                                    </th>\n                                    <th>\n                                        Title\n                                    </th>\n                                    <th>\n                                        Date\n                                    </th>\n                                    <th>\n                                        Category\n                                    </th>\n                                    <th class=\"td-actions text-right\">\n                                        View\n                                    </th>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            1\n                                        </td>\n                                        <td>\n                                            Introduction to Data\n                                        </td>\n                                        <td>\n                                            8/1/2021\n                                        </td>\n                                        <td>\n                                            Data Analysis\n                                        </td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"View Resource\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">visibility</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            2\n                                        </td>\n                                        <td>\n                                            Data Analysis Fundamental\n                                        </td>\n                                        <td>\n                                            8/1/2021\n                                        </td>\n                                        <td>\n                                            Data Analysis\n                                        </td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"View Resource\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">visibility</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            3\n                                        </td>\n                                        <td>\n                                            Getting Stated with Statistic\n                                        </td>\n                                        <td>\n                                            8/1/2021\n                                        </td>\n                                        <td>\n                                            Statistics\n                                        </td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"View Resource\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">visibility</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            4\n                                        </td>\n                                        <td>\n                                            Machine Learning Basics\n                                        </td>\n                                        <td>\n                                            8/1/2021\n                                        </td>\n                                        <td>\n                                            Machine Learning\n                                        </td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"View Resource\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">visibility</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  ");

/***/ }),

/***/ "Ixm7":
/*!************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/dashboard/dashboard.component.html ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n  <div class=\"container\">\n      <!-- welcome card -->\n      <div class=\"col-12\">\n        <h3 class=\"card-title\">Welcome, {{'Enock'}} <div class=\"user-type\">{{user_type}}</div></h3> \n      </div>\n      \n      <div class=\"row\">\n          <div class=\"col-lg-7 col-md-12 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-lg-6 col-md-6 col-sm-6\" *ngIf=\"user_type=='fellow'\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">fitness_center</i>\n                            </div>\n                            <p class=\"card-category\">Tasks</p>\n                            <h3 class=\"card-title\">3</h3>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                <a [routerLink]=\"['/resources']\">Task completed</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-sm-6\" *ngIf=\"user_type=='fellow'\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">info_outline</i>\n                            </div>\n                            <p class=\"card-category\">Assessment</p>\n                            <h3 class=\"card-title\">120.3</h3>\n                            \n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                  <a [routerLink]=\"['/resources']\">Assessment score</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">folder</i>\n                            </div>\n                            <p class=\"card-category\">Projects</p>\n                            <h3 class=\"card-title\">5</h3>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                <a [routerLink]=\"['/projects']\">Completed projects</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">edit_note</i>\n                            </div>\n                            <p class=\"card-category\">Blogs</p>\n                            <h3 class=\"card-title\">5</h3>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                <a [routerLink]=\"['/blog']\">Blog posts</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"card\">\n                        <div class=\"card-header card-header-primary\">\n                            <h4 class=\"card-title\">Discussion</h4>\n                        </div>\n                        <div class=\"card-body\">\n                            <table class=\"table table-hover\">\n                                <tbody>\n                                    <tr>\n                                        <td>12/06/2021</td>\n                                        <td>Sign contract for \"What are conference organizers afraid of?\"</td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">forum</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>12/06/2021</td>\n                                        <td>Lines From Great Russian Literature? Or E-mails From My Boss?</td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">forum</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>10/06/2021</td>\n                                        <td>Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroit\n                                        </td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">forum</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>04/06/2021</td>\n                                        <td>Create 4 Invisible User Experiences you Never Knew About</td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">forum</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>04/06/2021</td>\n                                        <td>Create 4 Invisible User Experiences you Never Knew About</td>\n                                        <td class=\"td-actions text-right\">\n                                            <button mat-raised-button type=\"button\" matTooltip=\"Edit Task\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                                <i class=\"material-icons\">forum</i>\n                                            </button>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n          </div>\n          <div class=\"col-lg-5 col-md-12 col-sm-12\">\n                <div class=\"card\" *ngIf=\"user_type=='fellow'\">\n                    <div class=\"card-header card-header-warning\">\n                        <h4 class=\"card-title\">Leaders Board</h4>\n                        <p class=\"card-category\">Data Science Cohort, 2021</p>\n                    </div>\n                    <div class=\"card-body table-responsive\">\n                        <table class=\"table table-hover\">\n                            <thead class=\"text-warning\">\n                                <th>Rank</th>\n                                <th>Name</th>\n                                <th>Country</th>\n                                <th>Score</th>\n                            </thead>\n                            <tbody>\n                                <tr>\n                                    <td>1</td>\n                                    <td>Dakota Rice</td>\n                                    <td>Uganda</td>\n                                    <td>97.5</td>\n                                </tr>\n                                <tr>\n                                    <td>2</td>\n                                    <td>Minerva Hooper</td>\n                                    <td>Uganda</td>\n                                    <td>97.2</td>\n                                </tr>\n                                <tr>\n                                    <td>3</td>\n                                    <td>Sage Rodriguez</td>\n                                    <td>Uganda</td>\n                                    <td>92</td>\n                                </tr>\n                                <tr>\n                                    <td>4</td>\n                                    <td>Philip Chaney</td>\n                                    <td>Uganda</td>\n                                    <td>88.3</td>\n                                </tr>\n                                <tr>\n                                    <td>5</td>\n                                    <td>Detj Briguez</td>\n                                    <td>Uganda</td>\n                                    <td>82.3</td>\n                                </tr>\n                                <tr>\n                                    <td>6</td>\n                                    <td>Philip Chaney</td>\n                                    <td>Uganda</td>\n                                    <td>80.6</td>\n                                </tr>\n                                <tr>\n                                    <td>7</td>\n                                    <td>Sage Rodriguez</td>\n                                    <td>Uganda</td>\n                                    <td>92</td>\n                                </tr>\n                                <tr>\n                                    <td>8</td>\n                                    <td>Philip Chaney</td>\n                                    <td>Uganda</td>\n                                    <td>88.3</td>\n                                </tr>\n                                <tr>\n                                    <td>9</td>\n                                    <td>Detj Briguez</td>\n                                    <td>Uganda</td>\n                                    <td>82.3</td>\n                                </tr>\n                                <tr>\n                                    <td>10</td>\n                                    <td>Philip Chaney</td>\n                                    <td>Uganda</td>\n                                    <td>80.6</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <div class=\"card\" *ngIf=\"user_type=='member'\">\n                    <div class=\"card-header card-header-warning\">\n                        <h4 class=\"card-title\">Challenges</h4>\n                    </div>\n                    <div class=\"card-body table-responsive\">\n                        <table class=\"table table-hover\">\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <div class=\"form-check\">\n                                            <label class=\"form-check-label\">\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked disabled>\n                                                <span class=\"form-check-sign\">\n                                                    <span class=\"check\"></span>\n                                                </span>\n                                            </label>\n                                        </div>\n                                    </td>\n                                    <td>Follow Eloquent Data on Twitter</td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"View Challenge\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">chevron_right</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <div class=\"form-check\">\n                                            <label class=\"form-check-label\">\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" disabled>\n                                                <span class=\"form-check-sign\">\n                                                    <span class=\"check\"></span>\n                                                </span>\n                                            </label>\n                                        </div>\n                                    </td>\n                                    <td>Join Eloquent Data Facebook page</td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"View Challenge\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">chevron_right</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <div class=\"form-check\">\n                                            <label class=\"form-check-label\">\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"\"  disabled>\n                                                <span class=\"form-check-sign\">\n                                                    <span class=\"check\"></span>\n                                                </span>\n                                            </label>\n                                        </div>\n                                    </td>\n                                    <td>Sign up to GitLab\n                                    </td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"View Challenge\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">chevron_right</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <div class=\"form-check\">\n                                            <label class=\"form-check-label\">\n                                                <input class=\"form-check-input\" type=\"checkbox\" value=\"\" checked disabled>\n                                                <span class=\"form-check-sign\">\n                                                    <span class=\"check\"></span>\n                                                </span>\n                                            </label>\n                                        </div>\n                                    </td>\n                                    <td>Check the discussion tab</td>\n                                    <td class=\"td-actions text-right\">\n                                        <button mat-raised-button type=\"button\" matTooltip=\"View Challenge\" [matTooltipPosition]=\"'above'\" class=\"btn btn-primary btn-link btn-sm btn-just-icon\">\n                                            <i class=\"material-icons\">chevron_right</i>\n                                        </button>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n          </div>\n      </div>\n  </div>\n</div>\n");

/***/ }),

/***/ "Jxph":
/*!**********************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/projects/projects.component.html ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n    <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">folder</i>\n                            </div>\n                            <p class=\"card-category\">Projects</p>\n                            <h3 class=\"card-title\">6</h3>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                <a href=\"javascript:void(0)\">Total Projects</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">source</i>\n                            </div>\n                            <p class=\"card-category\">Active</p>\n                            <h3 class=\"card-title\">1</h3>\n                            \n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                  <a href=\"javascript:void(0)\">Active projects</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">visibility</i>\n                            </div>\n                            <p class=\"card-category\">Views</p>\n                            <h3 class=\"card-title\">127</h3>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                <a href=\"javascript:void(0)\">Viewed projects</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card add\">\n                        <h1>+</h1>\n                        <div class=\"add-footer\">\n                            Create a project\n                        </div>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"row\">\n            <div class=\"col-lg-8 col-md-8 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-primary\">\n                        <h4 class=\"card-title \">My Projects</h4>\n                        <p class=\"card-category\"> Here is a subtitle for this table</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                                <thead class=\" text-primary\">\n                                    <th>\n                                        ID\n                                    </th>\n                                    <th>\n                                        Name\n                                    </th>\n                                    <th>\n                                        Country\n                                    </th>\n                                    <th>\n                                        City\n                                    </th>\n                                    <th>\n                                        Salary\n                                    </th>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            1\n                                        </td>\n                                        <td>\n                                            Dakota Rice\n                                        </td>\n                                        <td>\n                                            Niger\n                                        </td>\n                                        <td>\n                                            Oud-Turnhout\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $36,738\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            2\n                                        </td>\n                                        <td>\n                                            Minerva Hooper\n                                        </td>\n                                        <td>\n                                            Curaçao\n                                        </td>\n                                        <td>\n                                            Sinaai-Waas\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $23,789\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            3\n                                        </td>\n                                        <td>\n                                            Sage Rodriguez\n                                        </td>\n                                        <td>\n                                            Netherlands\n                                        </td>\n                                        <td>\n                                            Baileux\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $56,142\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            4\n                                        </td>\n                                        <td>\n                                            Philip Chaney\n                                        </td>\n                                        <td>\n                                            Korea, South\n                                        </td>\n                                        <td>\n                                            Overland Park\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $38,735\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            5\n                                        </td>\n                                        <td>\n                                            Doris Greene\n                                        </td>\n                                        <td>\n                                            Malawi\n                                        </td>\n                                        <td>\n                                            Feldkirchen in Kärnten\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $63,542\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            6\n                                        </td>\n                                        <td>\n                                            Mason Porter\n                                        </td>\n                                        <td>\n                                            Chile\n                                        </td>\n                                        <td>\n                                            Gloucester\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $78,615\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4 col-md-4 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-warning\">\n                        <h4 class=\"card-title \">Recent Projects</h4>\n                        <p class=\"card-category\"> Here is a subtitle for this table</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                                <thead class=\" text-primary\">\n                                    <th>\n                                        ID\n                                    </th>\n                                    <th>\n                                        Name\n                                    </th>\n                                    <th>\n                                        Country\n                                    </th>\n                                    <th>\n                                        City\n                                    </th>\n                                    <th>\n                                        Salary\n                                    </th>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            1\n                                        </td>\n                                        <td>\n                                            Dakota Rice\n                                        </td>\n                                        <td>\n                                            Niger\n                                        </td>\n                                        <td>\n                                            Oud-Turnhout\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $36,738\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            2\n                                        </td>\n                                        <td>\n                                            Minerva Hooper\n                                        </td>\n                                        <td>\n                                            Curaçao\n                                        </td>\n                                        <td>\n                                            Sinaai-Waas\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $23,789\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            3\n                                        </td>\n                                        <td>\n                                            Sage Rodriguez\n                                        </td>\n                                        <td>\n                                            Netherlands\n                                        </td>\n                                        <td>\n                                            Baileux\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $56,142\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            4\n                                        </td>\n                                        <td>\n                                            Philip Chaney\n                                        </td>\n                                        <td>\n                                            Korea, South\n                                        </td>\n                                        <td>\n                                            Overland Park\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $38,735\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            5\n                                        </td>\n                                        <td>\n                                            Doris Greene\n                                        </td>\n                                        <td>\n                                            Malawi\n                                        </td>\n                                        <td>\n                                            Feldkirchen in Kärnten\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $63,542\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            6\n                                        </td>\n                                        <td>\n                                            Mason Porter\n                                        </td>\n                                        <td>\n                                            Chile\n                                        </td>\n                                        <td>\n                                            Gloucester\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $78,615\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  ");

/***/ }),

/***/ "K1R0":
/*!*************************************************************************************!*\
  !*** ./node_modules/ng-circle-progress/__ivy_ngcc__/fesm2015/ng-circle-progress.js ***!
  \*************************************************************************************/
/*! exports provided: CircleProgressComponent, CircleProgressOptions, NgCircleProgressModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircleProgressComponent", function() { return CircleProgressComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircleProgressOptions", function() { return CircleProgressOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgCircleProgressModule", function() { return NgCircleProgressModule; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "qCKp");











function CircleProgressComponent__svg_svg_0__svg_linearGradient_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "linearGradient");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](1, "stop", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](2, "stop", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("id", ctx_r1.svg.outerLinearGradient.id);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("stop-color", ctx_r1.svg.outerLinearGradient.colorStop1)("stop-opacity", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("stop-color", ctx_r1.svg.outerLinearGradient.colorStop2)("stop-opacity", 1);
  }
}

function CircleProgressComponent__svg_svg_0__svg_radialGradient_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "radialGradient");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](1, "stop", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](2, "stop", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("id", ctx_r2.svg.radialGradient.id);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("stop-color", ctx_r2.svg.radialGradient.colorStop1)("stop-opacity", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("stop-color", ctx_r2.svg.radialGradient.colorStop2)("stop-opacity", 1);
  }
}

function CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "circle");
  }

  if (rf & 2) {
    var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("cx", ctx_r8.svg.backgroundCircle.cx)("cy", ctx_r8.svg.backgroundCircle.cy)("r", ctx_r8.svg.backgroundCircle.r)("fill", ctx_r8.svg.backgroundCircle.fill)("fill-opacity", ctx_r8.svg.backgroundCircle.fillOpacity)("stroke", ctx_r8.svg.backgroundCircle.stroke)("stroke-width", ctx_r8.svg.backgroundCircle.strokeWidth);
  }
}

function CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "circle");
  }

  if (rf & 2) {
    var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattributeInterpolate1"]("fill", "url(#", ctx_r9.svg.radialGradient.id, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("cx", ctx_r9.svg.backgroundCircle.cx)("cy", ctx_r9.svg.backgroundCircle.cy)("r", ctx_r9.svg.backgroundCircle.r)("fill-opacity", ctx_r9.svg.backgroundCircle.fillOpacity)("stroke", ctx_r9.svg.backgroundCircle.stroke)("stroke-width", ctx_r9.svg.backgroundCircle.strokeWidth);
  }
}

function CircleProgressComponent__svg_svg_0__svg_ng_container_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_1_Template, 1, 7, "circle", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](2, CircleProgressComponent__svg_svg_0__svg_ng_container_4__svg_circle_2_Template, 1, 7, "circle", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !ctx_r3.options.backgroundGradient);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r3.options.backgroundGradient);
  }
}

function CircleProgressComponent__svg_svg_0__svg_circle_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "circle");
  }

  if (rf & 2) {
    var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("cx", ctx_r4.svg.circle.cx)("cy", ctx_r4.svg.circle.cy)("r", ctx_r4.svg.circle.r)("fill", ctx_r4.svg.circle.fill)("stroke", ctx_r4.svg.circle.stroke)("stroke-width", ctx_r4.svg.circle.strokeWidth);
  }
}

function CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "path");
  }

  if (rf & 2) {
    var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("d", ctx_r10.svg.path.d)("stroke", ctx_r10.svg.path.stroke)("stroke-width", ctx_r10.svg.path.strokeWidth)("stroke-linecap", ctx_r10.svg.path.strokeLinecap)("fill", ctx_r10.svg.path.fill);
  }
}

function CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "path");
  }

  if (rf & 2) {
    var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattributeInterpolate1"]("stroke", "url(#", ctx_r11.svg.outerLinearGradient.id, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("d", ctx_r11.svg.path.d)("stroke-width", ctx_r11.svg.path.strokeWidth)("stroke-linecap", ctx_r11.svg.path.strokeLinecap)("fill", ctx_r11.svg.path.fill);
  }
}

function CircleProgressComponent__svg_svg_0__svg_ng_container_6_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_1_Template, 1, 5, "path", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](2, CircleProgressComponent__svg_svg_0__svg_ng_container_6__svg_path_2_Template, 1, 5, "path", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !ctx_r5.options.outerStrokeGradient);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r5.options.outerStrokeGradient);
  }
}

function CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1__svg_tspan_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "tspan");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var tspan_r16 = ctx.$implicit;
    var ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("x", ctx_r15.svg.title.x)("y", ctx_r15.svg.title.y)("dy", tspan_r16.dy)("font-size", ctx_r15.svg.title.fontSize)("font-weight", ctx_r15.svg.title.fontWeight)("fill", ctx_r15.svg.title.color);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](tspan_r16.span);
  }
}

function CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1__svg_tspan_1_Template, 2, 7, "tspan", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r12.svg.title.tspans);
  }
}

function CircleProgressComponent__svg_svg_0__svg_text_7__svg_tspan_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "tspan");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("font-size", ctx_r13.svg.units.fontSize)("font-weight", ctx_r13.svg.units.fontWeight)("fill", ctx_r13.svg.units.color);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](ctx_r13.svg.units.text);
  }
}

function CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3__svg_tspan_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "tspan");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var tspan_r18 = ctx.$implicit;
    var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("x", ctx_r17.svg.subtitle.x)("y", ctx_r17.svg.subtitle.y)("dy", tspan_r18.dy)("font-size", ctx_r17.svg.subtitle.fontSize)("font-weight", ctx_r17.svg.subtitle.fontWeight)("fill", ctx_r17.svg.subtitle.color);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](tspan_r18.span);
  }
}

function CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3__svg_tspan_1_Template, 2, 7, "tspan", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngForOf", ctx_r14.svg.subtitle.tspans);
  }
}

function CircleProgressComponent__svg_svg_0__svg_text_7_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "text", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](1, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_1_Template, 2, 1, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](2, CircleProgressComponent__svg_svg_0__svg_text_7__svg_tspan_2_Template, 2, 4, "tspan", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](3, CircleProgressComponent__svg_svg_0__svg_text_7__svg_ng_container_3_Template, 2, 1, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("x", ctx_r6.svg.circle.cx)("y", ctx_r6.svg.circle.cy)("text-anchor", ctx_r6.svg.title.textAnchor);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r6.options.showTitle);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r6.options.showUnits);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r6.options.showSubtitle);
  }
}

function CircleProgressComponent__svg_svg_0__svg_image_8_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](0, "image", 9);
  }

  if (rf & 2) {
    var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("height", ctx_r7.svg.image.height)("width", ctx_r7.svg.image.width)("href", ctx_r7.svg.image.src, null, "xlink")("x", ctx_r7.svg.image.x)("y", ctx_r7.svg.image.y);
  }
}

function CircleProgressComponent__svg_svg_0_Template(rf, ctx) {
  if (rf & 1) {
    var _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "svg", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function CircleProgressComponent__svg_svg_0_Template__svg_svg_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵrestoreView"](_r20);
      var ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
      return ctx_r19.emitClickEvent($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "defs");
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](2, CircleProgressComponent__svg_svg_0__svg_linearGradient_2_Template, 3, 5, "linearGradient", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](3, CircleProgressComponent__svg_svg_0__svg_radialGradient_3_Template, 3, 5, "radialGradient", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](4, CircleProgressComponent__svg_svg_0__svg_ng_container_4_Template, 3, 2, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](5, CircleProgressComponent__svg_svg_0__svg_circle_5_Template, 1, 6, "circle", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](6, CircleProgressComponent__svg_svg_0__svg_ng_container_6_Template, 3, 2, "ng-container", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](7, CircleProgressComponent__svg_svg_0__svg_text_7_Template, 4, 6, "text", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](8, CircleProgressComponent__svg_svg_0__svg_image_8_Template, 1, 5, "image", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("viewBox", ctx_r0.svg.viewBox)("height", ctx_r0.svg.height)("width", ctx_r0.svg.width)("class", ctx_r0.options.class);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r0.options.outerStrokeGradient);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r0.options.backgroundGradient);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r0.options.showBackground);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r0.options.showInnerStroke);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", +ctx_r0.options.percent !== 0 || ctx_r0.options.showZeroOuterStroke);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", !ctx_r0.options.showImage && (ctx_r0.options.showTitle || ctx_r0.options.showUnits || ctx_r0.options.showSubtitle));
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx_r0.options.showImage);
  }
}

var CircleProgressOptions = function CircleProgressOptions() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CircleProgressOptions);

  this.class = '';
  this.backgroundGradient = false;
  this.backgroundColor = 'transparent';
  this.backgroundGradientStopColor = 'transparent';
  this.backgroundOpacity = 1;
  this.backgroundStroke = 'transparent';
  this.backgroundStrokeWidth = 0;
  this.backgroundPadding = 5;
  this.percent = 0;
  this.radius = 90;
  this.space = 4;
  this.toFixed = 0;
  this.maxPercent = 1000;
  this.renderOnClick = true;
  this.units = '%';
  this.unitsFontSize = '10';
  this.unitsFontWeight = 'normal';
  this.unitsColor = '#444444';
  this.outerStrokeGradient = false;
  this.outerStrokeWidth = 8;
  this.outerStrokeColor = '#78C000';
  this.outerStrokeGradientStopColor = 'transparent';
  this.outerStrokeLinecap = 'round';
  this.innerStrokeColor = '#C7E596';
  this.innerStrokeWidth = 4;
  this.titleFormat = undefined;
  this.title = 'auto';
  this.titleColor = '#444444';
  this.titleFontSize = '20';
  this.titleFontWeight = 'normal';
  this.subtitleFormat = undefined;
  this.subtitle = 'progress';
  this.subtitleColor = '#A9A9A9';
  this.subtitleFontSize = '10';
  this.subtitleFontWeight = 'normal';
  this.imageSrc = undefined;
  this.imageHeight = undefined;
  this.imageWidth = undefined;
  this.animation = true;
  this.animateTitle = true;
  this.animateSubtitle = false;
  this.animationDuration = 500;
  this.showTitle = true;
  this.showSubtitle = true;
  this.showUnits = true;
  this.showImage = false;
  this.showBackground = true;
  this.showInnerStroke = true;
  this.clockwise = true;
  this.responsive = false;
  this.startFromZero = true;
  this.showZeroOuterStroke = true;
  this.lazy = false;
};
/** @dynamic Prevent compiling error when using type `Document` https://github.com/angular/angular/issues/20351 */


var CircleProgressComponent = /*#__PURE__*/function () {
  function CircleProgressComponent(defaultOptions, elRef, document) {
    var _this = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CircleProgressComponent);

    this.elRef = elRef;
    this.document = document;
    this.onClick = new _angular_core__WEBPACK_IMPORTED_MODULE_5__["EventEmitter"](); // <svg> of component

    this.svgElement = null; // whether <svg> is in viewport

    this.isInViewport = false; // event for notifying viewport change caused by scrolling or resizing

    this.onViewportChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_5__["EventEmitter"]();
    this._viewportChangedSubscriber = null;
    this.options = new CircleProgressOptions();
    this.defaultOptions = new CircleProgressOptions();
    this._lastPercent = 0;
    this._gradientUUID = null;

    this.render = function () {
      _this.applyOptions();

      if (_this.options.lazy) {
        // Draw svg if it doesn't exist
        _this.svgElement === null && _this.draw(_this._lastPercent); // Draw it only when it's in the viewport

        if (_this.isInViewport) {
          // Draw it at the latest position when I am in.
          if (_this.options.animation && _this.options.animationDuration > 0) {
            _this.animate(_this._lastPercent, _this.options.percent);
          } else {
            _this.draw(_this.options.percent);
          }

          _this._lastPercent = _this.options.percent;
        }
      } else {
        if (_this.options.animation && _this.options.animationDuration > 0) {
          _this.animate(_this._lastPercent, _this.options.percent);
        } else {
          _this.draw(_this.options.percent);
        }

        _this._lastPercent = _this.options.percent;
      }
    };

    this.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {
      var angleInRadius = angleInDegrees * Math.PI / 180;
      var x = centerX + Math.sin(angleInRadius) * radius;
      var y = centerY - Math.cos(angleInRadius) * radius;
      return {
        x: x,
        y: y
      };
    };

    this.draw = function (percent) {
      // make percent reasonable
      percent = percent === undefined ? _this.options.percent : Math.abs(percent); // circle percent shouldn't be greater than 100%.

      var circlePercent = percent > 100 ? 100 : percent; // determine box size

      var boxSize = _this.options.radius * 2 + _this.options.outerStrokeWidth * 2;

      if (_this.options.showBackground) {
        boxSize += _this.options.backgroundStrokeWidth * 2 + _this.max(0, _this.options.backgroundPadding * 2);
      } // the centre of the circle


      var centre = {
        x: boxSize / 2,
        y: boxSize / 2
      }; // the start point of the arc

      var startPoint = {
        x: centre.x,
        y: centre.y - _this.options.radius
      }; // get the end point of the arc

      var endPoint = _this.polarToCartesian(centre.x, centre.y, _this.options.radius, 360 * (_this.options.clockwise ? circlePercent : 100 - circlePercent) / 100); // ####################
      // We'll get an end point with the same [x, y] as the start point when percent is 100%, so move x a little bit.


      if (circlePercent === 100) {
        endPoint.x = endPoint.x + (_this.options.clockwise ? -0.01 : +0.01);
      } // largeArcFlag and sweepFlag


      var largeArcFlag, sweepFlag;

      if (circlePercent > 50) {
        var _ref = _this.options.clockwise ? [1, 1] : [1, 0];

        var _ref2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_ref, 2);

        largeArcFlag = _ref2[0];
        sweepFlag = _ref2[1];
      } else {
        var _ref3 = _this.options.clockwise ? [0, 1] : [0, 0];

        var _ref4 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_ref3, 2);

        largeArcFlag = _ref4[0];
        sweepFlag = _ref4[1];
      } // percent may not equal the actual percent


      var titlePercent = _this.options.animateTitle ? percent : _this.options.percent;
      var titleTextPercent = titlePercent > _this.options.maxPercent ? "".concat(_this.options.maxPercent.toFixed(_this.options.toFixed), "+") : titlePercent.toFixed(_this.options.toFixed);
      var subtitlePercent = _this.options.animateSubtitle ? percent : _this.options.percent; // get title object

      var title = {
        x: centre.x,
        y: centre.y,
        textAnchor: 'middle',
        color: _this.options.titleColor,
        fontSize: _this.options.titleFontSize,
        fontWeight: _this.options.titleFontWeight,
        texts: [],
        tspans: []
      }; // from v0.9.9, both title and titleFormat(...) may be an array of string.

      if (_this.options.titleFormat !== undefined && _this.options.titleFormat.constructor.name === 'Function') {
        var formatted = _this.options.titleFormat(titlePercent);

        if (formatted instanceof Array) {
          title.texts = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(formatted);
        } else {
          title.texts.push(formatted.toString());
        }
      } else {
        if (_this.options.title === 'auto') {
          title.texts.push(titleTextPercent);
        } else {
          if (_this.options.title instanceof Array) {
            title.texts = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_this.options.title);
          } else {
            title.texts.push(_this.options.title.toString());
          }
        }
      } // get subtitle object


      var subtitle = {
        x: centre.x,
        y: centre.y,
        textAnchor: 'middle',
        color: _this.options.subtitleColor,
        fontSize: _this.options.subtitleFontSize,
        fontWeight: _this.options.subtitleFontWeight,
        texts: [],
        tspans: []
      }; // from v0.9.9, both subtitle and subtitleFormat(...) may be an array of string.

      if (_this.options.subtitleFormat !== undefined && _this.options.subtitleFormat.constructor.name === 'Function') {
        var _formatted = _this.options.subtitleFormat(subtitlePercent);

        if (_formatted instanceof Array) {
          subtitle.texts = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_formatted);
        } else {
          subtitle.texts.push(_formatted.toString());
        }
      } else {
        if (_this.options.subtitle instanceof Array) {
          subtitle.texts = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_this.options.subtitle);
        } else {
          subtitle.texts.push(_this.options.subtitle.toString());
        }
      } // get units object


      var units = {
        text: "".concat(_this.options.units),
        fontSize: _this.options.unitsFontSize,
        fontWeight: _this.options.unitsFontWeight,
        color: _this.options.unitsColor
      }; // get total count of text lines to be shown

      var rowCount = 0,
          rowNum = 1;
      _this.options.showTitle && (rowCount += title.texts.length);
      _this.options.showSubtitle && (rowCount += subtitle.texts.length); // calc dy for each tspan for title

      if (_this.options.showTitle) {
        var _iterator = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(title.texts),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var span = _step.value;
            title.tspans.push({
              span: span,
              dy: _this.getRelativeY(rowNum, rowCount)
            });
            rowNum++;
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      } // calc dy for each tspan for subtitle


      if (_this.options.showSubtitle) {
        var _iterator2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(subtitle.texts),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var _span = _step2.value;
            subtitle.tspans.push({
              span: _span,
              dy: _this.getRelativeY(rowNum, rowCount)
            });
            rowNum++;
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      } // create ID for gradient element


      if (null === _this._gradientUUID) {
        _this._gradientUUID = _this.uuid();
      } // Bring it all together


      _this.svg = {
        viewBox: "0 0 ".concat(boxSize, " ").concat(boxSize),
        // Set both width and height to '100%' if it's responsive
        width: _this.options.responsive ? '100%' : boxSize,
        height: _this.options.responsive ? '100%' : boxSize,
        backgroundCircle: {
          cx: centre.x,
          cy: centre.y,
          r: _this.options.radius + _this.options.outerStrokeWidth / 2 + _this.options.backgroundPadding,
          fill: _this.options.backgroundColor,
          fillOpacity: _this.options.backgroundOpacity,
          stroke: _this.options.backgroundStroke,
          strokeWidth: _this.options.backgroundStrokeWidth
        },
        path: {
          // A rx ry x-axis-rotation large-arc-flag sweep-flag x y (https://developer.mozilla.org/en/docs/Web/SVG/Tutorial/Paths#Arcs)
          d: "M ".concat(startPoint.x, " ").concat(startPoint.y, "\n        A ").concat(_this.options.radius, " ").concat(_this.options.radius, " 0 ").concat(largeArcFlag, " ").concat(sweepFlag, " ").concat(endPoint.x, " ").concat(endPoint.y),
          stroke: _this.options.outerStrokeColor,
          strokeWidth: _this.options.outerStrokeWidth,
          strokeLinecap: _this.options.outerStrokeLinecap,
          fill: 'none'
        },
        circle: {
          cx: centre.x,
          cy: centre.y,
          r: _this.options.radius - _this.options.space - _this.options.outerStrokeWidth / 2 - _this.options.innerStrokeWidth / 2,
          fill: 'none',
          stroke: _this.options.innerStrokeColor,
          strokeWidth: _this.options.innerStrokeWidth
        },
        title: title,
        units: units,
        subtitle: subtitle,
        image: {
          x: centre.x - _this.options.imageWidth / 2,
          y: centre.y - _this.options.imageHeight / 2,
          src: _this.options.imageSrc,
          width: _this.options.imageWidth,
          height: _this.options.imageHeight
        },
        outerLinearGradient: {
          id: 'outer-linear-' + _this._gradientUUID,
          colorStop1: _this.options.outerStrokeColor,
          colorStop2: _this.options.outerStrokeGradientStopColor === 'transparent' ? '#FFF' : _this.options.outerStrokeGradientStopColor
        },
        radialGradient: {
          id: 'radial-' + _this._gradientUUID,
          colorStop1: _this.options.backgroundColor,
          colorStop2: _this.options.backgroundGradientStopColor === 'transparent' ? '#FFF' : _this.options.backgroundGradientStopColor
        }
      };
    };

    this.getAnimationParameters = function (previousPercent, currentPercent) {
      var MIN_INTERVAL = 10;
      var times, step, interval;
      var fromPercent = _this.options.startFromZero ? 0 : previousPercent < 0 ? 0 : previousPercent;
      var toPercent = currentPercent < 0 ? 0 : _this.min(currentPercent, _this.options.maxPercent);
      var delta = Math.abs(Math.round(toPercent - fromPercent));

      if (delta >= 100) {
        // we will finish animation in 100 times
        times = 100;

        if (!_this.options.animateTitle && !_this.options.animateSubtitle) {
          step = 1;
        } else {
          // show title or subtitle animation even if the arc is full, we also need to finish it in 100 times.
          step = Math.round(delta / times);
        }
      } else {
        // we will finish in as many times as the number of percent.
        times = delta;
        step = 1;
      } // Get the interval of timer


      interval = Math.round(_this.options.animationDuration / times); // Readjust all values if the interval of timer is extremely small.

      if (interval < MIN_INTERVAL) {
        interval = MIN_INTERVAL;
        times = _this.options.animationDuration / interval;

        if (!_this.options.animateTitle && !_this.options.animateSubtitle && delta > 100) {
          step = Math.round(100 / times);
        } else {
          step = Math.round(delta / times);
        }
      } // step must be greater than 0.


      if (step < 1) {
        step = 1;
      }

      return {
        times: times,
        step: step,
        interval: interval
      };
    };

    this.animate = function (previousPercent, currentPercent) {
      if (_this._timerSubscription && !_this._timerSubscription.closed) {
        _this._timerSubscription.unsubscribe();
      }

      var fromPercent = _this.options.startFromZero ? 0 : previousPercent;
      var toPercent = currentPercent;

      var _this$getAnimationPar = _this.getAnimationParameters(fromPercent, toPercent),
          step = _this$getAnimationPar.step,
          interval = _this$getAnimationPar.interval;

      var count = fromPercent;

      if (fromPercent < toPercent) {
        _this._timerSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["timer"])(0, interval).subscribe(function () {
          count += step;

          if (count <= toPercent) {
            if (!_this.options.animateTitle && !_this.options.animateSubtitle && count >= 100) {
              _this.draw(toPercent);

              _this._timerSubscription.unsubscribe();
            } else {
              _this.draw(count);
            }
          } else {
            _this.draw(toPercent);

            _this._timerSubscription.unsubscribe();
          }
        });
      } else {
        _this._timerSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["timer"])(0, interval).subscribe(function () {
          count -= step;

          if (count >= toPercent) {
            if (!_this.options.animateTitle && !_this.options.animateSubtitle && toPercent >= 100) {
              _this.draw(toPercent);

              _this._timerSubscription.unsubscribe();
            } else {
              _this.draw(count);
            }
          } else {
            _this.draw(toPercent);

            _this._timerSubscription.unsubscribe();
          }
        });
      }
    };

    this.emitClickEvent = function (event) {
      if (_this.options.renderOnClick) {
        _this.animate(0, _this.options.percent);
      }

      _this.onClick.emit(event);
    };

    this.applyOptions = function () {
      // the options of <circle-progress> may change already
      for (var _i = 0, _Object$keys = Object.keys(_this.options); _i < _Object$keys.length; _i++) {
        var name = _Object$keys[_i];

        if (_this.hasOwnProperty(name) && _this[name] !== undefined) {
          _this.options[name] = _this[name];
        } else if (_this.templateOptions && _this.templateOptions[name] !== undefined) {
          _this.options[name] = _this.templateOptions[name];
        }
      } // make sure key options valid


      _this.options.radius = Math.abs(+_this.options.radius);
      _this.options.space = +_this.options.space;
      _this.options.percent = +_this.options.percent > 0 ? +_this.options.percent : 0;
      _this.options.maxPercent = Math.abs(+_this.options.maxPercent);
      _this.options.animationDuration = Math.abs(_this.options.animationDuration);
      _this.options.outerStrokeWidth = Math.abs(+_this.options.outerStrokeWidth);
      _this.options.innerStrokeWidth = Math.abs(+_this.options.innerStrokeWidth);
      _this.options.backgroundPadding = +_this.options.backgroundPadding;
    };

    this.getRelativeY = function (rowNum, rowCount) {
      // why '-0.18em'? It's a magic number when property 'alignment-baseline' equals 'baseline'. :)
      var initialOffset = -0.18,
          offset = 1;
      return (initialOffset + offset * (rowNum - rowCount / 2)).toFixed(2) + 'em';
    };

    this.min = function (a, b) {
      return a < b ? a : b;
    };

    this.max = function (a, b) {
      return a > b ? a : b;
    };

    this.uuid = function () {
      // https://www.w3resource.com/javascript-exercises/javascript-math-exercise-23.php
      var dt = new Date().getTime();
      var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        var r = (dt + Math.random() * 16) % 16 | 0;
        dt = Math.floor(dt / 16);
        return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);
      });
      return uuid;
    };

    this.findSvgElement = function () {
      if (this.svgElement === null) {
        var tags = this.elRef.nativeElement.getElementsByTagName('svg');

        if (tags.length > 0) {
          this.svgElement = tags[0];
        }
      }
    };

    this.checkViewport = function () {
      _this.findSvgElement();

      var previousValue = _this.isInViewport;
      _this.isInViewport = _this.isElementInViewport(_this.svgElement);

      if (previousValue !== _this.isInViewport) {
        _this.onViewportChanged.emit({
          oldValue: previousValue,
          newValue: _this.isInViewport
        });
      }
    };

    this.onScroll = function (event) {
      _this.checkViewport();
    };

    this.loadEventsForLazyMode = function () {
      if (_this.options.lazy) {
        _this.document.addEventListener('scroll', _this.onScroll, true);

        _this.window.addEventListener('resize', _this.onScroll, true);

        if (_this._viewportChangedSubscriber === null) {
          _this._viewportChangedSubscriber = _this.onViewportChanged.subscribe(function (_ref5) {
            var oldValue = _ref5.oldValue,
                newValue = _ref5.newValue;
            newValue ? _this.render() : null;
          });
        } // svgElement must be created in DOM before being checked.
        // Is there a better way to check the existence of svgElemnt?


        var _timer = Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["timer"])(0, 50).subscribe(function () {
          _this.svgElement === null ? _this.checkViewport() : _timer.unsubscribe();
        });
      }
    };

    this.unloadEventsForLazyMode = function () {
      // Remove event listeners
      _this.document.removeEventListener('scroll', _this.onScroll, true);

      _this.window.removeEventListener('resize', _this.onScroll, true); // Unsubscribe onViewportChanged


      if (_this._viewportChangedSubscriber !== null) {
        _this._viewportChangedSubscriber.unsubscribe();

        _this._viewportChangedSubscriber = null;
      }
    };

    this.document = document;
    this.window = this.document.defaultView;
    Object.assign(this.options, defaultOptions);
    Object.assign(this.defaultOptions, defaultOptions);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(CircleProgressComponent, [{
    key: "isDrawing",
    value: function isDrawing() {
      return this._timerSubscription && !this._timerSubscription.closed;
    }
  }, {
    key: "isElementInViewport",
    value: function isElementInViewport(el) {
      // Return false if el has not been created in page.
      if (el === null || el === undefined) return false; // Check if the element is out of view due to a container scrolling

      var rect = el.getBoundingClientRect(),
          parent = el.parentNode,
          parentRect;

      do {
        parentRect = parent.getBoundingClientRect();
        if (rect.top >= parentRect.bottom) return false;
        if (rect.bottom <= parentRect.top) return false;
        if (rect.left >= parentRect.right) return false;
        if (rect.right <= parentRect.left) return false;
        parent = parent.parentNode;
      } while (parent != this.document.body); // Check its within the document viewport


      if (rect.top >= (this.window.innerHeight || this.document.documentElement.clientHeight)) return false;
      if (rect.bottom <= 0) return false;
      if (rect.left >= (this.window.innerWidth || this.document.documentElement.clientWidth)) return false;
      if (rect.right <= 0) return false;
      return true;
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      this.loadEventsForLazyMode();
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.unloadEventsForLazyMode();
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      this.render();

      if ('lazy' in changes) {
        changes.lazy.currentValue ? this.loadEventsForLazyMode() : this.unloadEventsForLazyMode();
      }
    }
  }]);

  return CircleProgressComponent;
}();

CircleProgressComponent.ɵfac = function CircleProgressComponent_Factory(t) {
  return new (t || CircleProgressComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](CircleProgressOptions), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]));
};

CircleProgressComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: CircleProgressComponent,
  selectors: [["circle-progress"]],
  inputs: {
    name: "name",
    class: "class",
    backgroundGradient: "backgroundGradient",
    backgroundColor: "backgroundColor",
    backgroundGradientStopColor: "backgroundGradientStopColor",
    backgroundOpacity: "backgroundOpacity",
    backgroundStroke: "backgroundStroke",
    backgroundStrokeWidth: "backgroundStrokeWidth",
    backgroundPadding: "backgroundPadding",
    radius: "radius",
    space: "space",
    percent: "percent",
    toFixed: "toFixed",
    maxPercent: "maxPercent",
    renderOnClick: "renderOnClick",
    units: "units",
    unitsFontSize: "unitsFontSize",
    unitsFontWeight: "unitsFontWeight",
    unitsColor: "unitsColor",
    outerStrokeGradient: "outerStrokeGradient",
    outerStrokeWidth: "outerStrokeWidth",
    outerStrokeColor: "outerStrokeColor",
    outerStrokeGradientStopColor: "outerStrokeGradientStopColor",
    outerStrokeLinecap: "outerStrokeLinecap",
    innerStrokeColor: "innerStrokeColor",
    innerStrokeWidth: "innerStrokeWidth",
    titleFormat: "titleFormat",
    title: "title",
    titleColor: "titleColor",
    titleFontSize: "titleFontSize",
    titleFontWeight: "titleFontWeight",
    subtitleFormat: "subtitleFormat",
    subtitle: "subtitle",
    subtitleColor: "subtitleColor",
    subtitleFontSize: "subtitleFontSize",
    subtitleFontWeight: "subtitleFontWeight",
    imageSrc: "imageSrc",
    imageHeight: "imageHeight",
    imageWidth: "imageWidth",
    animation: "animation",
    animateTitle: "animateTitle",
    animateSubtitle: "animateSubtitle",
    animationDuration: "animationDuration",
    showTitle: "showTitle",
    showSubtitle: "showSubtitle",
    showUnits: "showUnits",
    showImage: "showImage",
    showBackground: "showBackground",
    showInnerStroke: "showInnerStroke",
    clockwise: "clockwise",
    responsive: "responsive",
    startFromZero: "startFromZero",
    showZeroOuterStroke: "showZeroOuterStroke",
    lazy: "lazy",
    templateOptions: ["options", "templateOptions"]
  },
  outputs: {
    onClick: "onClick"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵNgOnChangesFeature"]],
  decls: 1,
  vars: 1,
  consts: [["xmlns", "http://www.w3.org/2000/svg", "preserveAspectRatio", "xMidYMid meet", 3, "click", 4, "ngIf"], ["xmlns", "http://www.w3.org/2000/svg", "preserveAspectRatio", "xMidYMid meet", 3, "click"], [4, "ngIf"], ["alignment-baseline", "baseline", 4, "ngIf"], ["preserveAspectRatio", "none", 4, "ngIf"], ["offset", "5%"], ["offset", "95%"], ["alignment-baseline", "baseline"], [4, "ngFor", "ngForOf"], ["preserveAspectRatio", "none"]],
  template: function CircleProgressComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtemplate"](0, CircleProgressComponent__svg_svg_0_Template, 9, 11, "svg", 0);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("ngIf", ctx.svg);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["NgForOf"]],
  encapsulation: 2
});

CircleProgressComponent.ctorParameters = function () {
  return [{
    type: CircleProgressOptions
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]]
    }]
  }];
};

CircleProgressComponent.propDecorators = {
  onClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Output"]
  }],
  name: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  class: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  backgroundGradient: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  backgroundColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  backgroundGradientStopColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  backgroundOpacity: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  backgroundStroke: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  backgroundStrokeWidth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  backgroundPadding: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  radius: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  space: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  percent: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  toFixed: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  maxPercent: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  renderOnClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  units: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  unitsFontSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  unitsFontWeight: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  unitsColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  outerStrokeGradient: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  outerStrokeWidth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  outerStrokeColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  outerStrokeGradientStopColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  outerStrokeLinecap: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  innerStrokeColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  innerStrokeWidth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  titleFormat: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  title: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  titleColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  titleFontSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  titleFontWeight: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  subtitleFormat: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  subtitle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  subtitleColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  subtitleFontSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  subtitleFontWeight: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  imageSrc: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  imageHeight: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  imageWidth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  animation: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  animateTitle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  animateSubtitle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  animationDuration: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  showTitle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  showSubtitle: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  showUnits: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  showImage: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  showBackground: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  showInnerStroke: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  clockwise: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  responsive: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  startFromZero: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  showZeroOuterStroke: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  lazy: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  templateOptions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"],
    args: ['options']
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](CircleProgressComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"],
    args: [{
      selector: 'circle-progress',
      template: "\n        <svg xmlns=\"http://www.w3.org/2000/svg\" *ngIf=\"svg\"\n             [attr.viewBox]=\"svg.viewBox\" preserveAspectRatio=\"xMidYMid meet\"\n             [attr.height]=\"svg.height\" [attr.width]=\"svg.width\" (click)=\"emitClickEvent($event)\" [attr.class]=\"options.class\">\n            <defs>\n                <linearGradient *ngIf=\"options.outerStrokeGradient\" [attr.id]=\"svg.outerLinearGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop1\"  [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.outerLinearGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </linearGradient>\n                <radialGradient *ngIf=\"options.backgroundGradient\" [attr.id]=\"svg.radialGradient.id\">\n                    <stop offset=\"5%\" [attr.stop-color]=\"svg.radialGradient.colorStop1\" [attr.stop-opacity]=\"1\"/>\n                    <stop offset=\"95%\" [attr.stop-color]=\"svg.radialGradient.colorStop2\" [attr.stop-opacity]=\"1\"/>\n                </radialGradient>\n            </defs>\n            <ng-container *ngIf=\"options.showBackground\">\n                <circle *ngIf=\"!options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        [attr.fill]=\"svg.backgroundCircle.fill\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n                <circle *ngIf=\"options.backgroundGradient\"\n                        [attr.cx]=\"svg.backgroundCircle.cx\"\n                        [attr.cy]=\"svg.backgroundCircle.cy\"\n                        [attr.r]=\"svg.backgroundCircle.r\"\n                        attr.fill=\"url(#{{svg.radialGradient.id}})\"\n                        [attr.fill-opacity]=\"svg.backgroundCircle.fillOpacity\"\n                        [attr.stroke]=\"svg.backgroundCircle.stroke\"\n                        [attr.stroke-width]=\"svg.backgroundCircle.strokeWidth\"/>\n            </ng-container>            \n            <circle *ngIf=\"options.showInnerStroke\"\n                    [attr.cx]=\"svg.circle.cx\"\n                    [attr.cy]=\"svg.circle.cy\"\n                    [attr.r]=\"svg.circle.r\"\n                    [attr.fill]=\"svg.circle.fill\"\n                    [attr.stroke]=\"svg.circle.stroke\"\n                    [attr.stroke-width]=\"svg.circle.strokeWidth\"/>\n            <ng-container *ngIf=\"+options.percent!==0 || options.showZeroOuterStroke\">\n                <path *ngIf=\"!options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        [attr.stroke]=\"svg.path.stroke\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n                <path *ngIf=\"options.outerStrokeGradient\"\n                        [attr.d]=\"svg.path.d\"\n                        attr.stroke=\"url(#{{svg.outerLinearGradient.id}})\"\n                        [attr.stroke-width]=\"svg.path.strokeWidth\"\n                        [attr.stroke-linecap]=\"svg.path.strokeLinecap\"\n                        [attr.fill]=\"svg.path.fill\"/>\n            </ng-container>\n            <text *ngIf=\"!options.showImage && (options.showTitle || options.showUnits || options.showSubtitle)\"\n                  alignment-baseline=\"baseline\"\n                  [attr.x]=\"svg.circle.cx\"\n                  [attr.y]=\"svg.circle.cy\"\n                  [attr.text-anchor]=\"svg.title.textAnchor\">\n                <ng-container *ngIf=\"options.showTitle\">\n                    <tspan *ngFor=\"let tspan of svg.title.tspans\"\n                           [attr.x]=\"svg.title.x\"\n                           [attr.y]=\"svg.title.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.title.fontSize\"\n                           [attr.font-weight]=\"svg.title.fontWeight\"\n                           [attr.fill]=\"svg.title.color\">{{tspan.span}}</tspan>\n                </ng-container>\n                <tspan *ngIf=\"options.showUnits\"\n                       [attr.font-size]=\"svg.units.fontSize\"\n                       [attr.font-weight]=\"svg.units.fontWeight\"\n                       [attr.fill]=\"svg.units.color\">{{svg.units.text}}</tspan>\n                <ng-container *ngIf=\"options.showSubtitle\">\n                    <tspan *ngFor=\"let tspan of svg.subtitle.tspans\"\n                           [attr.x]=\"svg.subtitle.x\"\n                           [attr.y]=\"svg.subtitle.y\"\n                           [attr.dy]=\"tspan.dy\"\n                           [attr.font-size]=\"svg.subtitle.fontSize\"\n                           [attr.font-weight]=\"svg.subtitle.fontWeight\"\n                           [attr.fill]=\"svg.subtitle.color\">{{tspan.span}}</tspan>\n                </ng-container>\n            </text>\n            <image *ngIf=\"options.showImage\" preserveAspectRatio=\"none\" \n                [attr.height]=\"svg.image.height\"\n                [attr.width]=\"svg.image.width\"\n                [attr.xlink:href]=\"svg.image.src\"\n                [attr.x]=\"svg.image.x\"\n                [attr.y]=\"svg.image.y\"\n            />\n        </svg>\n    "
    }]
  }], function () {
    return [{
      type: CircleProgressOptions
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["DOCUMENT"]]
      }]
    }];
  }, {
    onClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Output"]
    }],
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    class: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    backgroundGradient: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    backgroundColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    backgroundGradientStopColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    backgroundOpacity: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    backgroundStroke: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    backgroundStrokeWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    backgroundPadding: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    radius: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    space: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    percent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    toFixed: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    maxPercent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    renderOnClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    units: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    unitsFontSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    unitsFontWeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    unitsColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    outerStrokeGradient: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    outerStrokeWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    outerStrokeColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    outerStrokeGradientStopColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    outerStrokeLinecap: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    innerStrokeColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    innerStrokeWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    titleFormat: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    titleColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    titleFontSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    titleFontWeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    subtitleFormat: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    subtitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    subtitleColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    subtitleFontSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    subtitleFontWeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    imageSrc: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    imageHeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    imageWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    animation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    animateTitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    animateSubtitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    animationDuration: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    showTitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    showSubtitle: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    showUnits: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    showImage: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    showBackground: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    showInnerStroke: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    clockwise: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    responsive: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    startFromZero: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    showZeroOuterStroke: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    lazy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    templateOptions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"],
      args: ['options']
    }]
  });
})();

var NgCircleProgressModule = /*#__PURE__*/function () {
  function NgCircleProgressModule() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, NgCircleProgressModule);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(NgCircleProgressModule, null, [{
    key: "forRoot",
    value: function forRoot() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return {
        ngModule: NgCircleProgressModule,
        providers: [{
          provide: CircleProgressOptions,
          useValue: options
        }]
      };
    }
  }]);

  return NgCircleProgressModule;
}();

NgCircleProgressModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineNgModule"]({
  type: NgCircleProgressModule
});
NgCircleProgressModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjector"]({
  factory: function NgCircleProgressModule_Factory(t) {
    return new (t || NgCircleProgressModule)();
  },
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsetNgModuleScope"](NgCircleProgressModule, {
    declarations: function declarations() {
      return [CircleProgressComponent];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"]];
    },
    exports: function exports() {
      return [CircleProgressComponent];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](NgCircleProgressModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["NgModule"],
    args: [{
      declarations: [CircleProgressComponent],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"]],
      exports: [CircleProgressComponent]
    }]
  }], null, null);
})();
/*
 * Public API Surface of ng-circle-progress
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "Om4u":
/*!*************************************************!*\
  !*** ./src/app/pages/blogs/blogs.component.css ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".add{\n    background-color: #3b6e7f;\n    color: #ffffff;\n    text-align: center;\n    height: 120px;\n    width: 120px;\n}\n.add h1{\n    color: #ffffff;\n    text-align: center;\n    padding-top: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvYmxvZ3MvYmxvZ3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Jsb2dzL2Jsb2dzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRke1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjZlN2Y7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGhlaWdodDogMTIwcHg7XG4gICAgd2lkdGg6IDEyMHB4O1xufVxuLmFkZCBoMXtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG59Il19 */");

/***/ }),

/***/ "QMMq":
/*!**************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/user/user.component.html ***!
  \**************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n    <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-md-8 mx-auto\">\n            <div class=\"card card-profile\">\n                <div class=\"card-avatar\">\n                    <a href=\"javascript:void(0)\">\n                        <img class=\"img\" src=\"./assets/img/faces/marc.jpg\" />\n                    </a>\n                </div>\n                <div class=\"card-body\">\n                    <h6 class=\"card-category text-gray\">CEO / Co-Founder</h6>\n                    <h4 class=\"card-title\">Enock Mwesigwa</h4>\n                    <p class=\"card-description\">\n                        Don't be scared of the truth because we need to restart the human foundation in truth And I love you like Kanye loves Kanye I love Rick Owens’ bed design but the back is...\n                    </p>\n                    <a [routerLink]=\"['/me/edit']\" class=\"btn btn-danger btn-round\">Edit</a>\n                </div>\n            </div>\n          </div>\n        </div>\n    </div>\n  </div>\n  ");

/***/ }),

/***/ "Qu3c":
/*!*************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js ***!
  \*************************************************************************/
/*! exports provided: MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_TOOLTIP_DEFAULT_OPTIONS", function() { return MAT_TOOLTIP_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY", function() { return MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_TOOLTIP_SCROLL_STRATEGY", function() { return MAT_TOOLTIP_SCROLL_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY", function() { return MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER", function() { return MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTooltip", function() { return MatTooltip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTooltipModule", function() { return MatTooltipModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SCROLL_THROTTLE_MS", function() { return SCROLL_THROTTLE_MS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOOLTIP_PANEL_CLASS", function() { return TOOLTIP_PANEL_CLASS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TooltipComponent", function() { return TooltipComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatTooltipInvalidPositionError", function() { return getMatTooltipInvalidPositionError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matTooltipAnimations", function() { return matTooltipAnimations; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/overlay */ "rDax");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/scrolling */ "vxfF");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");
/* harmony import */ var _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/layout */ "0MNC");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/portal */ "+rOU");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/animations */ "R0Ic");


















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Animations used by MatTooltip.
 * @docs-private
 */









var matTooltipAnimations = {
  /** Animation that transitions a tooltip in and out. */
  tooltipState: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["trigger"])('state', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["state"])('initial, void, hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    opacity: 0,
    transform: 'scale(0)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    transform: 'scale(1)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["transition"])('* => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["animate"])('200ms cubic-bezier(0, 0, 0.2, 1)', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["keyframes"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    opacity: 0,
    transform: 'scale(0)',
    offset: 0
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    opacity: 0.5,
    transform: 'scale(0.99)',
    offset: 0.5
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    opacity: 1,
    transform: 'scale(1)',
    offset: 1
  })]))), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["transition"])('* => hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["animate"])('100ms cubic-bezier(0, 0, 0.2, 1)', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    opacity: 0
  })))])
};
/** Time in ms to throttle repositioning after scroll events. */

var SCROLL_THROTTLE_MS = 20;
/** CSS class that will be attached to the overlay panel. */

var TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';
/** Options used to bind passive event listeners. */

var passiveListenerOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__["normalizePassiveListenerOptions"])({
  passive: true
});
/**
 * Time between the user putting the pointer on a tooltip
 * trigger and the long press event being fired.
 */

var LONGPRESS_DELAY = 500;
/**
 * Creates an error to be thrown if the user supplied an invalid tooltip position.
 * @docs-private
 */

function getMatTooltipInvalidPositionError(position) {
  return Error("Tooltip position \"".concat(position, "\" is invalid."));
}
/** Injection token that determines the scroll handling while a tooltip is visible. */


var MAT_TOOLTIP_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('mat-tooltip-scroll-strategy');
/** @docs-private */

function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {
  return function () {
    return overlay.scrollStrategies.reposition({
      scrollThrottle: SCROLL_THROTTLE_MS
    });
  };
}
/** @docs-private */


var MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {
  provide: MAT_TOOLTIP_SCROLL_STRATEGY,
  deps: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__["Overlay"]],
  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY
};
/** Injection token to be used to override the default options for `matTooltip`. */

var MAT_TOOLTIP_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('mat-tooltip-default-options', {
  providedIn: 'root',
  factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY
});
/** @docs-private */

function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {
  return {
    showDelay: 0,
    hideDelay: 0,
    touchendHideDelay: 1500
  };
}
/**
 * Directive that attaches a material design tooltip to the host element. Animates the showing and
 * hiding of a tooltip provided position (defaults to below the element).
 *
 * https://material.io/design/components/tooltips.html
 */


var MatTooltip = /*#__PURE__*/function () {
  function MatTooltip(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions) {
    var _this = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MatTooltip);

    this._overlay = _overlay;
    this._elementRef = _elementRef;
    this._scrollDispatcher = _scrollDispatcher;
    this._viewContainerRef = _viewContainerRef;
    this._ngZone = _ngZone;
    this._platform = _platform;
    this._ariaDescriber = _ariaDescriber;
    this._focusMonitor = _focusMonitor;
    this._dir = _dir;
    this._defaultOptions = _defaultOptions;
    this._position = 'below';
    this._disabled = false;
    this._viewInitialized = false;
    this._pointerExitEventsInitialized = false;
    /** The default delay in ms before showing the tooltip after show is called */

    this.showDelay = this._defaultOptions.showDelay;
    /** The default delay in ms before hiding the tooltip after hide is called */

    this.hideDelay = this._defaultOptions.hideDelay;
    /**
     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive
     * uses a long press gesture to show and hide, however it can conflict with the native browser
     * gestures. To work around the conflict, Angular Material disables native gestures on the
     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable
     * elements). The different values for this option configure the touch event handling as follows:
     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native
     *   browser gestures on particular elements. In particular, it allows text selection on inputs
     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.
     * - `on` - Enables touch gestures for all elements and disables native
     *   browser gestures with no exceptions.
     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from
     *   showing on touch devices.
     */

    this.touchGestures = 'auto';
    this._message = '';
    /** Manually-bound passive event listeners. */

    this._passiveListeners = [];
    /** Emits when the component is destroyed. */

    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /**
     * Handles the keydown events on the host element.
     * Needs to be an arrow function so that we can use it in addEventListener.
     */

    this._handleKeydown = function (event) {
      if (_this._isTooltipVisible() && event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["ESCAPE"] && !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["hasModifierKey"])(event)) {
        event.preventDefault();
        event.stopPropagation();

        _this._ngZone.run(function () {
          return _this.hide(0);
        });
      }
    };

    this._scrollStrategy = scrollStrategy;

    if (_defaultOptions) {
      if (_defaultOptions.position) {
        this.position = _defaultOptions.position;
      }

      if (_defaultOptions.touchGestures) {
        this.touchGestures = _defaultOptions.touchGestures;
      }
    }

    _ngZone.runOutsideAngular(function () {
      _elementRef.nativeElement.addEventListener('keydown', _this._handleKeydown);
    });
  }
  /** Allows the user to define the position of the tooltip relative to the parent element */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MatTooltip, [{
    key: "position",
    get: function get() {
      return this._position;
    },
    set: function set(value) {
      if (value !== this._position) {
        this._position = value;

        if (this._overlayRef) {
          this._updatePosition();

          if (this._tooltipInstance) {
            this._tooltipInstance.show(0);
          }

          this._overlayRef.updatePosition();
        }
      }
    }
    /** Disables the display of the tooltip. */

  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_10__["coerceBooleanProperty"])(value); // If tooltip is disabled, hide immediately.

      if (this._disabled) {
        this.hide(0);
      } else {
        this._setupPointerEnterEventsIfNeeded();
      }
    }
    /** The message to be displayed in the tooltip */

  }, {
    key: "message",
    get: function get() {
      return this._message;
    },
    set: function set(value) {
      var _this2 = this;

      this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message); // If the message is not a string (e.g. number), convert it to a string and trim it.


      this._message = value != null ? "".concat(value).trim() : '';

      if (!this._message && this._isTooltipVisible()) {
        this.hide(0);
      } else {
        this._setupPointerEnterEventsIfNeeded();

        this._updateTooltipMessage();

        this._ngZone.runOutsideAngular(function () {
          // The `AriaDescriber` has some functionality that avoids adding a description if it's the
          // same as the `aria-label` of an element, however we can't know whether the tooltip trigger
          // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the
          // issue by deferring the description by a tick so Angular has time to set the `aria-label`.
          Promise.resolve().then(function () {
            _this2._ariaDescriber.describe(_this2._elementRef.nativeElement, _this2.message);
          });
        });
      }
    }
    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */

  }, {
    key: "tooltipClass",
    get: function get() {
      return this._tooltipClass;
    },
    set: function set(value) {
      this._tooltipClass = value;

      if (this._tooltipInstance) {
        this._setTooltipClass(this._tooltipClass);
      }
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this3 = this;

      // This needs to happen after view init so the initial values for all inputs have been set.
      this._viewInitialized = true;

      this._setupPointerEnterEventsIfNeeded();

      this._focusMonitor.monitor(this._elementRef).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeUntil"])(this._destroyed)).subscribe(function (origin) {
        // Note that the focus monitor runs outside the Angular zone.
        if (!origin) {
          _this3._ngZone.run(function () {
            return _this3.hide(0);
          });
        } else if (origin === 'keyboard') {
          _this3._ngZone.run(function () {
            return _this3.show();
          });
        }
      });
    }
    /**
     * Dispose the tooltip when destroyed.
     */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var nativeElement = this._elementRef.nativeElement;
      clearTimeout(this._touchstartTimeout);

      if (this._overlayRef) {
        this._overlayRef.dispose();

        this._tooltipInstance = null;
      } // Clean up the event listeners set in the constructor


      nativeElement.removeEventListener('keydown', this._handleKeydown);

      this._passiveListeners.forEach(function (_ref) {
        var _ref2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref, 2),
            event = _ref2[0],
            listener = _ref2[1];

        nativeElement.removeEventListener(event, listener, passiveListenerOptions);
      });

      this._passiveListeners.length = 0;

      this._destroyed.next();

      this._destroyed.complete();

      this._ariaDescriber.removeDescription(nativeElement, this.message);

      this._focusMonitor.stopMonitoring(nativeElement);
    }
    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */

  }, {
    key: "show",
    value: function show() {
      var _this4 = this;

      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.showDelay;

      if (this.disabled || !this.message || this._isTooltipVisible() && !this._tooltipInstance._showTimeoutId && !this._tooltipInstance._hideTimeoutId) {
        return;
      }

      var overlayRef = this._createOverlay();

      this._detach();

      this._portal = this._portal || new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__["ComponentPortal"](TooltipComponent, this._viewContainerRef);
      this._tooltipInstance = overlayRef.attach(this._portal).instance;

      this._tooltipInstance.afterHidden().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeUntil"])(this._destroyed)).subscribe(function () {
        return _this4._detach();
      });

      this._setTooltipClass(this._tooltipClass);

      this._updateTooltipMessage();

      this._tooltipInstance.show(delay);
    }
    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */

  }, {
    key: "hide",
    value: function hide() {
      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.hideDelay;

      if (this._tooltipInstance) {
        this._tooltipInstance.hide(delay);
      }
    }
    /** Shows/hides the tooltip */

  }, {
    key: "toggle",
    value: function toggle() {
      this._isTooltipVisible() ? this.hide() : this.show();
    }
    /** Returns true if the tooltip is currently visible to the user */

  }, {
    key: "_isTooltipVisible",
    value: function _isTooltipVisible() {
      return !!this._tooltipInstance && this._tooltipInstance.isVisible();
    }
    /** Create the overlay config and position strategy */

  }, {
    key: "_createOverlay",
    value: function _createOverlay() {
      var _this5 = this;

      if (this._overlayRef) {
        return this._overlayRef;
      }

      var scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef); // Create connected position strategy that listens for scroll events to reposition.


      var strategy = this._overlay.position().flexibleConnectedTo(this._elementRef).withTransformOriginOn('.mat-tooltip').withFlexibleDimensions(false).withViewportMargin(8).withScrollableContainers(scrollableAncestors);

      strategy.positionChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeUntil"])(this._destroyed)).subscribe(function (change) {
        if (_this5._tooltipInstance) {
          if (change.scrollableViewProperties.isOverlayClipped && _this5._tooltipInstance.isVisible()) {
            // After position changes occur and the overlay is clipped by
            // a parent scrollable then close the tooltip.
            _this5._ngZone.run(function () {
              return _this5.hide(0);
            });
          }
        }
      });
      this._overlayRef = this._overlay.create({
        direction: this._dir,
        positionStrategy: strategy,
        panelClass: TOOLTIP_PANEL_CLASS,
        scrollStrategy: this._scrollStrategy()
      });

      this._updatePosition();

      this._overlayRef.detachments().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeUntil"])(this._destroyed)).subscribe(function () {
        return _this5._detach();
      });

      return this._overlayRef;
    }
    /** Detaches the currently-attached tooltip. */

  }, {
    key: "_detach",
    value: function _detach() {
      if (this._overlayRef && this._overlayRef.hasAttached()) {
        this._overlayRef.detach();
      }

      this._tooltipInstance = null;
    }
    /** Updates the position of the current tooltip. */

  }, {
    key: "_updatePosition",
    value: function _updatePosition() {
      var position = this._overlayRef.getConfig().positionStrategy;

      var origin = this._getOrigin();

      var overlay = this._getOverlayPosition();

      position.withPositions([Object.assign(Object.assign({}, origin.main), overlay.main), Object.assign(Object.assign({}, origin.fallback), overlay.fallback)]);
    }
    /**
     * Returns the origin position and a fallback position based on the user's position preference.
     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).
     */

  }, {
    key: "_getOrigin",
    value: function _getOrigin() {
      var isLtr = !this._dir || this._dir.value == 'ltr';
      var position = this.position;
      var originPosition;

      if (position == 'above' || position == 'below') {
        originPosition = {
          originX: 'center',
          originY: position == 'above' ? 'top' : 'bottom'
        };
      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {
        originPosition = {
          originX: 'start',
          originY: 'center'
        };
      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {
        originPosition = {
          originX: 'end',
          originY: 'center'
        };
      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {
        throw getMatTooltipInvalidPositionError(position);
      }

      var _this$_invertPosition = this._invertPosition(originPosition.originX, originPosition.originY),
          x = _this$_invertPosition.x,
          y = _this$_invertPosition.y;

      return {
        main: originPosition,
        fallback: {
          originX: x,
          originY: y
        }
      };
    }
    /** Returns the overlay position and a fallback position based on the user's preference */

  }, {
    key: "_getOverlayPosition",
    value: function _getOverlayPosition() {
      var isLtr = !this._dir || this._dir.value == 'ltr';
      var position = this.position;
      var overlayPosition;

      if (position == 'above') {
        overlayPosition = {
          overlayX: 'center',
          overlayY: 'bottom'
        };
      } else if (position == 'below') {
        overlayPosition = {
          overlayX: 'center',
          overlayY: 'top'
        };
      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {
        overlayPosition = {
          overlayX: 'end',
          overlayY: 'center'
        };
      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {
        overlayPosition = {
          overlayX: 'start',
          overlayY: 'center'
        };
      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {
        throw getMatTooltipInvalidPositionError(position);
      }

      var _this$_invertPosition2 = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY),
          x = _this$_invertPosition2.x,
          y = _this$_invertPosition2.y;

      return {
        main: overlayPosition,
        fallback: {
          overlayX: x,
          overlayY: y
        }
      };
    }
    /** Updates the tooltip message and repositions the overlay according to the new message length */

  }, {
    key: "_updateTooltipMessage",
    value: function _updateTooltipMessage() {
      var _this6 = this;

      // Must wait for the message to be painted to the tooltip so that the overlay can properly
      // calculate the correct positioning based on the size of the text.
      if (this._tooltipInstance) {
        this._tooltipInstance.message = this.message;

        this._tooltipInstance._markForCheck();

        this._ngZone.onMicrotaskEmpty.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeUntil"])(this._destroyed)).subscribe(function () {
          if (_this6._tooltipInstance) {
            _this6._overlayRef.updatePosition();
          }
        });
      }
    }
    /** Updates the tooltip class */

  }, {
    key: "_setTooltipClass",
    value: function _setTooltipClass(tooltipClass) {
      if (this._tooltipInstance) {
        this._tooltipInstance.tooltipClass = tooltipClass;

        this._tooltipInstance._markForCheck();
      }
    }
    /** Inverts an overlay position. */

  }, {
    key: "_invertPosition",
    value: function _invertPosition(x, y) {
      if (this.position === 'above' || this.position === 'below') {
        if (y === 'top') {
          y = 'bottom';
        } else if (y === 'bottom') {
          y = 'top';
        }
      } else {
        if (x === 'end') {
          x = 'start';
        } else if (x === 'start') {
          x = 'end';
        }
      }

      return {
        x: x,
        y: y
      };
    }
    /** Binds the pointer events to the tooltip trigger. */

  }, {
    key: "_setupPointerEnterEventsIfNeeded",
    value: function _setupPointerEnterEventsIfNeeded() {
      var _this7 = this;

      // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.
      if (this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length) {
        return;
      } // The mouse events shouldn't be bound on mobile devices, because they can prevent the
      // first tap from firing its click event or can cause the tooltip to open for clicks.


      if (this._platformSupportsMouseEvents()) {
        this._passiveListeners.push(['mouseenter', function () {
          _this7._setupPointerExitEventsIfNeeded();

          _this7.show();
        }]);
      } else if (this.touchGestures !== 'off') {
        this._disableNativeGesturesIfNecessary();

        this._passiveListeners.push(['touchstart', function () {
          // Note that it's important that we don't `preventDefault` here,
          // because it can prevent click events from firing on the element.
          _this7._setupPointerExitEventsIfNeeded();

          clearTimeout(_this7._touchstartTimeout);
          _this7._touchstartTimeout = setTimeout(function () {
            return _this7.show();
          }, LONGPRESS_DELAY);
        }]);
      }

      this._addListeners(this._passiveListeners);
    }
  }, {
    key: "_setupPointerExitEventsIfNeeded",
    value: function _setupPointerExitEventsIfNeeded() {
      var _this8 = this,
          _this$_passiveListene;

      if (this._pointerExitEventsInitialized) {
        return;
      }

      this._pointerExitEventsInitialized = true;
      var exitListeners = [];

      if (this._platformSupportsMouseEvents()) {
        exitListeners.push(['mouseleave', function () {
          return _this8.hide();
        }]);
      } else if (this.touchGestures !== 'off') {
        this._disableNativeGesturesIfNecessary();

        var touchendListener = function touchendListener() {
          clearTimeout(_this8._touchstartTimeout);

          _this8.hide(_this8._defaultOptions.touchendHideDelay);
        };

        exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);
      }

      this._addListeners(exitListeners);

      (_this$_passiveListene = this._passiveListeners).push.apply(_this$_passiveListene, exitListeners);
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(listeners) {
      var _this9 = this;

      listeners.forEach(function (_ref3) {
        var _ref4 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref3, 2),
            event = _ref4[0],
            listener = _ref4[1];

        _this9._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);
      });
    }
  }, {
    key: "_platformSupportsMouseEvents",
    value: function _platformSupportsMouseEvents() {
      return !this._platform.IOS && !this._platform.ANDROID;
    }
    /** Disables the native browser gestures, based on how the tooltip has been configured. */

  }, {
    key: "_disableNativeGesturesIfNecessary",
    value: function _disableNativeGesturesIfNecessary() {
      var gestures = this.touchGestures;

      if (gestures !== 'off') {
        var element = this._elementRef.nativeElement;
        var _style = element.style; // If gestures are set to `auto`, we don't disable text selection on inputs and
        // textareas, because it prevents the user from typing into them on iOS Safari.

        if (gestures === 'on' || element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA') {
          _style.userSelect = _style.msUserSelect = _style.webkitUserSelect = _style.MozUserSelect = 'none';
        } // If we have `auto` gestures and the element uses native HTML dragging,
        // we don't set `-webkit-user-drag` because it prevents the native behavior.


        if (gestures === 'on' || !element.draggable) {
          _style.webkitUserDrag = 'none';
        }

        _style.touchAction = 'none';
        _style.webkitTapHighlightColor = 'transparent';
      }
    }
  }]);

  return MatTooltip;
}();

MatTooltip.ɵfac = function MatTooltip_Factory(t) {
  return new (t || MatTooltip)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__["Overlay"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["AriaDescriber"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["FocusMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MAT_TOOLTIP_SCROLL_STRATEGY), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MAT_TOOLTIP_DEFAULT_OPTIONS, 8));
};

MatTooltip.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: MatTooltip,
  selectors: [["", "matTooltip", ""]],
  hostAttrs: [1, "mat-tooltip-trigger"],
  inputs: {
    showDelay: ["matTooltipShowDelay", "showDelay"],
    hideDelay: ["matTooltipHideDelay", "hideDelay"],
    touchGestures: ["matTooltipTouchGestures", "touchGestures"],
    position: ["matTooltipPosition", "position"],
    disabled: ["matTooltipDisabled", "disabled"],
    message: ["matTooltip", "message"],
    tooltipClass: ["matTooltipClass", "tooltipClass"]
  },
  exportAs: ["matTooltip"]
});

MatTooltip.ctorParameters = function () {
  return [{
    type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__["Overlay"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }, {
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__["Platform"]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["AriaDescriber"]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["FocusMonitor"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [MAT_TOOLTIP_SCROLL_STRATEGY]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [MAT_TOOLTIP_DEFAULT_OPTIONS]
    }]
  }];
};

MatTooltip.propDecorators = {
  position: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matTooltipPosition']
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matTooltipDisabled']
  }],
  showDelay: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matTooltipShowDelay']
  }],
  hideDelay: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matTooltipHideDelay']
  }],
  touchGestures: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matTooltipTouchGestures']
  }],
  message: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matTooltip']
  }],
  tooltipClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matTooltipClass']
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatTooltip, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: '[matTooltip]',
      exportAs: 'matTooltip',
      host: {
        'class': 'mat-tooltip-trigger'
      }
    }]
  }], function () {
    return [{
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__["Overlay"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_13__["Platform"]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["AriaDescriber"]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["FocusMonitor"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [MAT_TOOLTIP_SCROLL_STRATEGY]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [MAT_TOOLTIP_DEFAULT_OPTIONS]
      }]
    }];
  }, {
    showDelay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matTooltipShowDelay']
    }],
    hideDelay: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matTooltipHideDelay']
    }],
    touchGestures: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matTooltipTouchGestures']
    }],
    position: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matTooltipPosition']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matTooltipDisabled']
    }],
    message: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matTooltip']
    }],
    tooltipClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matTooltipClass']
    }]
  });
})();
/**
 * Internal component that wraps the tooltip's content.
 * @docs-private
 */


var TooltipComponent = /*#__PURE__*/function () {
  function TooltipComponent(_changeDetectorRef, _breakpointObserver) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, TooltipComponent);

    this._changeDetectorRef = _changeDetectorRef;
    this._breakpointObserver = _breakpointObserver;
    /** Property watched by the animation framework to show or hide the tooltip */

    this._visibility = 'initial';
    /** Whether interactions on the page should close the tooltip */

    this._closeOnInteraction = false;
    /** Subject for notifying that the tooltip has been hidden from the view */

    this._onHide = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /** Stream that emits whether the user has a handset-sized display.  */

    this._isHandset = this._breakpointObserver.observe(_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_12__["Breakpoints"].Handset);
  }
  /**
   * Shows the tooltip with an animation originating from the provided origin
   * @param delay Amount of milliseconds to the delay showing the tooltip.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(TooltipComponent, [{
    key: "show",
    value: function show(delay) {
      var _this10 = this;

      // Cancel the delayed hide if it is scheduled
      if (this._hideTimeoutId) {
        clearTimeout(this._hideTimeoutId);
        this._hideTimeoutId = null;
      } // Body interactions should cancel the tooltip if there is a delay in showing.


      this._closeOnInteraction = true;
      this._showTimeoutId = setTimeout(function () {
        _this10._visibility = 'visible';
        _this10._showTimeoutId = null; // Mark for check so if any parent component has set the
        // ChangeDetectionStrategy to OnPush it will be checked anyways

        _this10._markForCheck();
      }, delay);
    }
    /**
     * Begins the animation to hide the tooltip after the provided delay in ms.
     * @param delay Amount of milliseconds to delay showing the tooltip.
     */

  }, {
    key: "hide",
    value: function hide(delay) {
      var _this11 = this;

      // Cancel the delayed show if it is scheduled
      if (this._showTimeoutId) {
        clearTimeout(this._showTimeoutId);
        this._showTimeoutId = null;
      }

      this._hideTimeoutId = setTimeout(function () {
        _this11._visibility = 'hidden';
        _this11._hideTimeoutId = null; // Mark for check so if any parent component has set the
        // ChangeDetectionStrategy to OnPush it will be checked anyways

        _this11._markForCheck();
      }, delay);
    }
    /** Returns an observable that notifies when the tooltip has been hidden from view. */

  }, {
    key: "afterHidden",
    value: function afterHidden() {
      return this._onHide;
    }
    /** Whether the tooltip is being displayed. */

  }, {
    key: "isVisible",
    value: function isVisible() {
      return this._visibility === 'visible';
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._onHide.complete();
    }
  }, {
    key: "_animationStart",
    value: function _animationStart() {
      this._closeOnInteraction = false;
    }
  }, {
    key: "_animationDone",
    value: function _animationDone(event) {
      var toState = event.toState;

      if (toState === 'hidden' && !this.isVisible()) {
        this._onHide.next();
      }

      if (toState === 'visible' || toState === 'hidden') {
        this._closeOnInteraction = true;
      }
    }
    /**
     * Interactions on the HTML body should close the tooltip immediately as defined in the
     * material design spec.
     * https://material.io/design/components/tooltips.html#behavior
     */

  }, {
    key: "_handleBodyInteraction",
    value: function _handleBodyInteraction() {
      if (this._closeOnInteraction) {
        this.hide(0);
      }
    }
    /**
     * Marks that the tooltip needs to be checked in the next change detection run.
     * Mainly used for rendering the initial text before positioning a tooltip, which
     * can be problematic in components with OnPush change detection.
     */

  }, {
    key: "_markForCheck",
    value: function _markForCheck() {
      this._changeDetectorRef.markForCheck();
    }
  }]);

  return TooltipComponent;
}();

TooltipComponent.ɵfac = function TooltipComponent_Factory(t) {
  return new (t || TooltipComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_12__["BreakpointObserver"]));
};

TooltipComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: TooltipComponent,
  selectors: [["mat-tooltip-component"]],
  hostAttrs: ["aria-hidden", "true"],
  hostVars: 2,
  hostBindings: function TooltipComponent_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function TooltipComponent_click_HostBindingHandler() {
        return ctx._handleBodyInteraction();
      }, false, _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵresolveBody"]);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵstyleProp"]("zoom", ctx._visibility === "visible" ? 1 : null);
    }
  },
  decls: 3,
  vars: 7,
  consts: [[1, "mat-tooltip", 3, "ngClass"]],
  template: function TooltipComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("@state.start", function TooltipComponent_Template_div_animation_state_start_0_listener() {
        return ctx._animationStart();
      })("@state.done", function TooltipComponent_Template_div_animation_state_done_0_listener($event) {
        return ctx._animationDone($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipe"](1, "async");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      var tmp_0_0 = null;
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵclassProp"]("mat-tooltip-handset", (tmp_0_0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpipeBind1"](1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("ngClass", ctx.tooltipClass)("@state", ctx._visibility);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate"](ctx.message);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["NgClass"]],
  pipes: [_angular_common__WEBPACK_IMPORTED_MODULE_5__["AsyncPipe"]],
  styles: [".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\n"],
  encapsulation: 2,
  data: {
    animation: [matTooltipAnimations.tooltipState]
  },
  changeDetection: 0
});

TooltipComponent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_12__["BreakpointObserver"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](TooltipComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: 'mat-tooltip-component',
      template: "<div class=\"mat-tooltip\"\n     [ngClass]=\"tooltipClass\"\n     [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\"\n     [@state]=\"_visibility\"\n     (@state.start)=\"_animationStart()\"\n     (@state.done)=\"_animationDone($event)\">{{message}}</div>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectionStrategy"].OnPush,
      animations: [matTooltipAnimations.tooltipState],
      host: {
        // Forces the element to have a layout in IE and Edge. This fixes issues where the element
        // won't be rendered if the animations are disabled or there is no web animations polyfill.
        '[style.zoom]': '_visibility === "visible" ? 1 : null',
        '(body:click)': 'this._handleBodyInteraction()',
        'aria-hidden': 'true'
      },
      styles: [".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_12__["BreakpointObserver"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatTooltipModule = function MatTooltipModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, MatTooltipModule);
};

MatTooltipModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: MatTooltipModule
});
MatTooltipModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  factory: function MatTooltipModule_Factory(t) {
    return new (t || MatTooltipModule)();
  },
  providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],
  imports: [[_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["A11yModule"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__["OverlayModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["CdkScrollableModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](MatTooltipModule, {
    declarations: function declarations() {
      return [MatTooltip, TooltipComponent];
    },
    imports: function imports() {
      return [_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["A11yModule"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__["OverlayModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]];
    },
    exports: function exports() {
      return [MatTooltip, TooltipComponent, _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["CdkScrollableModule"]];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatTooltipModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModule"],
    args: [{
      imports: [_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["A11yModule"], _angular_common__WEBPACK_IMPORTED_MODULE_5__["CommonModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_3__["OverlayModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]],
      exports: [MatTooltip, TooltipComponent, _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["CdkScrollableModule"]],
      declarations: [MatTooltip, TooltipComponent],
      entryComponents: [TooltipComponent],
      providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "RdVG":
/*!************************************************!*\
  !*** ./src/app/pages/blogs/blogs.component.ts ***!
  \************************************************/
/*! exports provided: BlogsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlogsComponent", function() { return BlogsComponent; });
/* harmony import */ var _raw_loader_blogs_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./blogs.component.html */ "qitP");
/* harmony import */ var _blogs_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./blogs.component.css */ "Om4u");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var BlogsComponent = /** @class */ (function () {
    function BlogsComponent() {
    }
    BlogsComponent.prototype.ngOnInit = function () {
    };
    BlogsComponent.ctorParameters = function () { return []; };
    BlogsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-blogs',
            template: _raw_loader_blogs_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_blogs_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [])
    ], BlogsComponent);
    return BlogsComponent;
}());



/***/ }),

/***/ "Tt67":
/*!***********************************************!*\
  !*** ./src/app/pages/user/user.component.css ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "U5Cf":
/*!********************************************************!*\
  !*** ./src/app/pages/dashboard/dashboard.component.ts ***!
  \********************************************************/
/*! exports provided: DashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardComponent", function() { return DashboardComponent; });
/* harmony import */ var _raw_loader_dashboard_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./dashboard.component.html */ "Ixm7");
/* harmony import */ var _dashboard_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dashboard.component.css */ "CjF6");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var app_shared_services_data_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/shared/services/data.service */ "iiaH");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var DashboardComponent = /** @class */ (function () {
    function DashboardComponent(dataService) {
        this.dataService = dataService;
        this.user_type = dataService.user;
    }
    DashboardComponent.prototype.ngOnInit = function () { };
    DashboardComponent.ctorParameters = function () { return [
        { type: app_shared_services_data_service__WEBPACK_IMPORTED_MODULE_3__["DataService"] }
    ]; };
    DashboardComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-dashboard',
            template: _raw_loader_dashboard_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_dashboard_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [app_shared_services_data_service__WEBPACK_IMPORTED_MODULE_3__["DataService"]])
    ], DashboardComponent);
    return DashboardComponent;
}());



/***/ }),

/***/ "bTqV":
/*!************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js ***!
  \************************************************************************/
/*! exports provided: MatAnchor, MatButton, MatButtonModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatAnchor", function() { return MatAnchor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatButton", function() { return MatButton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatButtonModule", function() { return MatButtonModule; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");









/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Default color palette for round buttons (mat-fab and mat-mini-fab) */




var _c0 = ["mat-button", ""];
var _c1 = ["*"];
var _c2 = ".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\n";
var DEFAULT_ROUND_BUTTON_COLOR = 'accent';
/**
 * List of classes to add to MatButton instances based on host attributes to
 * style as different variants.
 */

var BUTTON_HOST_ATTRIBUTES = ['mat-button', 'mat-flat-button', 'mat-icon-button', 'mat-raised-button', 'mat-stroked-button', 'mat-mini-fab', 'mat-fab']; // Boilerplate for applying mixins to MatButton.

/** @docs-private */

var MatButtonBase = function MatButtonBase(_elementRef) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatButtonBase);

  this._elementRef = _elementRef;
};

var _MatButtonMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["mixinColor"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["mixinDisabled"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["mixinDisableRipple"])(MatButtonBase)));
/**
 * Material design button.
 */


var MatButton = /*#__PURE__*/function (_MatButtonMixinBase2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(MatButton, _MatButtonMixinBase2);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(MatButton);

  function MatButton(elementRef, _focusMonitor, _animationMode) {
    var _this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatButton);

    _this = _super.call(this, elementRef);
    _this._focusMonitor = _focusMonitor;
    _this._animationMode = _animationMode;
    /** Whether the button is round. */

    _this.isRoundButton = _this._hasHostAttributes('mat-fab', 'mat-mini-fab');
    /** Whether the button is icon button. */

    _this.isIconButton = _this._hasHostAttributes('mat-icon-button'); // For each of the variant selectors that is present in the button's host
    // attributes, add the correct corresponding class.

    var _iterator = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(BUTTON_HOST_ATTRIBUTES),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var attr = _step.value;

        if (_this._hasHostAttributes(attr)) {
          _this._getHostElement().classList.add(attr);
        }
      } // Add a class that applies to all buttons. This makes it easier to target if somebody
      // wants to target all Material buttons. We do it here rather than `host` to ensure that
      // the class is applied to derived classes.

    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    elementRef.nativeElement.classList.add('mat-button-base');

    if (_this.isRoundButton) {
      _this.color = DEFAULT_ROUND_BUTTON_COLOR;
    }

    return _this;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatButton, [{
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this._focusMonitor.monitor(this._elementRef, true);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._focusMonitor.stopMonitoring(this._elementRef);
    }
    /** Focuses the button. */

  }, {
    key: "focus",
    value: function focus() {
      var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'program';
      var options = arguments.length > 1 ? arguments[1] : undefined;

      this._focusMonitor.focusVia(this._getHostElement(), origin, options);
    }
  }, {
    key: "_getHostElement",
    value: function _getHostElement() {
      return this._elementRef.nativeElement;
    }
  }, {
    key: "_isRippleDisabled",
    value: function _isRippleDisabled() {
      return this.disableRipple || this.disabled;
    }
    /** Gets whether the button has one of the given attributes. */

  }, {
    key: "_hasHostAttributes",
    value: function _hasHostAttributes() {
      var _this2 = this;

      for (var _len = arguments.length, attributes = new Array(_len), _key = 0; _key < _len; _key++) {
        attributes[_key] = arguments[_key];
      }

      return attributes.some(function (attribute) {
        return _this2._getHostElement().hasAttribute(attribute);
      });
    }
  }]);

  return MatButton;
}(_MatButtonMixinBase);

MatButton.ɵfac = function MatButton_Factory(t) {
  return new (t || MatButton)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__["ANIMATION_MODULE_TYPE"], 8));
};

MatButton.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: MatButton,
  selectors: [["button", "mat-button", ""], ["button", "mat-raised-button", ""], ["button", "mat-icon-button", ""], ["button", "mat-fab", ""], ["button", "mat-mini-fab", ""], ["button", "mat-stroked-button", ""], ["button", "mat-flat-button", ""]],
  viewQuery: function MatButton_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵviewQuery"](_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRipple"], true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵloadQuery"]()) && (ctx.ripple = _t.first);
    }
  },
  hostAttrs: [1, "mat-focus-indicator"],
  hostVars: 5,
  hostBindings: function MatButton_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("disabled", ctx.disabled || null);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("_mat-animation-noopable", ctx._animationMode === "NoopAnimations")("mat-button-disabled", ctx.disabled);
    }
  },
  inputs: {
    disabled: "disabled",
    disableRipple: "disableRipple",
    color: "color"
  },
  exportAs: ["matButton"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"]],
  attrs: _c0,
  ngContentSelectors: _c1,
  decls: 4,
  vars: 5,
  consts: [[1, "mat-button-wrapper"], ["matRipple", "", 1, "mat-button-ripple", 3, "matRippleDisabled", "matRippleCentered", "matRippleTrigger"], [1, "mat-button-focus-overlay"]],
  template: function MatButton_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "span", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojection"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](2, "span", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](3, "span", 2);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("mat-button-ripple-round", ctx.isRoundButton || ctx.isIconButton);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("matRippleDisabled", ctx._isRippleDisabled())("matRippleCentered", ctx.isIconButton)("matRippleTrigger", ctx._getHostElement());
    }
  },
  directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRipple"]],
  styles: [_c2],
  encapsulation: 2,
  changeDetection: 0
});

MatButton.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatButton.propDecorators = {
  ripple: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"],
    args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRipple"]]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatButton, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"],
    args: [{
      selector: "button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]",
      exportAs: 'matButton',
      host: {
        '[attr.disabled]': 'disabled || null',
        '[class._mat-animation-noopable]': '_animationMode === "NoopAnimations"',
        // Add a class for disabled button styling instead of the using attribute
        // selector or pseudo-selector.  This allows users to create focusabled
        // disabled buttons without recreating the styles.
        '[class.mat-button-disabled]': 'disabled',
        'class': 'mat-focus-indicator'
      },
      template: "<span class=\"mat-button-wrapper\"><ng-content></ng-content></span>\n<span matRipple class=\"mat-button-ripple\"\n      [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\"\n      [matRippleDisabled]=\"_isRippleDisabled()\"\n      [matRippleCentered]=\"isIconButton\"\n      [matRippleTrigger]=\"_getHostElement()\"></span>\n<span class=\"mat-button-focus-overlay\"></span>\n",
      inputs: ['disabled', 'disableRipple', 'color'],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    ripple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewChild"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRipple"]]
    }]
  });
})();
/**
 * Material design anchor button.
 */


var MatAnchor = /*#__PURE__*/function (_MatButton) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(MatAnchor, _MatButton);

  var _super2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(MatAnchor);

  function MatAnchor(focusMonitor, elementRef, animationMode) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatAnchor);

    return _super2.call(this, elementRef, focusMonitor, animationMode);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatAnchor, [{
    key: "_haltDisabledEvents",
    value: function _haltDisabledEvents(event) {
      // A disabled button shouldn't apply any actions
      if (this.disabled) {
        event.preventDefault();
        event.stopImmediatePropagation();
      }
    }
  }]);

  return MatAnchor;
}(MatButton);

MatAnchor.ɵfac = function MatAnchor_Factory(t) {
  return new (t || MatAnchor)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__["ANIMATION_MODULE_TYPE"], 8));
};

MatAnchor.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: MatAnchor,
  selectors: [["a", "mat-button", ""], ["a", "mat-raised-button", ""], ["a", "mat-icon-button", ""], ["a", "mat-fab", ""], ["a", "mat-mini-fab", ""], ["a", "mat-stroked-button", ""], ["a", "mat-flat-button", ""]],
  hostAttrs: [1, "mat-focus-indicator"],
  hostVars: 7,
  hostBindings: function MatAnchor_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function MatAnchor_click_HostBindingHandler($event) {
        return ctx._haltDisabledEvents($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("tabindex", ctx.disabled ? -1 : ctx.tabIndex || 0)("disabled", ctx.disabled || null)("aria-disabled", ctx.disabled.toString());
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("_mat-animation-noopable", ctx._animationMode === "NoopAnimations")("mat-button-disabled", ctx.disabled);
    }
  },
  inputs: {
    disabled: "disabled",
    disableRipple: "disableRipple",
    color: "color",
    tabIndex: "tabIndex"
  },
  exportAs: ["matButton", "matAnchor"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"]],
  attrs: _c0,
  ngContentSelectors: _c1,
  decls: 4,
  vars: 5,
  consts: [[1, "mat-button-wrapper"], ["matRipple", "", 1, "mat-button-ripple", 3, "matRippleDisabled", "matRippleCentered", "matRippleTrigger"], [1, "mat-button-focus-overlay"]],
  template: function MatAnchor_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "span", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojection"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](2, "span", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](3, "span", 2);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("mat-button-ripple-round", ctx.isRoundButton || ctx.isIconButton);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("matRippleDisabled", ctx._isRippleDisabled())("matRippleCentered", ctx.isIconButton)("matRippleTrigger", ctx._getHostElement());
    }
  },
  directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRipple"]],
  styles: [_c2],
  encapsulation: 2,
  changeDetection: 0
});

MatAnchor.ctorParameters = function () {
  return [{
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatAnchor.propDecorators = {
  tabIndex: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatAnchor, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"],
    args: [{
      selector: "a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]",
      exportAs: 'matButton, matAnchor',
      host: {
        // Note that we ignore the user-specified tabindex when it's disabled for
        // consistency with the `mat-button` applied on native buttons where even
        // though they have an index, they're not tabbable.
        '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',
        '[attr.disabled]': 'disabled || null',
        '[attr.aria-disabled]': 'disabled.toString()',
        '(click)': '_haltDisabledEvents($event)',
        '[class._mat-animation-noopable]': '_animationMode === "NoopAnimations"',
        '[class.mat-button-disabled]': 'disabled',
        'class': 'mat-focus-indicator'
      },
      inputs: ['disabled', 'disableRipple', 'color'],
      template: "<span class=\"mat-button-wrapper\"><ng-content></ng-content></span>\n<span matRipple class=\"mat-button-ripple\"\n      [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\"\n      [matRippleDisabled]=\"_isRippleDisabled()\"\n      [matRippleCentered]=\"isIconButton\"\n      [matRippleTrigger]=\"_getHostElement()\"></span>\n<span class=\"mat-button-focus-overlay\"></span>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\n"]
    }]
  }], function () {
    return [{
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_8__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    tabIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatButtonModule = function MatButtonModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatButtonModule);
};

MatButtonModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineNgModule"]({
  type: MatButtonModule
});
MatButtonModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjector"]({
  factory: function MatButtonModule_Factory(t) {
    return new (t || MatButtonModule)();
  },
  imports: [[_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRippleModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsetNgModuleScope"](MatButtonModule, {
    declarations: function declarations() {
      return [MatButton, MatAnchor];
    },
    imports: function imports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRippleModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]];
    },
    exports: function exports() {
      return [MatButton, MatAnchor, _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatButtonModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["NgModule"],
    args: [{
      imports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatRippleModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]],
      exports: [MatButton, MatAnchor, _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]],
      declarations: [MatButton, MatAnchor]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "cH1L":
/*!*****************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js ***!
  \*****************************************************************/
/*! exports provided: BidiModule, DIR_DOCUMENT, Dir, Directionality, ɵangular_material_src_cdk_bidi_bidi_a */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BidiModule", function() { return BidiModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DIR_DOCUMENT", function() { return DIR_DOCUMENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Dir", function() { return Dir; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Directionality", function() { return Directionality; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_bidi_bidi_a", function() { return DIR_DOCUMENT_FACTORY; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ "ofXK");




/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Injection token used to inject the document into Directionality.
 * This is used so that the value can be faked in tests.
 *
 * We can't use the real document in tests because changing the real `dir` causes geometry-based
 * tests in Safari to fail.
 *
 * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests
 * themselves use things like `querySelector` in test code.
 *
 * This token is defined in a separate file from Directionality as a workaround for
 * https://github.com/angular/angular/issues/22559
 *
 * @docs-private
 */


var DIR_DOCUMENT = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["InjectionToken"]('cdk-dir-doc', {
  providedIn: 'root',
  factory: DIR_DOCUMENT_FACTORY
});
/** @docs-private */

function DIR_DOCUMENT_FACTORY() {
  return Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_3__["DOCUMENT"]);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The directionality (LTR / RTL) context for the application (or a subtree of it).
 * Exposes the current direction and a stream of direction changes.
 */


var Directionality = /*#__PURE__*/function () {
  function Directionality(_document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Directionality);

    /** The current 'ltr' or 'rtl' value. */
    this.value = 'ltr';
    /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */

    this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();

    if (_document) {
      // TODO: handle 'auto' value -
      // We still need to account for dir="auto".
      // It looks like HTMLElemenet.dir is also "auto" when that's set to the attribute,
      // but getComputedStyle return either "ltr" or "rtl". avoiding getComputedStyle for now
      var bodyDir = _document.body ? _document.body.dir : null;
      var htmlDir = _document.documentElement ? _document.documentElement.dir : null;
      var value = bodyDir || htmlDir;
      this.value = value === 'ltr' || value === 'rtl' ? value : 'ltr';
    }
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Directionality, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.change.complete();
    }
  }]);

  return Directionality;
}();

Directionality.ɵfac = function Directionality_Factory(t) {
  return new (t || Directionality)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](DIR_DOCUMENT, 8));
};

Directionality.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"])({
  factory: function Directionality_Factory() {
    return new Directionality(Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"])(DIR_DOCUMENT, 8));
  },
  token: Directionality,
  providedIn: "root"
});

Directionality.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
      args: [DIR_DOCUMENT]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](Directionality, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"],
        args: [DIR_DOCUMENT]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Directive to listen for changes of direction of part of the DOM.
 *
 * Provides itself as Directionality such that descendant directives only need to ever inject
 * Directionality to get the closest direction.
 */


var Dir = /*#__PURE__*/function () {
  function Dir() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Dir);

    /** Normalized direction that accounts for invalid/unsupported values. */
    this._dir = 'ltr';
    /** Whether the `value` has been set to its initial value. */

    this._isInitialized = false;
    /** Event emitted when the direction changes. */

    this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_2__["EventEmitter"]();
  }
  /** @docs-private */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(Dir, [{
    key: "dir",
    get: function get() {
      return this._dir;
    },
    set: function set(value) {
      var old = this._dir;
      var normalizedValue = value ? value.toLowerCase() : value;
      this._rawDir = value;
      this._dir = normalizedValue === 'ltr' || normalizedValue === 'rtl' ? normalizedValue : 'ltr';

      if (old !== this._dir && this._isInitialized) {
        this.change.emit(this._dir);
      }
    }
    /** Current layout direction of the element. */

  }, {
    key: "value",
    get: function get() {
      return this.dir;
    }
    /** Initialize once default value has been set. */

  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      this._isInitialized = true;
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.change.complete();
    }
  }]);

  return Dir;
}();

Dir.ɵfac = function Dir_Factory(t) {
  return new (t || Dir)();
};

Dir.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineDirective"]({
  type: Dir,
  selectors: [["", "dir", ""]],
  hostVars: 1,
  hostBindings: function Dir_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵattribute"]("dir", ctx._rawDir);
    }
  },
  inputs: {
    dir: "dir"
  },
  outputs: {
    change: "dirChange"
  },
  exportAs: ["dir"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵProvidersFeature"]([{
    provide: Directionality,
    useExisting: Dir
  }])]
});
Dir.propDecorators = {
  change: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"],
    args: ['dirChange']
  }],
  dir: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](Dir, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Directive"],
    args: [{
      selector: '[dir]',
      providers: [{
        provide: Directionality,
        useExisting: Dir
      }],
      host: {
        '[attr.dir]': '_rawDir'
      },
      exportAs: 'dir'
    }]
  }], function () {
    return [];
  }, {
    change: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Output"],
      args: ['dirChange']
    }],
    dir: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var BidiModule = function BidiModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, BidiModule);
};

BidiModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: BidiModule
});
BidiModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  factory: function BidiModule_Factory(t) {
    return new (t || BidiModule)();
  }
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](BidiModule, {
    declarations: [Dir],
    exports: [Dir]
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](BidiModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
    args: [{
      exports: [Dir],
      declarations: [Dir]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "d3UM":
/*!************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js ***!
  \************************************************************************/
/*! exports provided: MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SELECT_CONFIG", function() { return MAT_SELECT_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SELECT_SCROLL_STRATEGY", function() { return MAT_SELECT_SCROLL_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SELECT_SCROLL_STRATEGY_PROVIDER", function() { return MAT_SELECT_SCROLL_STRATEGY_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY", function() { return MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SELECT_TRIGGER", function() { return MAT_SELECT_TRIGGER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSelect", function() { return MatSelect; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSelectChange", function() { return MatSelectChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSelectModule", function() { return MatSelectModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSelectTrigger", function() { return MatSelectTrigger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_ITEM_HEIGHT_EM", function() { return SELECT_ITEM_HEIGHT_EM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_MULTIPLE_PANEL_PADDING_X", function() { return SELECT_MULTIPLE_PANEL_PADDING_X; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_PANEL_INDENT_PADDING_X", function() { return SELECT_PANEL_INDENT_PADDING_X; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_PANEL_MAX_HEIGHT", function() { return SELECT_PANEL_MAX_HEIGHT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_PANEL_PADDING_X", function() { return SELECT_PANEL_PADDING_X; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SELECT_PANEL_VIEWPORT_PADDING", function() { return SELECT_PANEL_VIEWPORT_PADDING; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matSelectAnimations", function() { return matSelectAnimations; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/overlay */ "rDax");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/form-field */ "kmnG");
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/cdk/scrolling */ "vxfF");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/cdk/collections */ "0EQZ");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/animations */ "R0Ic");





















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The following are all the animations for the mat-select component, with each
 * const containing the metadata for one animation.
 *
 * The values below match the implementation of the AngularJS Material mat-select animation.
 * @docs-private
 */










var _c0 = ["trigger"];
var _c1 = ["panel"];

function MatSelect_span_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "span", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtextInterpolate"](ctx_r2.placeholder || "\xA0");
  }
}

function MatSelect_span_5_span_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtextInterpolate"](ctx_r5.triggerValue || "\xA0");
  }
}

function MatSelect_span_5_ng_content_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵprojection"](0, 0, ["*ngSwitchCase", "true"]);
  }
}

function MatSelect_span_5_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "span", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](1, MatSelect_span_5_span_1_Template, 2, 1, "span", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](2, MatSelect_span_5_ng_content_2_Template, 1, 0, "ng-content", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngSwitch", !!ctx_r3.customTrigger);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngSwitchCase", true);
  }
}

function MatSelect_ng_template_8_Template(rf, ctx) {
  if (rf & 1) {
    var _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "div", 13, 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("@transformPanel.done", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r9);
      var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
      return ctx_r8._panelDoneAnimatingStream.next($event.toState);
    })("keydown", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵrestoreView"](_r9);
      var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
      return ctx_r10._handleKeydown($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵprojection"](3, 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("@transformPanelWrap", undefined);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵclassMapInterpolate1"]("mat-select-panel ", ctx_r4._getPanelTheme(), "");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵstyleProp"]("transform-origin", ctx_r4._transformOrigin)("font-size", ctx_r4._triggerFontSize, "px");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngClass", ctx_r4.panelClass)("@transformPanel", ctx_r4.multiple ? "showing-multiple" : "showing");
    _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵattribute"]("id", ctx_r4.id + "-panel")("aria-multiselectable", ctx_r4.multiple)("aria-label", ctx_r4.ariaLabel || null)("aria-labelledby", ctx_r4._getPanelAriaLabelledby());
  }
}

var _c2 = [[["mat-select-trigger"]], "*"];
var _c3 = ["mat-select-trigger", "*"];
var matSelectAnimations = {
  /**
   * This animation ensures the select's overlay panel animation (transformPanel) is called when
   * closing the select.
   * This is needed due to https://github.com/angular/angular/issues/23302
   */
  transformPanelWrap: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["trigger"])('transformPanelWrap', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["query"])('@transformPanel', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["animateChild"])()], {
    optional: true
  }))]),

  /**
   * This animation transforms the select's overlay panel on and off the page.
   *
   * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it
   * up to 100% on the Y axis, fades in its border, and translates slightly up and to the
   * side to ensure the option text correctly overlaps the trigger text.
   *
   * When the panel is removed from the DOM, it simply fades out linearly.
   */
  transformPanel: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["trigger"])('transformPanel', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["style"])({
    transform: 'scaleY(0.8)',
    minWidth: '100%',
    opacity: 0
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["state"])('showing', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["style"])({
    opacity: 1,
    minWidth: 'calc(100% + 32px)',
    transform: 'scaleY(1)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["state"])('showing-multiple', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["style"])({
    opacity: 1,
    minWidth: 'calc(100% + 64px)',
    transform: 'scaleY(1)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["transition"])('void => *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["animate"])('120ms cubic-bezier(0, 0, 0.2, 1)')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["animate"])('100ms 25ms linear', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_20__["style"])({
    opacity: 0
  })))])
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Returns an exception to be thrown when attempting to change a select's `multiple` option
 * after initialization.
 * @docs-private
 */

function getMatSelectDynamicMultipleError() {
  return Error('Cannot change `multiple` mode of select after initialization.');
}
/**
 * Returns an exception to be thrown when attempting to assign a non-array value to a select
 * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for
 * resetting the value.
 * @docs-private
 */


function getMatSelectNonArrayValueError() {
  return Error('Value must be an array in multiple-selection mode.');
}
/**
 * Returns an exception to be thrown when assigning a non-function value to the comparator
 * used to determine if a value corresponds to an option. Note that whether the function
 * actually takes two values and returns a boolean is not checked.
 */


function getMatSelectNonFunctionValueError() {
  return Error('`compareWith` must be a function.');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var nextUniqueId = 0;
/**
 * The following style constants are necessary to save here in order
 * to properly calculate the alignment of the selected option over
 * the trigger element.
 */

/** The max height of the select's overlay panel */

var SELECT_PANEL_MAX_HEIGHT = 256;
/** The panel's padding on the x-axis */

var SELECT_PANEL_PADDING_X = 16;
/** The panel's x axis padding if it is indented (e.g. there is an option group). */

var SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;
/** The height of the select items in `em` units. */

var SELECT_ITEM_HEIGHT_EM = 3; // TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.

/**
 * Distance between the panel edge and the option text in
 * multi-selection mode.
 *
 * Calculated as:
 * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40
 * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.
 * The checkbox width is 16px.
 */

var SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;
/**
 * The select panel will only "fit" inside the viewport if it is positioned at
 * this value or more away from the viewport boundary.
 */

var SELECT_PANEL_VIEWPORT_PADDING = 8;
/** Injection token that determines the scroll handling while a select is open. */

var MAT_SELECT_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["InjectionToken"]('mat-select-scroll-strategy');
/** @docs-private */

function MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {
  return function () {
    return overlay.scrollStrategies.reposition();
  };
}
/** Injection token that can be used to provide the default options the select module. */


var MAT_SELECT_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["InjectionToken"]('MAT_SELECT_CONFIG');
/** @docs-private */

var MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {
  provide: MAT_SELECT_SCROLL_STRATEGY,
  deps: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["Overlay"]],
  useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY
};
/** Change event object that is emitted when the select value has changed. */

var MatSelectChange = function MatSelectChange(
/** Reference to the select that emitted the change event. */
source,
/** Current value of the select that emitted the event. */
value) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatSelectChange);

  this.source = source;
  this.value = value;
}; // Boilerplate for applying mixins to MatSelect.

/** @docs-private */


var MatSelectBase = function MatSelectBase(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatSelectBase);

  this._elementRef = _elementRef;
  this._defaultErrorStateMatcher = _defaultErrorStateMatcher;
  this._parentForm = _parentForm;
  this._parentFormGroup = _parentFormGroup;
  this.ngControl = ngControl;
};

var _MatSelectMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["mixinDisableRipple"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["mixinTabIndex"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["mixinDisabled"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["mixinErrorState"])(MatSelectBase))));
/**
 * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as
 * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */


var MAT_SELECT_TRIGGER = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["InjectionToken"]('MatSelectTrigger');
/**
 * Allows the user to customize the trigger that is displayed when the select has a value.
 */

var MatSelectTrigger = function MatSelectTrigger() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatSelectTrigger);
};

MatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) {
  return new (t || MatSelectTrigger)();
};

MatSelectTrigger.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineDirective"]({
  type: MatSelectTrigger,
  selectors: [["mat-select-trigger"]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵProvidersFeature"]([{
    provide: MAT_SELECT_TRIGGER,
    useExisting: MatSelectTrigger
  }])]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](MatSelectTrigger, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Directive"],
    args: [{
      selector: 'mat-select-trigger',
      providers: [{
        provide: MAT_SELECT_TRIGGER,
        useExisting: MatSelectTrigger
      }]
    }]
  }], null, null);
})();

var MatSelect = /*#__PURE__*/function (_MatSelectMixinBase2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(MatSelect, _MatSelectMixinBase2);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(MatSelect);

  function MatSelect(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {
    var _this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatSelect);

    _this = _super.call(this, elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);
    _this._viewportRuler = _viewportRuler;
    _this._changeDetectorRef = _changeDetectorRef;
    _this._ngZone = _ngZone;
    _this._dir = _dir;
    _this._parentFormField = _parentFormField;
    _this.ngControl = ngControl;
    _this._liveAnnouncer = _liveAnnouncer;
    /** Whether or not the overlay panel is open. */

    _this._panelOpen = false;
    /** Whether filling out the select is required in the form. */

    _this._required = false;
    /** The scroll position of the overlay panel, calculated to center the selected option. */

    _this._scrollTop = 0;
    /** Whether the component is in multiple selection mode. */

    _this._multiple = false;
    /** Comparison function to specify which option is displayed. Defaults to object equality. */

    _this._compareWith = function (o1, o2) {
      return o1 === o2;
    };
    /** Unique id for this input. */


    _this._uid = "mat-select-".concat(nextUniqueId++);
    /** Current `ariar-labelledby` value for the select trigger. */

    _this._triggerAriaLabelledBy = null;
    /** Emits whenever the component is destroyed. */

    _this._destroy = new rxjs__WEBPACK_IMPORTED_MODULE_18__["Subject"]();
    /** The cached font-size of the trigger element. */

    _this._triggerFontSize = 0;
    /** `View -> model callback called when value changes` */

    _this._onChange = function () {};
    /** `View -> model callback called when select has been touched` */


    _this._onTouched = function () {};

    _this._valueId = "mat-select-value-".concat(nextUniqueId++);
    /** The value of the select panel's transform-origin property. */

    _this._transformOrigin = 'top';
    /** Emits when the panel element is finished transforming in. */

    _this._panelDoneAnimatingStream = new rxjs__WEBPACK_IMPORTED_MODULE_18__["Subject"]();
    /**
     * The y-offset of the overlay panel in relation to the trigger's top start corner.
     * This must be adjusted to align the selected option text over the trigger text.
     * when the panel opens. Will change based on the y-position of the selected option.
     */

    _this._offsetY = 0;
    /**
     * This position config ensures that the top "start" corner of the overlay
     * is aligned with with the top "start" of the origin by default (overlapping
     * the trigger completely). If the panel cannot fit below the trigger, it
     * will fall back to a position above the trigger.
     */

    _this._positions = [{
      originX: 'start',
      originY: 'top',
      overlayX: 'start',
      overlayY: 'top'
    }, {
      originX: 'start',
      originY: 'bottom',
      overlayX: 'start',
      overlayY: 'bottom'
    }];
    /** Whether the component is disabling centering of the active option over the trigger. */

    _this._disableOptionCentering = false;
    _this._focused = false;
    /** A name for this control that can be used by `mat-form-field`. */

    _this.controlType = 'mat-select';
    /** Aria label of the select. If not specified, the placeholder will be used as label. */

    _this.ariaLabel = '';
    /** Combined stream of all of the child options' change events. */

    _this.optionSelectionChanges = Object(rxjs__WEBPACK_IMPORTED_MODULE_18__["defer"])(function () {
      var options = _this.options;

      if (options) {
        return options.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["startWith"])(options), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["switchMap"])(function () {
          return rxjs__WEBPACK_IMPORTED_MODULE_18__["merge"].apply(void 0, Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(options.map(function (option) {
            return option.onSelectionChange;
          })));
        }));
      }

      return _this._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["take"])(1), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["switchMap"])(function () {
        return _this.optionSelectionChanges;
      }));
    });
    /** Event emitted when the select panel has been toggled. */

    _this.openedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["EventEmitter"]();
    /** Event emitted when the select has been opened. */

    _this._openedStream = _this.openedChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["filter"])(function (o) {
      return o;
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["map"])(function () {}));
    /** Event emitted when the select has been closed. */

    _this._closedStream = _this.openedChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["filter"])(function (o) {
      return !o;
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["map"])(function () {}));
    /** Event emitted when the selected value has been changed by the user. */

    _this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["EventEmitter"]();
    /**
     * Event that emits whenever the raw value of the select changes. This is here primarily
     * to facilitate the two-way binding for the `value` input.
     * @docs-private
     */

    _this.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["EventEmitter"]();

    if (_this.ngControl) {
      // Note: we provide the value accessor through here, instead of
      // the `providers` to avoid running into a circular import.
      _this.ngControl.valueAccessor = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this);
    }

    _this._scrollStrategyFactory = scrollStrategyFactory;
    _this._scrollStrategy = _this._scrollStrategyFactory();
    _this.tabIndex = parseInt(tabIndex) || 0; // Force setter to be called in case id was not specified.

    _this.id = _this.id;

    if (defaults) {
      if (defaults.disableOptionCentering != null) {
        _this.disableOptionCentering = defaults.disableOptionCentering;
      }

      if (defaults.typeaheadDebounceInterval != null) {
        _this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;
      }
    }

    return _this;
  }
  /** Whether the select is focused. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatSelect, [{
    key: "focused",
    get: function get() {
      return this._focused || this._panelOpen;
    }
    /** Placeholder to be shown if no value has been selected. */

  }, {
    key: "placeholder",
    get: function get() {
      return this._placeholder;
    },
    set: function set(value) {
      this._placeholder = value;
      this.stateChanges.next();
    }
    /** Whether the component is required. */

  }, {
    key: "required",
    get: function get() {
      return this._required;
    },
    set: function set(value) {
      this._required = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_14__["coerceBooleanProperty"])(value);
      this.stateChanges.next();
    }
    /** Whether the user should be allowed to select multiple options. */

  }, {
    key: "multiple",
    get: function get() {
      return this._multiple;
    },
    set: function set(value) {
      if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMatSelectDynamicMultipleError();
      }

      this._multiple = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_14__["coerceBooleanProperty"])(value);
    }
    /** Whether to center the active option over the trigger. */

  }, {
    key: "disableOptionCentering",
    get: function get() {
      return this._disableOptionCentering;
    },
    set: function set(value) {
      this._disableOptionCentering = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_14__["coerceBooleanProperty"])(value);
    }
    /**
     * Function to compare the option values with the selected values. The first argument
     * is a value from an option. The second is a value from the selection. A boolean
     * should be returned.
     */

  }, {
    key: "compareWith",
    get: function get() {
      return this._compareWith;
    },
    set: function set(fn) {
      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMatSelectNonFunctionValueError();
      }

      this._compareWith = fn;

      if (this._selectionModel) {
        // A different comparator means the selection could change.
        this._initializeSelection();
      }
    }
    /** Value of the select control. */

  }, {
    key: "value",
    get: function get() {
      return this._value;
    },
    set: function set(newValue) {
      if (newValue !== this._value) {
        if (this.options) {
          this._setSelectionByValue(newValue);
        }

        this._value = newValue;
      }
    }
    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */

  }, {
    key: "typeaheadDebounceInterval",
    get: function get() {
      return this._typeaheadDebounceInterval;
    },
    set: function set(value) {
      this._typeaheadDebounceInterval = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_14__["coerceNumberProperty"])(value);
    }
    /** Unique id of the element. */

  }, {
    key: "id",
    get: function get() {
      return this._id;
    },
    set: function set(value) {
      this._id = value || this._uid;
      this.stateChanges.next();
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this2 = this;

      this._selectionModel = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["SelectionModel"](this.multiple);
      this.stateChanges.next(); // We need `distinctUntilChanged` here, because some browsers will
      // fire the animation end event twice for the same animation. See:
      // https://github.com/angular/angular/issues/24084

      this._panelDoneAnimatingStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(this._destroy)).subscribe(function () {
        if (_this2.panelOpen) {
          _this2._scrollTop = 0;

          _this2.openedChange.emit(true);
        } else {
          _this2.openedChange.emit(false);

          _this2.overlayDir.offsetX = 0;

          _this2._changeDetectorRef.markForCheck();
        }
      });

      this._viewportRuler.change().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(this._destroy)).subscribe(function () {
        if (_this2._panelOpen) {
          _this2._triggerRect = _this2.trigger.nativeElement.getBoundingClientRect();

          _this2._changeDetectorRef.markForCheck();
        }
      });
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this3 = this;

      this._initKeyManager();

      this._selectionModel.changed.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(this._destroy)).subscribe(function (event) {
        event.added.forEach(function (option) {
          return option.select();
        });
        event.removed.forEach(function (option) {
          return option.deselect();
        });
      });

      this.options.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["startWith"])(null), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(this._destroy)).subscribe(function () {
        _this3._resetOptions();

        _this3._initializeSelection();
      });
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      var newAriaLabelledby = this._getTriggerAriaLabelledby(); // We have to manage setting the `aria-labelledby` ourselves, because part of its value
      // is computed as a result of a content query which can cause this binding to trigger a
      // "changed after checked" error.


      if (newAriaLabelledby !== this._triggerAriaLabelledBy) {
        var element = this._elementRef.nativeElement;
        this._triggerAriaLabelledBy = newAriaLabelledby;

        if (newAriaLabelledby) {
          element.setAttribute('aria-labelledby', newAriaLabelledby);
        } else {
          element.removeAttribute('aria-labelledby');
        }
      }

      if (this.ngControl) {
        this.updateErrorState();
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let
      // the parent form field know to run change detection when the disabled state changes.
      if (changes['disabled']) {
        this.stateChanges.next();
      }

      if (changes['typeaheadDebounceInterval'] && this._keyManager) {
        this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroy.next();

      this._destroy.complete();

      this.stateChanges.complete();
    }
    /** Toggles the overlay panel open or closed. */

  }, {
    key: "toggle",
    value: function toggle() {
      this.panelOpen ? this.close() : this.open();
    }
    /** Opens the overlay panel. */

  }, {
    key: "open",
    value: function open() {
      var _this4 = this;

      if (this.disabled || !this.options || !this.options.length || this._panelOpen) {
        return;
      }

      this._triggerRect = this.trigger.nativeElement.getBoundingClientRect(); // Note: The computed font-size will be a string pixel value (e.g. "16px").
      // `parseInt` ignores the trailing 'px' and converts this to a number.

      this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');
      this._panelOpen = true;

      this._keyManager.withHorizontalOrientation(null);

      this._calculateOverlayPosition();

      this._highlightCorrectOption();

      this._changeDetectorRef.markForCheck(); // Set the font size on the panel element once it exists.


      this._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["take"])(1)).subscribe(function () {
        if (_this4._triggerFontSize && _this4.overlayDir.overlayRef && _this4.overlayDir.overlayRef.overlayElement) {
          _this4.overlayDir.overlayRef.overlayElement.style.fontSize = "".concat(_this4._triggerFontSize, "px");
        }
      });
    }
    /** Closes the overlay panel and focuses the host element. */

  }, {
    key: "close",
    value: function close() {
      if (this._panelOpen) {
        this._panelOpen = false;

        this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');

        this._changeDetectorRef.markForCheck();

        this._onTouched();
      }
    }
    /**
     * Sets the select's value. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param value New value to be written to the model.
     */

  }, {
    key: "writeValue",
    value: function writeValue(value) {
      this.value = value;
    }
    /**
     * Saves a callback function to be invoked when the select's value
     * changes from user input. Part of the ControlValueAccessor interface
     * required to integrate with Angular's core forms API.
     *
     * @param fn Callback to be triggered when the value changes.
     */

  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this._onChange = fn;
    }
    /**
     * Saves a callback function to be invoked when the select is blurred
     * by the user. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param fn Callback to be triggered when the component has been touched.
     */

  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this._onTouched = fn;
    }
    /**
     * Disables the select. Part of the ControlValueAccessor interface required
     * to integrate with Angular's core forms API.
     *
     * @param isDisabled Sets whether the component is disabled.
     */

  }, {
    key: "setDisabledState",
    value: function setDisabledState(isDisabled) {
      this.disabled = isDisabled;

      this._changeDetectorRef.markForCheck();

      this.stateChanges.next();
    }
    /** Whether or not the overlay panel is open. */

  }, {
    key: "panelOpen",
    get: function get() {
      return this._panelOpen;
    }
    /** The currently selected option. */

  }, {
    key: "selected",
    get: function get() {
      return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];
    }
    /** The value displayed in the trigger. */

  }, {
    key: "triggerValue",
    get: function get() {
      if (this.empty) {
        return '';
      }

      if (this._multiple) {
        var selectedOptions = this._selectionModel.selected.map(function (option) {
          return option.viewValue;
        });

        if (this._isRtl()) {
          selectedOptions.reverse();
        } // TODO(crisbeto): delimiter should be configurable for proper localization.


        return selectedOptions.join(', ');
      }

      return this._selectionModel.selected[0].viewValue;
    }
    /** Whether the element is in RTL mode. */

  }, {
    key: "_isRtl",
    value: function _isRtl() {
      return this._dir ? this._dir.value === 'rtl' : false;
    }
    /** Handles all keydown events on the select. */

  }, {
    key: "_handleKeydown",
    value: function _handleKeydown(event) {
      if (!this.disabled) {
        this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);
      }
    }
    /** Handles keyboard events while the select is closed. */

  }, {
    key: "_handleClosedKeydown",
    value: function _handleClosedKeydown(event) {
      var keyCode = event.keyCode;
      var isArrowKey = keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["DOWN_ARROW"] || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["UP_ARROW"] || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["LEFT_ARROW"] || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["RIGHT_ARROW"];
      var isOpenKey = keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["ENTER"] || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["SPACE"];
      var manager = this._keyManager; // Open the select on ALT + arrow key to match the native <select>

      if (!manager.isTyping() && isOpenKey && !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["hasModifierKey"])(event) || (this.multiple || event.altKey) && isArrowKey) {
        event.preventDefault(); // prevents the page from scrolling down when pressing space

        this.open();
      } else if (!this.multiple) {
        var previouslySelectedOption = this.selected;
        manager.onKeydown(event);
        var selectedOption = this.selected; // Since the value has changed, we need to announce it ourselves.

        if (selectedOption && previouslySelectedOption !== selectedOption) {
          // We set a duration on the live announcement, because we want the live element to be
          // cleared after a while so that users can't navigate to it using the arrow keys.
          this._liveAnnouncer.announce(selectedOption.viewValue, 10000);
        }
      }
    }
    /** Handles keyboard events when the selected is open. */

  }, {
    key: "_handleOpenKeydown",
    value: function _handleOpenKeydown(event) {
      var manager = this._keyManager;
      var keyCode = event.keyCode;
      var isArrowKey = keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["DOWN_ARROW"] || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["UP_ARROW"];
      var isTyping = manager.isTyping();

      if (isArrowKey && event.altKey) {
        // Close the select on ALT + arrow key to match the native <select>
        event.preventDefault();
        this.close(); // Don't do anything in this case if the user is typing,
        // because the typing sequence can include the space key.
      } else if (!isTyping && (keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["ENTER"] || keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["SPACE"]) && manager.activeItem && !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["hasModifierKey"])(event)) {
        event.preventDefault();

        manager.activeItem._selectViaInteraction();
      } else if (!isTyping && this._multiple && keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_16__["A"] && event.ctrlKey) {
        event.preventDefault();
        var hasDeselectedOptions = this.options.some(function (opt) {
          return !opt.disabled && !opt.selected;
        });
        this.options.forEach(function (option) {
          if (!option.disabled) {
            hasDeselectedOptions ? option.select() : option.deselect();
          }
        });
      } else {
        var previouslyFocusedIndex = manager.activeItemIndex;
        manager.onKeydown(event);

        if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem && manager.activeItemIndex !== previouslyFocusedIndex) {
          manager.activeItem._selectViaInteraction();
        }
      }
    }
  }, {
    key: "_onFocus",
    value: function _onFocus() {
      if (!this.disabled) {
        this._focused = true;
        this.stateChanges.next();
      }
    }
    /**
     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will
     * "blur" to the panel when it opens, causing a false positive.
     */

  }, {
    key: "_onBlur",
    value: function _onBlur() {
      this._focused = false;

      if (!this.disabled && !this.panelOpen) {
        this._onTouched();

        this._changeDetectorRef.markForCheck();

        this.stateChanges.next();
      }
    }
    /**
     * Callback that is invoked when the overlay panel has been attached.
     */

  }, {
    key: "_onAttached",
    value: function _onAttached() {
      var _this5 = this;

      this.overlayDir.positionChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["take"])(1)).subscribe(function () {
        _this5._changeDetectorRef.detectChanges();

        _this5._calculateOverlayOffsetX();

        _this5.panel.nativeElement.scrollTop = _this5._scrollTop;
      });
    }
    /** Returns the theme to be used on the panel. */

  }, {
    key: "_getPanelTheme",
    value: function _getPanelTheme() {
      return this._parentFormField ? "mat-".concat(this._parentFormField.color) : '';
    }
    /** Whether the select has a value. */

  }, {
    key: "empty",
    get: function get() {
      return !this._selectionModel || this._selectionModel.isEmpty();
    }
  }, {
    key: "_initializeSelection",
    value: function _initializeSelection() {
      var _this6 = this;

      // Defer setting the value in order to avoid the "Expression
      // has changed after it was checked" errors from Angular.
      Promise.resolve().then(function () {
        _this6._setSelectionByValue(_this6.ngControl ? _this6.ngControl.value : _this6._value);

        _this6.stateChanges.next();
      });
    }
    /**
     * Sets the selected option based on a value. If no option can be
     * found with the designated value, the select trigger is cleared.
     */

  }, {
    key: "_setSelectionByValue",
    value: function _setSelectionByValue(value) {
      var _this7 = this;

      if (this.multiple && value) {
        if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throw getMatSelectNonArrayValueError();
        }

        this._selectionModel.clear();

        value.forEach(function (currentValue) {
          return _this7._selectValue(currentValue);
        });

        this._sortValues();
      } else {
        this._selectionModel.clear();

        var correspondingOption = this._selectValue(value); // Shift focus to the active item. Note that we shouldn't do this in multiple
        // mode, because we don't know what option the user interacted with last.


        if (correspondingOption) {
          this._keyManager.updateActiveItem(correspondingOption);
        } else if (!this.panelOpen) {
          // Otherwise reset the highlighted option. Note that we only want to do this while
          // closed, because doing it while open can shift the user's focus unnecessarily.
          this._keyManager.updateActiveItem(-1);
        }
      }

      this._changeDetectorRef.markForCheck();
    }
    /**
     * Finds and selects and option based on its value.
     * @returns Option that has the corresponding value.
     */

  }, {
    key: "_selectValue",
    value: function _selectValue(value) {
      var _this8 = this;

      var correspondingOption = this.options.find(function (option) {
        try {
          // Treat null as a special reset value.
          return option.value != null && _this8._compareWith(option.value, value);
        } catch (error) {
          if (typeof ngDevMode === 'undefined' || ngDevMode) {
            // Notify developers of errors in their comparator.
            console.warn(error);
          }

          return false;
        }
      });

      if (correspondingOption) {
        this._selectionModel.select(correspondingOption);
      }

      return correspondingOption;
    }
    /** Sets up a key manager to listen to keyboard events on the overlay panel. */

  }, {
    key: "_initKeyManager",
    value: function _initKeyManager() {
      var _this9 = this;

      this._keyManager = new _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["ActiveDescendantKeyManager"](this.options).withTypeAhead(this._typeaheadDebounceInterval).withVerticalOrientation().withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr').withHomeAndEnd().withAllowedModifierKeys(['shiftKey']);

      this._keyManager.tabOut.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(this._destroy)).subscribe(function () {
        if (_this9.panelOpen) {
          // Select the active item when tabbing away. This is consistent with how the native
          // select behaves. Note that we only want to do this in single selection mode.
          if (!_this9.multiple && _this9._keyManager.activeItem) {
            _this9._keyManager.activeItem._selectViaInteraction();
          } // Restore focus to the trigger before closing. Ensures that the focus
          // position won't be lost if the user got focus into the overlay.


          _this9.focus();

          _this9.close();
        }
      });

      this._keyManager.change.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(this._destroy)).subscribe(function () {
        if (_this9._panelOpen && _this9.panel) {
          _this9._scrollActiveOptionIntoView();
        } else if (!_this9._panelOpen && !_this9.multiple && _this9._keyManager.activeItem) {
          _this9._keyManager.activeItem._selectViaInteraction();
        }
      });
    }
    /** Drops current option subscriptions and IDs and resets from scratch. */

  }, {
    key: "_resetOptions",
    value: function _resetOptions() {
      var _this10 = this;

      var changedOrDestroyed = Object(rxjs__WEBPACK_IMPORTED_MODULE_18__["merge"])(this.options.changes, this._destroy);
      this.optionSelectionChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(changedOrDestroyed)).subscribe(function (event) {
        _this10._onSelect(event.source, event.isUserInput);

        if (event.isUserInput && !_this10.multiple && _this10._panelOpen) {
          _this10.close();

          _this10.focus();
        }
      }); // Listen to changes in the internal state of the options and react accordingly.
      // Handles cases like the labels of the selected options changing.

      rxjs__WEBPACK_IMPORTED_MODULE_18__["merge"].apply(void 0, Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this.options.map(function (option) {
        return option._stateChanges;
      }))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_19__["takeUntil"])(changedOrDestroyed)).subscribe(function () {
        _this10._changeDetectorRef.markForCheck();

        _this10.stateChanges.next();
      });
    }
    /** Invoked when an option is clicked. */

  }, {
    key: "_onSelect",
    value: function _onSelect(option, isUserInput) {
      var wasSelected = this._selectionModel.isSelected(option);

      if (option.value == null && !this._multiple) {
        option.deselect();

        this._selectionModel.clear();

        if (this.value != null) {
          this._propagateChanges(option.value);
        }
      } else {
        if (wasSelected !== option.selected) {
          option.selected ? this._selectionModel.select(option) : this._selectionModel.deselect(option);
        }

        if (isUserInput) {
          this._keyManager.setActiveItem(option);
        }

        if (this.multiple) {
          this._sortValues();

          if (isUserInput) {
            // In case the user selected the option with their mouse, we
            // want to restore focus back to the trigger, in order to
            // prevent the select keyboard controls from clashing with
            // the ones from `mat-option`.
            this.focus();
          }
        }
      }

      if (wasSelected !== this._selectionModel.isSelected(option)) {
        this._propagateChanges();
      }

      this.stateChanges.next();
    }
    /** Sorts the selected values in the selected based on their order in the panel. */

  }, {
    key: "_sortValues",
    value: function _sortValues() {
      var _this11 = this;

      if (this.multiple) {
        var options = this.options.toArray();

        this._selectionModel.sort(function (a, b) {
          return _this11.sortComparator ? _this11.sortComparator(a, b, options) : options.indexOf(a) - options.indexOf(b);
        });

        this.stateChanges.next();
      }
    }
    /** Emits change event to set the model value. */

  }, {
    key: "_propagateChanges",
    value: function _propagateChanges(fallbackValue) {
      var valueToEmit = null;

      if (this.multiple) {
        valueToEmit = this.selected.map(function (option) {
          return option.value;
        });
      } else {
        valueToEmit = this.selected ? this.selected.value : fallbackValue;
      }

      this._value = valueToEmit;
      this.valueChange.emit(valueToEmit);

      this._onChange(valueToEmit);

      this.selectionChange.emit(new MatSelectChange(this, valueToEmit));

      this._changeDetectorRef.markForCheck();
    }
    /**
     * Highlights the selected item. If no option is selected, it will highlight
     * the first item instead.
     */

  }, {
    key: "_highlightCorrectOption",
    value: function _highlightCorrectOption() {
      if (this._keyManager) {
        if (this.empty) {
          this._keyManager.setFirstItemActive();
        } else {
          this._keyManager.setActiveItem(this._selectionModel.selected[0]);
        }
      }
    }
    /** Scrolls the active option into view. */

  }, {
    key: "_scrollActiveOptionIntoView",
    value: function _scrollActiveOptionIntoView() {
      var activeOptionIndex = this._keyManager.activeItemIndex || 0;

      var labelCount = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["_countGroupLabelsBeforeOption"])(activeOptionIndex, this.options, this.optionGroups);

      var itemHeight = this._getItemHeight();

      this.panel.nativeElement.scrollTop = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["_getOptionScrollPosition"])((activeOptionIndex + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);
    }
    /** Focuses the select element. */

  }, {
    key: "focus",
    value: function focus(options) {
      this._elementRef.nativeElement.focus(options);
    }
    /** Gets the index of the provided option in the option list. */

  }, {
    key: "_getOptionIndex",
    value: function _getOptionIndex(option) {
      return this.options.reduce(function (result, current, index) {
        if (result !== undefined) {
          return result;
        }

        return option === current ? index : undefined;
      }, undefined);
    }
    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */

  }, {
    key: "_calculateOverlayPosition",
    value: function _calculateOverlayPosition() {
      var itemHeight = this._getItemHeight();

      var items = this._getItemCount();

      var panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);
      var scrollContainerHeight = items * itemHeight; // The farthest the panel can be scrolled before it hits the bottom

      var maxScroll = scrollContainerHeight - panelHeight; // If no value is selected we open the popup to the first item.

      var selectedOptionOffset = this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0]);
      selectedOptionOffset += Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["_countGroupLabelsBeforeOption"])(selectedOptionOffset, this.options, this.optionGroups); // We must maintain a scroll buffer so the selected option will be scrolled to the
      // center of the overlay panel rather than the top.

      var scrollBuffer = panelHeight / 2;
      this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);
      this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);

      this._checkOverlayWithinViewport(maxScroll);
    }
    /**
     * Calculates the scroll position of the select's overlay panel.
     *
     * Attempts to center the selected option in the panel. If the option is
     * too high or too low in the panel to be scrolled to the center, it clamps the
     * scroll position to the min or max scroll positions respectively.
     */

  }, {
    key: "_calculateOverlayScroll",
    value: function _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {
      var itemHeight = this._getItemHeight();

      var optionOffsetFromScrollTop = itemHeight * selectedIndex;
      var halfOptionHeight = itemHeight / 2; // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the
      // scroll container, then subtracts the scroll buffer to scroll the option down to
      // the center of the overlay panel. Half the option height must be re-added to the
      // scrollTop so the option is centered based on its middle, not its top edge.

      var optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;
      return Math.min(Math.max(0, optimalScrollPosition), maxScroll);
    }
    /** Gets the aria-labelledby for the select panel. */

  }, {
    key: "_getPanelAriaLabelledby",
    value: function _getPanelAriaLabelledby() {
      if (this.ariaLabel) {
        return null;
      }

      var labelId = this._getLabelId();

      return this.ariaLabelledby ? labelId + ' ' + this.ariaLabelledby : labelId;
    }
    /** Determines the `aria-activedescendant` to be set on the host. */

  }, {
    key: "_getAriaActiveDescendant",
    value: function _getAriaActiveDescendant() {
      if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {
        return this._keyManager.activeItem.id;
      }

      return null;
    }
    /** Gets the ID of the element that is labelling the select. */

  }, {
    key: "_getLabelId",
    value: function _getLabelId() {
      var _a;

      return ((_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId()) || '';
    }
    /**
     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.
     * This must be adjusted to align the selected option text over the trigger text when
     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset
     * can't be calculated until the panel has been attached, because we need to know the
     * content width in order to constrain the panel within the viewport.
     */

  }, {
    key: "_calculateOverlayOffsetX",
    value: function _calculateOverlayOffsetX() {
      var overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();

      var viewportSize = this._viewportRuler.getViewportSize();

      var isRtl = this._isRtl();

      var paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X : SELECT_PANEL_PADDING_X * 2;
      var offsetX; // Adjust the offset, depending on the option padding.

      if (this.multiple) {
        offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;
      } else {
        var selected = this._selectionModel.selected[0] || this.options.first;
        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;
      } // Invert the offset in LTR.


      if (!isRtl) {
        offsetX *= -1;
      } // Determine how much the select overflows on each side.


      var leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));
      var rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth); // If the element overflows on either side, reduce the offset to allow it to fit.

      if (leftOverflow > 0) {
        offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;
      } else if (rightOverflow > 0) {
        offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;
      } // Set the offset directly in order to avoid having to go through change detection and
      // potentially triggering "changed after it was checked" errors. Round the value to avoid
      // blurry content in some browsers.


      this.overlayDir.offsetX = Math.round(offsetX);
      this.overlayDir.overlayRef.updatePosition();
    }
    /**
     * Calculates the y-offset of the select's overlay panel in relation to the
     * top start corner of the trigger. It has to be adjusted in order for the
     * selected option to be aligned over the trigger when the panel opens.
     */

  }, {
    key: "_calculateOverlayOffsetY",
    value: function _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {
      var itemHeight = this._getItemHeight();

      var optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;
      var maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);
      var optionOffsetFromPanelTop; // Disable offset if requested by user by returning 0 as value to offset

      if (this._disableOptionCentering) {
        return 0;
      }

      if (this._scrollTop === 0) {
        optionOffsetFromPanelTop = selectedIndex * itemHeight;
      } else if (this._scrollTop === maxScroll) {
        var firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;
        var selectedDisplayIndex = selectedIndex - firstDisplayedIndex; // The first item is partially out of the viewport. Therefore we need to calculate what
        // portion of it is shown in the viewport and account for it in our offset.

        var partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight; // Because the panel height is longer than the height of the options alone,
        // there is always extra padding at the top or bottom of the panel. When
        // scrolled to the very bottom, this padding is at the top of the panel and
        // must be added to the offset.

        optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;
      } else {
        // If the option was scrolled to the middle of the panel using a scroll buffer,
        // its offset will be the scroll buffer minus the half height that was added to
        // center it.
        optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;
      } // The final offset is the option's offset from the top, adjusted for the height difference,
      // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.
      // The value is rounded to prevent some browsers from blurring the content.


      return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);
    }
    /**
     * Checks that the attempted overlay position will fit within the viewport.
     * If it will not fit, tries to adjust the scroll position and the associated
     * y-offset so the panel can open fully on-screen. If it still won't fit,
     * sets the offset back to 0 to allow the fallback position to take over.
     */

  }, {
    key: "_checkOverlayWithinViewport",
    value: function _checkOverlayWithinViewport(maxScroll) {
      var itemHeight = this._getItemHeight();

      var viewportSize = this._viewportRuler.getViewportSize();

      var topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;
      var bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;
      var panelHeightTop = Math.abs(this._offsetY);
      var totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);
      var panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;

      if (panelHeightBottom > bottomSpaceAvailable) {
        this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);
      } else if (panelHeightTop > topSpaceAvailable) {
        this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);
      } else {
        this._transformOrigin = this._getOriginBasedOnOption();
      }
    }
    /** Adjusts the overlay panel up to fit in the viewport. */

  }, {
    key: "_adjustPanelUp",
    value: function _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {
      // Browsers ignore fractional scroll offsets, so we need to round.
      var distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable); // Scrolls the panel up by the distance it was extending past the boundary, then
      // adjusts the offset by that amount to move the panel up into the viewport.

      this._scrollTop -= distanceBelowViewport;
      this._offsetY -= distanceBelowViewport;
      this._transformOrigin = this._getOriginBasedOnOption(); // If the panel is scrolled to the very top, it won't be able to fit the panel
      // by scrolling, so set the offset to 0 to allow the fallback position to take
      // effect.

      if (this._scrollTop <= 0) {
        this._scrollTop = 0;
        this._offsetY = 0;
        this._transformOrigin = "50% bottom 0px";
      }
    }
    /** Adjusts the overlay panel down to fit in the viewport. */

  }, {
    key: "_adjustPanelDown",
    value: function _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {
      // Browsers ignore fractional scroll offsets, so we need to round.
      var distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable); // Scrolls the panel down by the distance it was extending past the boundary, then
      // adjusts the offset by that amount to move the panel down into the viewport.

      this._scrollTop += distanceAboveViewport;
      this._offsetY += distanceAboveViewport;
      this._transformOrigin = this._getOriginBasedOnOption(); // If the panel is scrolled to the very bottom, it won't be able to fit the
      // panel by scrolling, so set the offset to 0 to allow the fallback position
      // to take effect.

      if (this._scrollTop >= maxScroll) {
        this._scrollTop = maxScroll;
        this._offsetY = 0;
        this._transformOrigin = "50% top 0px";
        return;
      }
    }
    /** Sets the transform origin point based on the selected option. */

  }, {
    key: "_getOriginBasedOnOption",
    value: function _getOriginBasedOnOption() {
      var itemHeight = this._getItemHeight();

      var optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;
      var originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;
      return "50% ".concat(originY, "px 0px");
    }
    /** Calculates the amount of items in the select. This includes options and group labels. */

  }, {
    key: "_getItemCount",
    value: function _getItemCount() {
      return this.options.length + this.optionGroups.length;
    }
    /** Calculates the height of the select's options. */

  }, {
    key: "_getItemHeight",
    value: function _getItemHeight() {
      return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;
    }
    /** Gets the aria-labelledby of the select component trigger. */

  }, {
    key: "_getTriggerAriaLabelledby",
    value: function _getTriggerAriaLabelledby() {
      if (this.ariaLabel) {
        return null;
      }

      var value = this._getLabelId() + ' ' + this._valueId;

      if (this.ariaLabelledby) {
        value += ' ' + this.ariaLabelledby;
      }

      return value;
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "setDescribedByIds",
    value: function setDescribedByIds(ids) {
      this._ariaDescribedby = ids.join(' ');
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "onContainerClick",
    value: function onContainerClick() {
      this.focus();
      this.open();
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "shouldLabelFloat",
    get: function get() {
      return this._panelOpen || !this.empty;
    }
  }]);

  return MatSelect;
}(_MatSelectMixinBase);

MatSelect.ɵfac = function MatSelect_Factory(t) {
  return new (t || MatSelect)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_11__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_13__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_17__["NgForm"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_17__["FormGroupDirective"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MAT_FORM_FIELD"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_17__["NgControl"], 10), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinjectAttribute"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](MAT_SELECT_SCROLL_STRATEGY), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["LiveAnnouncer"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](MAT_SELECT_CONFIG, 8));
};

MatSelect.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineComponent"]({
  type: MatSelect,
  selectors: [["mat-select"]],
  contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵcontentQuery"](dirIndex, MAT_SELECT_TRIGGER, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵcontentQuery"](dirIndex, _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOption"], true);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵcontentQuery"](dirIndex, _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MAT_OPTGROUP"], true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.customTrigger = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.options = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.optionGroups = _t);
    }
  },
  viewQuery: function MatSelect_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c0, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_c1, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵviewQuery"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["CdkConnectedOverlay"], true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.trigger = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.panel = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵloadQuery"]()) && (ctx.overlayDir = _t.first);
    }
  },
  hostAttrs: ["role", "combobox", "aria-autocomplete", "none", "aria-haspopup", "true", 1, "mat-select"],
  hostVars: 20,
  hostBindings: function MatSelect_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("keydown", function MatSelect_keydown_HostBindingHandler($event) {
        return ctx._handleKeydown($event);
      })("focus", function MatSelect_focus_HostBindingHandler() {
        return ctx._onFocus();
      })("blur", function MatSelect_blur_HostBindingHandler() {
        return ctx._onBlur();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵattribute"]("id", ctx.id)("tabindex", ctx.tabIndex)("aria-controls", ctx.panelOpen ? ctx.id + "-panel" : null)("aria-expanded", ctx.panelOpen)("aria-label", ctx.ariaLabel || null)("aria-required", ctx.required.toString())("aria-disabled", ctx.disabled.toString())("aria-invalid", ctx.errorState)("aria-describedby", ctx._ariaDescribedby || null)("aria-activedescendant", ctx._getAriaActiveDescendant());
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵclassProp"]("mat-select-disabled", ctx.disabled)("mat-select-invalid", ctx.errorState)("mat-select-required", ctx.required)("mat-select-empty", ctx.empty)("mat-select-multiple", ctx.multiple);
    }
  },
  inputs: {
    disabled: "disabled",
    disableRipple: "disableRipple",
    tabIndex: "tabIndex",
    ariaLabel: ["aria-label", "ariaLabel"],
    id: "id",
    disableOptionCentering: "disableOptionCentering",
    typeaheadDebounceInterval: "typeaheadDebounceInterval",
    placeholder: "placeholder",
    required: "required",
    multiple: "multiple",
    compareWith: "compareWith",
    value: "value",
    panelClass: "panelClass",
    ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
    errorStateMatcher: "errorStateMatcher",
    sortComparator: "sortComparator"
  },
  outputs: {
    openedChange: "openedChange",
    _openedStream: "opened",
    _closedStream: "closed",
    selectionChange: "selectionChange",
    valueChange: "valueChange"
  },
  exportAs: ["matSelect"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵProvidersFeature"]([{
    provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldControl"],
    useExisting: MatSelect
  }, {
    provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MAT_OPTION_PARENT_COMPONENT"],
    useExisting: MatSelect
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c3,
  decls: 9,
  vars: 10,
  consts: [["cdk-overlay-origin", "", 1, "mat-select-trigger", 3, "click"], ["origin", "cdkOverlayOrigin", "trigger", ""], [1, "mat-select-value", 3, "ngSwitch"], ["class", "mat-select-placeholder", 4, "ngSwitchCase"], ["class", "mat-select-value-text", 3, "ngSwitch", 4, "ngSwitchCase"], [1, "mat-select-arrow-wrapper"], [1, "mat-select-arrow"], ["cdk-connected-overlay", "", "cdkConnectedOverlayLockPosition", "", "cdkConnectedOverlayHasBackdrop", "", "cdkConnectedOverlayBackdropClass", "cdk-overlay-transparent-backdrop", 3, "cdkConnectedOverlayScrollStrategy", "cdkConnectedOverlayOrigin", "cdkConnectedOverlayOpen", "cdkConnectedOverlayPositions", "cdkConnectedOverlayMinWidth", "cdkConnectedOverlayOffsetY", "backdropClick", "attach", "detach"], [1, "mat-select-placeholder"], [1, "mat-select-value-text", 3, "ngSwitch"], [4, "ngSwitchDefault"], [4, "ngSwitchCase"], [1, "mat-select-panel-wrap"], ["role", "listbox", "tabindex", "-1", 3, "ngClass", "keydown"], ["panel", ""]],
  template: function MatSelect_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵprojectionDef"](_c2);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("click", function MatSelect_Template_div_click_0_listener() {
        return ctx.toggle();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](3, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](4, MatSelect_span_4_Template, 2, 1, "span", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](5, MatSelect_span_5_Template, 3, 2, "span", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](6, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelement"](7, "div", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵtemplate"](8, MatSelect_ng_template_8_Template, 4, 14, "ng-template", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("backdropClick", function MatSelect_Template_ng_template_backdropClick_8_listener() {
        return ctx.close();
      })("attach", function MatSelect_Template_ng_template_attach_8_listener() {
        return ctx._onAttached();
      })("detach", function MatSelect_Template_ng_template_detach_8_listener() {
        return ctx.close();
      });
    }

    if (rf & 2) {
      var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵreference"](1);

      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngSwitch", ctx.empty);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵattribute"]("id", ctx._valueId);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngSwitchCase", true);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("ngSwitchCase", false);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("cdkConnectedOverlayScrollStrategy", ctx._scrollStrategy)("cdkConnectedOverlayOrigin", _r0)("cdkConnectedOverlayOpen", ctx.panelOpen)("cdkConnectedOverlayPositions", ctx._positions)("cdkConnectedOverlayMinWidth", ctx._triggerRect == null ? null : ctx._triggerRect.width)("cdkConnectedOverlayOffsetY", ctx._offsetY);
    }
  },
  directives: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["CdkOverlayOrigin"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgSwitch"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgSwitchCase"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["CdkConnectedOverlay"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgSwitchDefault"], _angular_common__WEBPACK_IMPORTED_MODULE_7__["NgClass"]],
  styles: [".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\n"],
  encapsulation: 2,
  data: {
    animation: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel]
  },
  changeDetection: 0
});

MatSelect.ctorParameters = function () {
  return [{
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_11__["ViewportRuler"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ChangeDetectorRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_13__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_17__["NgForm"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_17__["FormGroupDirective"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }]
  }, {
    type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormField"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MAT_FORM_FIELD"]]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_17__["NgControl"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Self"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Attribute"],
      args: ['tabindex']
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [MAT_SELECT_SCROLL_STRATEGY]
    }]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["LiveAnnouncer"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [MAT_SELECT_CONFIG]
    }]
  }];
};

MatSelect.propDecorators = {
  trigger: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ViewChild"],
    args: ['trigger']
  }],
  panel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ViewChild"],
    args: ['panel']
  }],
  overlayDir: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ViewChild"],
    args: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["CdkConnectedOverlay"]]
  }],
  options: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ContentChildren"],
    args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOption"], {
      descendants: true
    }]
  }],
  optionGroups: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ContentChildren"],
    args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MAT_OPTGROUP"], {
      descendants: true
    }]
  }],
  panelClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  customTrigger: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ContentChild"],
    args: [MAT_SELECT_TRIGGER]
  }],
  placeholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  required: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  multiple: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  disableOptionCentering: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  compareWith: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  ariaLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
    args: ['aria-label']
  }],
  ariaLabelledby: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
    args: ['aria-labelledby']
  }],
  errorStateMatcher: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  typeaheadDebounceInterval: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  sortComparator: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
  }],
  openedChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
  }],
  _openedStream: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"],
    args: ['opened']
  }],
  _closedStream: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"],
    args: ['closed']
  }],
  selectionChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
  }],
  valueChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](MatSelect, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Component"],
    args: [{
      selector: 'mat-select',
      exportAs: 'matSelect',
      template: "<div cdk-overlay-origin\n     class=\"mat-select-trigger\"\n     (click)=\"toggle()\"\n     #origin=\"cdkOverlayOrigin\"\n     #trigger>\n  <div class=\"mat-select-value\" [ngSwitch]=\"empty\" [attr.id]=\"_valueId\">\n    <span class=\"mat-select-placeholder\" *ngSwitchCase=\"true\">{{placeholder || '\\u00A0'}}</span>\n    <span class=\"mat-select-value-text\" *ngSwitchCase=\"false\" [ngSwitch]=\"!!customTrigger\">\n      <span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span>\n      <ng-content select=\"mat-select-trigger\" *ngSwitchCase=\"true\"></ng-content>\n    </span>\n  </div>\n\n  <div class=\"mat-select-arrow-wrapper\"><div class=\"mat-select-arrow\"></div></div>\n</div>\n\n<ng-template\n  cdk-connected-overlay\n  cdkConnectedOverlayLockPosition\n  cdkConnectedOverlayHasBackdrop\n  cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n  [cdkConnectedOverlayScrollStrategy]=\"_scrollStrategy\"\n  [cdkConnectedOverlayOrigin]=\"origin\"\n  [cdkConnectedOverlayOpen]=\"panelOpen\"\n  [cdkConnectedOverlayPositions]=\"_positions\"\n  [cdkConnectedOverlayMinWidth]=\"_triggerRect?.width!\"\n  [cdkConnectedOverlayOffsetY]=\"_offsetY\"\n  (backdropClick)=\"close()\"\n  (attach)=\"_onAttached()\"\n  (detach)=\"close()\">\n  <div class=\"mat-select-panel-wrap\" [@transformPanelWrap]>\n    <div\n      #panel\n      role=\"listbox\"\n      tabindex=\"-1\"\n      class=\"mat-select-panel {{ _getPanelTheme() }}\"\n      [attr.id]=\"id + '-panel'\"\n      [attr.aria-multiselectable]=\"multiple\"\n      [attr.aria-label]=\"ariaLabel || null\"\n      [attr.aria-labelledby]=\"_getPanelAriaLabelledby()\"\n      [ngClass]=\"panelClass\"\n      [@transformPanel]=\"multiple ? 'showing-multiple' : 'showing'\"\n      (@transformPanel.done)=\"_panelDoneAnimatingStream.next($event.toState)\"\n      [style.transformOrigin]=\"_transformOrigin\"\n      [style.font-size.px]=\"_triggerFontSize\"\n      (keydown)=\"_handleKeydown($event)\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</ng-template>\n",
      inputs: ['disabled', 'disableRipple', 'tabIndex'],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ChangeDetectionStrategy"].OnPush,
      host: {
        'role': 'combobox',
        'aria-autocomplete': 'none',
        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult
        // to sync into g3, because of an outdated automated a11y check which flags it as an invalid
        // value. At some point we should try to switch it back to being `listbox`. When doing the
        // MDC-based `mat-select`, we can get away with starting it off as `listbox`.
        'aria-haspopup': 'true',
        'class': 'mat-select',
        '[attr.id]': 'id',
        '[attr.tabindex]': 'tabIndex',
        '[attr.aria-controls]': 'panelOpen ? id + "-panel" : null',
        '[attr.aria-expanded]': 'panelOpen',
        '[attr.aria-label]': 'ariaLabel || null',
        '[attr.aria-required]': 'required.toString()',
        '[attr.aria-disabled]': 'disabled.toString()',
        '[attr.aria-invalid]': 'errorState',
        '[attr.aria-describedby]': '_ariaDescribedby || null',
        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',
        '[class.mat-select-disabled]': 'disabled',
        '[class.mat-select-invalid]': 'errorState',
        '[class.mat-select-required]': 'required',
        '[class.mat-select-empty]': 'empty',
        '[class.mat-select-multiple]': 'multiple',
        '(keydown)': '_handleKeydown($event)',
        '(focus)': '_onFocus()',
        '(blur)': '_onBlur()'
      },
      animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel],
      providers: [{
        provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldControl"],
        useExisting: MatSelect
      }, {
        provide: _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MAT_OPTION_PARENT_COMPONENT"],
        useExisting: MatSelect
      }],
      styles: [".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\n"]
    }]
  }], function () {
    return [{
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_11__["ViewportRuler"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ChangeDetectorRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_13__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_17__["NgForm"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_17__["FormGroupDirective"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }]
    }, {
      type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormField"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MAT_FORM_FIELD"]]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_17__["NgControl"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Self"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Attribute"],
        args: ['tabindex']
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [MAT_SELECT_SCROLL_STRATEGY]
      }]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["LiveAnnouncer"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [MAT_SELECT_CONFIG]
      }]
    }];
  }, {
    ariaLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
      args: ['aria-label']
    }],
    openedChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
    }],
    _openedStream: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"],
      args: ['opened']
    }],
    _closedStream: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"],
      args: ['closed']
    }],
    selectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
    }],
    valueChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    disableOptionCentering: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    typeaheadDebounceInterval: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    placeholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    required: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    multiple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    compareWith: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    trigger: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ViewChild"],
      args: ['trigger']
    }],
    panel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ViewChild"],
      args: ['panel']
    }],
    overlayDir: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ViewChild"],
      args: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["CdkConnectedOverlay"]]
    }],
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ContentChildren"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOption"], {
        descendants: true
      }]
    }],
    optionGroups: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ContentChildren"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MAT_OPTGROUP"], {
        descendants: true
      }]
    }],
    panelClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    customTrigger: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ContentChild"],
      args: [MAT_SELECT_TRIGGER]
    }],
    ariaLabelledby: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
      args: ['aria-labelledby']
    }],
    errorStateMatcher: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }],
    sortComparator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatSelectModule = function MatSelectModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatSelectModule);
};

MatSelectModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineNgModule"]({
  type: MatSelectModule
});
MatSelectModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjector"]({
  factory: function MatSelectModule_Factory(t) {
    return new (t || MatSelectModule)();
  },
  providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_7__["CommonModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["OverlayModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOptionModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatCommonModule"]], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_11__["CdkScrollableModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOptionModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsetNgModuleScope"](MatSelectModule, {
    declarations: function declarations() {
      return [MatSelect, MatSelectTrigger];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_7__["CommonModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["OverlayModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOptionModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatCommonModule"]];
    },
    exports: function exports() {
      return [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_11__["CdkScrollableModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"], MatSelect, MatSelectTrigger, _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOptionModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatCommonModule"]];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](MatSelectModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["CommonModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_6__["OverlayModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOptionModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatCommonModule"]],
      exports: [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_11__["CdkScrollableModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"], MatSelect, MatSelectTrigger, _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatOptionModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["MatCommonModule"]],
      declarations: [MatSelect, MatSelectTrigger],
      providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "gMzh":
/*!***********************************************************!*\
  !*** ./src/app/pages/discussion/discussion.component.css ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "ihCf":
/*!***********************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js ***!
  \***********************************************************************/
/*! exports provided: AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutofillMonitor", function() { return AutofillMonitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkAutofill", function() { return CdkAutofill; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkTextareaAutosize", function() { return CdkTextareaAutosize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextFieldModule", function() { return TextFieldModule; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "ofXK");








/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Options to pass to the animationstart listener. */



var listenerOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["normalizePassiveListenerOptions"])({
  passive: true
});
/**
 * An injectable service that can be used to monitor the autofill state of an input.
 * Based on the following blog post:
 * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7
 */

var AutofillMonitor = /*#__PURE__*/function () {
  function AutofillMonitor(_platform, _ngZone) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AutofillMonitor);

    this._platform = _platform;
    this._ngZone = _ngZone;
    this._monitoredElements = new Map();
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AutofillMonitor, [{
    key: "monitor",
    value: function monitor(elementOrRef) {
      var _this = this;

      if (!this._platform.isBrowser) {
        return rxjs__WEBPACK_IMPORTED_MODULE_5__["EMPTY"];
      }

      var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_4__["coerceElement"])(elementOrRef);

      var info = this._monitoredElements.get(element);

      if (info) {
        return info.subject;
      }

      var result = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
      var cssClass = 'cdk-text-field-autofilled';

      var listener = function listener(event) {
        // Animation events fire on initial element render, we check for the presence of the autofill
        // CSS class to make sure this is a real change in state, not just the initial render before
        // we fire off events.
        if (event.animationName === 'cdk-text-field-autofill-start' && !element.classList.contains(cssClass)) {
          element.classList.add(cssClass);

          _this._ngZone.run(function () {
            return result.next({
              target: event.target,
              isAutofilled: true
            });
          });
        } else if (event.animationName === 'cdk-text-field-autofill-end' && element.classList.contains(cssClass)) {
          element.classList.remove(cssClass);

          _this._ngZone.run(function () {
            return result.next({
              target: event.target,
              isAutofilled: false
            });
          });
        }
      };

      this._ngZone.runOutsideAngular(function () {
        element.addEventListener('animationstart', listener, listenerOptions);
        element.classList.add('cdk-text-field-autofill-monitored');
      });

      this._monitoredElements.set(element, {
        subject: result,
        unlisten: function unlisten() {
          element.removeEventListener('animationstart', listener, listenerOptions);
        }
      });

      return result;
    }
  }, {
    key: "stopMonitoring",
    value: function stopMonitoring(elementOrRef) {
      var element = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_4__["coerceElement"])(elementOrRef);

      var info = this._monitoredElements.get(element);

      if (info) {
        info.unlisten();
        info.subject.complete();
        element.classList.remove('cdk-text-field-autofill-monitored');
        element.classList.remove('cdk-text-field-autofilled');

        this._monitoredElements.delete(element);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var _this2 = this;

      this._monitoredElements.forEach(function (_info, element) {
        return _this2.stopMonitoring(element);
      });
    }
  }]);

  return AutofillMonitor;
}();

AutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) {
  return new (t || AutofillMonitor)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]));
};

AutofillMonitor.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"])({
  factory: function AutofillMonitor_Factory() {
    return new AutofillMonitor(Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]));
  },
  token: AutofillMonitor,
  providedIn: "root"
});

AutofillMonitor.ctorParameters = function () {
  return [{
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["Platform"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](AutofillMonitor, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["Platform"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
    }];
  }, null);
})();
/** A directive that can be used to monitor the autofill state of an input. */


var CdkAutofill = /*#__PURE__*/function () {
  function CdkAutofill(_elementRef, _autofillMonitor) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CdkAutofill);

    this._elementRef = _elementRef;
    this._autofillMonitor = _autofillMonitor;
    /** Emits when the autofill state of the element changes. */

    this.cdkAutofill = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(CdkAutofill, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this3 = this;

      this._autofillMonitor.monitor(this._elementRef).subscribe(function (event) {
        return _this3.cdkAutofill.emit(event);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._autofillMonitor.stopMonitoring(this._elementRef);
    }
  }]);

  return CdkAutofill;
}();

CdkAutofill.ɵfac = function CdkAutofill_Factory(t) {
  return new (t || CdkAutofill)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](AutofillMonitor));
};

CdkAutofill.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
  type: CdkAutofill,
  selectors: [["", "cdkAutofill", ""]],
  outputs: {
    cdkAutofill: "cdkAutofill"
  }
});

CdkAutofill.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
  }, {
    type: AutofillMonitor
  }];
};

CdkAutofill.propDecorators = {
  cdkAutofill: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](CdkAutofill, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
    args: [{
      selector: '[cdkAutofill]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
    }, {
      type: AutofillMonitor
    }];
  }, {
    cdkAutofill: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Directive to automatically resize a textarea to fit its content. */


var CdkTextareaAutosize = /*#__PURE__*/function () {
  function CdkTextareaAutosize(_elementRef, _platform, _ngZone,
  /** @breaking-change 11.0.0 make document required */
  document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, CdkTextareaAutosize);

    this._elementRef = _elementRef;
    this._platform = _platform;
    this._ngZone = _ngZone;
    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
    this._enabled = true;
    /**
     * Value of minRows as of last resize. If the minRows has decreased, the
     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight
     * does not have the same problem because it does not affect the textarea's scrollHeight.
     */

    this._previousMinRows = -1;
    this._document = document;
    this._textareaElement = this._elementRef.nativeElement;
    this._measuringClass = _platform.FIREFOX ? 'cdk-textarea-autosize-measuring-firefox' : 'cdk-textarea-autosize-measuring';
  }
  /** Minimum amount of rows in the textarea. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(CdkTextareaAutosize, [{
    key: "minRows",
    get: function get() {
      return this._minRows;
    },
    set: function set(value) {
      this._minRows = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_4__["coerceNumberProperty"])(value);

      this._setMinHeight();
    }
    /** Maximum amount of rows in the textarea. */

  }, {
    key: "maxRows",
    get: function get() {
      return this._maxRows;
    },
    set: function set(value) {
      this._maxRows = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_4__["coerceNumberProperty"])(value);

      this._setMaxHeight();
    }
    /** Whether autosizing is enabled or not */

  }, {
    key: "enabled",
    get: function get() {
      return this._enabled;
    },
    set: function set(value) {
      value = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_4__["coerceBooleanProperty"])(value); // Only act if the actual value changed. This specifically helps to not run
      // resizeToFitContent too early (i.e. before ngAfterViewInit)

      if (this._enabled !== value) {
        (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();
      }
    }
    /** Sets the minimum height of the textarea as determined by minRows. */

  }, {
    key: "_setMinHeight",
    value: function _setMinHeight() {
      var minHeight = this.minRows && this._cachedLineHeight ? "".concat(this.minRows * this._cachedLineHeight, "px") : null;

      if (minHeight) {
        this._textareaElement.style.minHeight = minHeight;
      }
    }
    /** Sets the maximum height of the textarea as determined by maxRows. */

  }, {
    key: "_setMaxHeight",
    value: function _setMaxHeight() {
      var maxHeight = this.maxRows && this._cachedLineHeight ? "".concat(this.maxRows * this._cachedLineHeight, "px") : null;

      if (maxHeight) {
        this._textareaElement.style.maxHeight = maxHeight;
      }
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this4 = this;

      if (this._platform.isBrowser) {
        // Remember the height which we started with in case autosizing is disabled
        this._initialHeight = this._textareaElement.style.height;
        this.resizeToFitContent();

        this._ngZone.runOutsideAngular(function () {
          var window = _this4._getWindow();

          Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["fromEvent"])(window, 'resize').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["auditTime"])(16), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["takeUntil"])(_this4._destroyed)).subscribe(function () {
            return _this4.resizeToFitContent(true);
          });
        });
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroyed.next();

      this._destroyed.complete();
    }
    /**
     * Cache the height of a single-row textarea if it has not already been cached.
     *
     * We need to know how large a single "row" of a textarea is in order to apply minRows and
     * maxRows. For the initial version, we will assume that the height of a single line in the
     * textarea does not ever change.
     */

  }, {
    key: "_cacheTextareaLineHeight",
    value: function _cacheTextareaLineHeight() {
      if (this._cachedLineHeight) {
        return;
      } // Use a clone element because we have to override some styles.


      var textareaClone = this._textareaElement.cloneNode(false);

      textareaClone.rows = 1; // Use `position: absolute` so that this doesn't cause a browser layout and use
      // `visibility: hidden` so that nothing is rendered. Clear any other styles that
      // would affect the height.

      textareaClone.style.position = 'absolute';
      textareaClone.style.visibility = 'hidden';
      textareaClone.style.border = 'none';
      textareaClone.style.padding = '0';
      textareaClone.style.height = '';
      textareaClone.style.minHeight = '';
      textareaClone.style.maxHeight = ''; // In Firefox it happens that textarea elements are always bigger than the specified amount
      // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.
      // As a workaround that removes the extra space for the scrollbar, we can just set overflow
      // to hidden. This ensures that there is no invalid calculation of the line height.
      // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654

      textareaClone.style.overflow = 'hidden';

      this._textareaElement.parentNode.appendChild(textareaClone);

      this._cachedLineHeight = textareaClone.clientHeight;

      this._textareaElement.parentNode.removeChild(textareaClone); // Min and max heights have to be re-calculated if the cached line height changes


      this._setMinHeight();

      this._setMaxHeight();
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      if (this._platform.isBrowser) {
        this.resizeToFitContent();
      }
    }
    /**
     * Resize the textarea to fit its content.
     * @param force Whether to force a height recalculation. By default the height will be
     *    recalculated only if the value changed since the last call.
     */

  }, {
    key: "resizeToFitContent",
    value: function resizeToFitContent() {
      var _this5 = this;

      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      // If autosizing is disabled, just skip everything else
      if (!this._enabled) {
        return;
      }

      this._cacheTextareaLineHeight(); // If we haven't determined the line-height yet, we know we're still hidden and there's no point
      // in checking the height of the textarea.


      if (!this._cachedLineHeight) {
        return;
      }

      var textarea = this._elementRef.nativeElement;
      var value = textarea.value; // Only resize if the value or minRows have changed since these calculations can be expensive.

      if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {
        return;
      }

      var placeholderText = textarea.placeholder; // Reset the textarea height to auto in order to shrink back to its default size.
      // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.
      // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight
      // value. To ensure that the scrollHeight is not bigger than the content, the placeholders
      // need to be removed temporarily.

      textarea.classList.add(this._measuringClass);
      textarea.placeholder = ''; // The measuring class includes a 2px padding to workaround an issue with Chrome,
      // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).

      var height = textarea.scrollHeight - 4; // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.

      textarea.style.height = "".concat(height, "px");
      textarea.classList.remove(this._measuringClass);
      textarea.placeholder = placeholderText;

      this._ngZone.runOutsideAngular(function () {
        if (typeof requestAnimationFrame !== 'undefined') {
          requestAnimationFrame(function () {
            return _this5._scrollToCaretPosition(textarea);
          });
        } else {
          setTimeout(function () {
            return _this5._scrollToCaretPosition(textarea);
          });
        }
      });

      this._previousValue = value;
      this._previousMinRows = this._minRows;
    }
    /**
     * Resets the textarea to its original size
     */

  }, {
    key: "reset",
    value: function reset() {
      // Do not try to change the textarea, if the initialHeight has not been determined yet
      // This might potentially remove styles when reset() is called before ngAfterViewInit
      if (this._initialHeight !== undefined) {
        this._textareaElement.style.height = this._initialHeight;
      }
    } // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order
    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we
    // can move this back into `host`.
    // tslint:disable:no-host-decorator-in-concrete

  }, {
    key: "_noopInputHandler",
    value: function _noopInputHandler() {// no-op handler that ensures we're running change detection on input events.
    }
    /** Access injected document if available or fallback to global document reference */

  }, {
    key: "_getDocument",
    value: function _getDocument() {
      return this._document || document;
    }
    /** Use defaultView of injected document if available or fallback to global window reference */

  }, {
    key: "_getWindow",
    value: function _getWindow() {
      var doc = this._getDocument();

      return doc.defaultView || window;
    }
    /**
     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will
     * prevent it from scrolling to the caret position. We need to re-set the selection
     * in order for it to scroll to the proper position.
     */

  }, {
    key: "_scrollToCaretPosition",
    value: function _scrollToCaretPosition(textarea) {
      var selectionStart = textarea.selectionStart,
          selectionEnd = textarea.selectionEnd;

      var document = this._getDocument(); // IE will throw an "Unspecified error" if we try to set the selection range after the
      // element has been removed from the DOM. Assert that the directive hasn't been destroyed
      // between the time we requested the animation frame and when it was executed.
      // Also note that we have to assert that the textarea is focused before we set the
      // selection range. Setting the selection range on a non-focused textarea will cause
      // it to receive focus on IE and Edge.


      if (!this._destroyed.isStopped && document.activeElement === textarea) {
        textarea.setSelectionRange(selectionStart, selectionEnd);
      }
    }
  }]);

  return CdkTextareaAutosize;
}();

CdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) {
  return new (t || CdkTextareaAutosize)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"], 8));
};

CdkTextareaAutosize.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineDirective"]({
  type: CdkTextareaAutosize,
  selectors: [["textarea", "cdkTextareaAutosize", ""]],
  hostAttrs: ["rows", "1", 1, "cdk-textarea-autosize"],
  hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("input", function CdkTextareaAutosize_input_HostBindingHandler() {
        return ctx._noopInputHandler();
      });
    }
  },
  inputs: {
    minRows: ["cdkAutosizeMinRows", "minRows"],
    maxRows: ["cdkAutosizeMaxRows", "maxRows"],
    enabled: ["cdkTextareaAutosize", "enabled"]
  },
  exportAs: ["cdkTextareaAutosize"]
});

CdkTextareaAutosize.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["Platform"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }];
};

CdkTextareaAutosize.propDecorators = {
  minRows: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
    args: ['cdkAutosizeMinRows']
  }],
  maxRows: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
    args: ['cdkAutosizeMaxRows']
  }],
  enabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
    args: ['cdkTextareaAutosize']
  }],
  _noopInputHandler: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
    args: ['input']
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](CdkTextareaAutosize, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Directive"],
    args: [{
      selector: 'textarea[cdkTextareaAutosize]',
      exportAs: 'cdkTextareaAutosize',
      host: {
        'class': 'cdk-textarea-autosize',
        // Textarea elements that have the directive applied should have a single row by default.
        // Browsers normally show two rows by default and therefore this limits the minRows binding.
        'rows': '1'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ElementRef"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["Platform"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }];
  }, {
    minRows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
      args: ['cdkAutosizeMinRows']
    }],
    maxRows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
      args: ['cdkAutosizeMaxRows']
    }],
    enabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"],
      args: ['cdkTextareaAutosize']
    }],
    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order
    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we
    // can move this back into `host`.
    // tslint:disable:no-host-decorator-in-concrete
    _noopInputHandler: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["HostListener"],
      args: ['input']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var TextFieldModule = function TextFieldModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, TextFieldModule);
};

TextFieldModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({
  type: TextFieldModule
});
TextFieldModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({
  factory: function TextFieldModule_Factory(t) {
    return new (t || TextFieldModule)();
  },
  imports: [[_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["PlatformModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](TextFieldModule, {
    declarations: function declarations() {
      return [CdkAutofill, CdkTextareaAutosize];
    },
    imports: function imports() {
      return [_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["PlatformModule"]];
    },
    exports: function exports() {
      return [CdkAutofill, CdkTextareaAutosize];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵsetClassMetadata"](TextFieldModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["NgModule"],
    args: [{
      declarations: [CdkAutofill, CdkTextareaAutosize],
      imports: [_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_2__["PlatformModule"]],
      exports: [CdkAutofill, CdkTextareaAutosize]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "iiaH":
/*!*************************************************!*\
  !*** ./src/app/shared/services/data.service.ts ***!
  \*************************************************/
/*! exports provided: DataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataService", function() { return DataService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "qCKp");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var DataService = /** @class */ (function () {
    function DataService() {
        this.latitude = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.longitude = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.users = ['member', 'fellow', 'admin'];
        this.user = this.users[2];
    }
    DataService.ctorParameters = function () { return []; };
    DataService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [])
    ], DataService);
    return DataService;
}());



/***/ }),

/***/ "kez0":
/*!*******************************************************!*\
  !*** ./src/app/pages/projects/projects.component.css ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".add{\n    background-color: #3b6e7f;\n    color: #ffffff;\n    text-align: center;\n    height: 120px;\n    width: 120px;\n}\n.add h1{\n    color: #ffffff;\n    text-align: center;\n    padding-top: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJvamVjdHMvcHJvamVjdHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2plY3RzL3Byb2plY3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRke1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzYjZlN2Y7XG4gICAgY29sb3I6ICNmZmZmZmY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGhlaWdodDogMTIwcHg7XG4gICAgd2lkdGg6IDEyMHB4O1xufVxuLmFkZCBoMXtcbiAgICBjb2xvcjogI2ZmZmZmZjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDIwcHg7XG59Il19 */");

/***/ }),

/***/ "kmnG":
/*!****************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js ***!
  \****************************************************************************/
/*! exports provided: MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_ERROR", function() { return MAT_ERROR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_FORM_FIELD", function() { return MAT_FORM_FIELD; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_FORM_FIELD_DEFAULT_OPTIONS", function() { return MAT_FORM_FIELD_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_PREFIX", function() { return MAT_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SUFFIX", function() { return MAT_SUFFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatError", function() { return MatError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatFormField", function() { return MatFormField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatFormFieldControl", function() { return MatFormFieldControl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatFormFieldModule", function() { return MatFormFieldModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatHint", function() { return MatHint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatLabel", function() { return MatLabel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatPlaceholder", function() { return MatPlaceholder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatPrefix", function() { return MatPrefix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSuffix", function() { return MatSuffix; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MAT_HINT", function() { return _MAT_HINT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatFormFieldDuplicatedHintError", function() { return getMatFormFieldDuplicatedHintError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatFormFieldMissingControlError", function() { return getMatFormFieldMissingControlError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatFormFieldPlaceholderConflictError", function() { return getMatFormFieldPlaceholderConflictError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matFormFieldAnimations", function() { return matFormFieldAnimations; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/observers */ "GU7r");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/animations */ "R0Ic");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */






var _c0 = ["underline"];
var _c1 = ["connectionContainer"];
var _c2 = ["inputContainer"];
var _c3 = ["label"];

function MatFormField_ng_container_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](2, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](3, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](4, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "div", 18);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](6, "div", 15);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](7, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](8, "div", 17);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainerEnd"]();
  }
}

function MatFormField_div_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 19);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](1, 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }
}

function MatFormField_label_9_ng_container_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainerStart"](0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](1, 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](2, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainerEnd"]();
  }

  if (rf & 2) {
    var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx_r10._control.placeholder);
  }
}

function MatFormField_label_9_ng_content_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](0, 3, ["*ngSwitchCase", "true"]);
  }
}

function MatFormField_label_9_span_4_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "span", 23);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1, " *");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }
}

function MatFormField_label_9_Template(rf, ctx) {
  if (rf & 1) {
    var _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "label", 20, 21);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("cdkObserveContent", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r14);
      var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
      return ctx_r13.updateOutlineGap();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](2, MatFormField_label_9_ng_container_2_Template, 4, 1, "ng-container", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](3, MatFormField_label_9_ng_content_3_Template, 1, 0, "ng-content", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](4, MatFormField_label_9_span_4_Template, 2, 0, "span", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-empty", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())("mat-form-field-empty", ctx_r4._control.empty && !ctx_r4._shouldAlwaysFloat())("mat-accent", ctx_r4.color == "accent")("mat-warn", ctx_r4.color == "warn");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("cdkObserveContentDisabled", ctx_r4.appearance != "outline")("id", ctx_r4._labelId)("ngSwitch", ctx_r4._hasLabel());
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("for", ctx_r4._control.id)("aria-owns", ctx_r4._control.id);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngSwitchCase", false);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngSwitchCase", true);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", !ctx_r4.hideRequiredMarker && ctx_r4._control.required && !ctx_r4._control.disabled);
  }
}

function MatFormField_div_10_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](1, 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }
}

function MatFormField_div_11_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 25, 26);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](2, "span", 27);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-accent", ctx_r6.color == "accent")("mat-warn", ctx_r6.color == "warn");
  }
}

function MatFormField_div_13_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](1, 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("@transitionMessages", ctx_r7._subscriptAnimationState);
  }
}

function MatFormField_div_14_div_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 31);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("id", ctx_r16._hintLabelId);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx_r16.hintLabel);
  }
}

function MatFormField_div_14_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 28);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](1, MatFormField_div_14_div_1_Template, 2, 2, "div", 29);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](2, 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](3, "div", 30);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](4, 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("@transitionMessages", ctx_r8._subscriptAnimationState);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx_r8.hintLabel);
  }
}

var _c4 = ["*", [["", "matPrefix", ""]], [["mat-placeholder"]], [["mat-label"]], [["", "matSuffix", ""]], [["mat-error"]], [["mat-hint", 3, "align", "end"]], [["mat-hint", "align", "end"]]];
var _c5 = ["*", "[matPrefix]", "mat-placeholder", "mat-label", "[matSuffix]", "mat-error", "mat-hint:not([align='end'])", "mat-hint[align='end']"];
var nextUniqueId = 0;
/**
 * Injection token that can be used to reference instances of `MatError`. It serves as
 * alternative token to the actual `MatError` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */

var MAT_ERROR = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatError');
/** Single error message to be shown underneath the form field. */

var MatError = function MatError() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatError);

  this.id = "mat-error-".concat(nextUniqueId++);
};

MatError.ɵfac = function MatError_Factory(t) {
  return new (t || MatError)();
};

MatError.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatError,
  selectors: [["mat-error"]],
  hostAttrs: ["role", "alert", 1, "mat-error"],
  hostVars: 1,
  hostBindings: function MatError_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("id", ctx.id);
    }
  },
  inputs: {
    id: "id"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_ERROR,
    useExisting: MatError
  }])]
});
MatError.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatError, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-error',
      host: {
        'class': 'mat-error',
        'role': 'alert',
        '[attr.id]': 'id'
      },
      providers: [{
        provide: MAT_ERROR,
        useExisting: MatError
      }]
    }]
  }], function () {
    return [];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Animations used by the MatFormField.
 * @docs-private
 */


var matFormFieldAnimations = {
  /** Animation that transitions the form field's error and hint messages. */
  transitionMessages: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["trigger"])('transitionMessages', [// TODO(mmalerba): Use angular animations for label animation as well.
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["state"])('enter', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["style"])({
    opacity: 1,
    transform: 'translateY(0%)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["transition"])('void => enter', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["style"])({
    opacity: 0,
    transform: 'translateY(-100%)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["animate"])('300ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** An interface which allows a control to work inside of a `MatFormField`. */

var MatFormFieldControl = function MatFormFieldControl() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFormFieldControl);
};

MatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) {
  return new (t || MatFormFieldControl)();
};

MatFormFieldControl.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatFormFieldControl
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatFormFieldControl, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @docs-private */


function getMatFormFieldPlaceholderConflictError() {
  return Error('Placeholder attribute and child element were both specified.');
}
/** @docs-private */


function getMatFormFieldDuplicatedHintError(align) {
  return Error("A hint was already declared for 'align=\"".concat(align, "\"'."));
}
/** @docs-private */


function getMatFormFieldMissingControlError() {
  return Error('mat-form-field must contain a MatFormFieldControl.');
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var nextUniqueId$1 = 0;
/**
 * Injection token that can be used to reference instances of `MatHint`. It serves as
 * alternative token to the actual `MatHint` class which could cause unnecessary
 * retention of the class and its directive metadata.
 *
 * *Note*: This is not part of the public API as the MDC-based form-field will not
 * need a lightweight token for `MatHint` and we want to reduce breaking changes.
 */

var _MAT_HINT = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatHint');
/** Hint text to be shown underneath the form field control. */


var MatHint = function MatHint() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatHint);

  /** Whether to align the hint label at the start or end of the line. */
  this.align = 'start';
  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */

  this.id = "mat-hint-".concat(nextUniqueId$1++);
};

MatHint.ɵfac = function MatHint_Factory(t) {
  return new (t || MatHint)();
};

MatHint.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatHint,
  selectors: [["mat-hint"]],
  hostAttrs: [1, "mat-hint"],
  hostVars: 4,
  hostBindings: function MatHint_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("id", ctx.id)("align", null);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-right", ctx.align == "end");
    }
  },
  inputs: {
    align: "align",
    id: "id"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _MAT_HINT,
    useExisting: MatHint
  }])]
});
MatHint.propDecorators = {
  align: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatHint, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-hint',
      host: {
        'class': 'mat-hint',
        '[class.mat-right]': 'align == "end"',
        '[attr.id]': 'id',
        // Remove align attribute to prevent it from interfering with layout.
        '[attr.align]': 'null'
      },
      providers: [{
        provide: _MAT_HINT,
        useExisting: MatHint
      }]
    }]
  }], function () {
    return [];
  }, {
    align: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** The floating label for a `mat-form-field`. */


var MatLabel = function MatLabel() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatLabel);
};

MatLabel.ɵfac = function MatLabel_Factory(t) {
  return new (t || MatLabel)();
};

MatLabel.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatLabel,
  selectors: [["mat-label"]]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatLabel, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-label'
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The placeholder text for an `MatFormField`.
 * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the
 *     placeholder.
 * @breaking-change 8.0.0
 */


var MatPlaceholder = function MatPlaceholder() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatPlaceholder);
};

MatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) {
  return new (t || MatPlaceholder)();
};

MatPlaceholder.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatPlaceholder,
  selectors: [["mat-placeholder"]]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatPlaceholder, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-placeholder'
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Injection token that can be used to reference instances of `MatPrefix`. It serves as
 * alternative token to the actual `MatPrefix` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */


var MAT_PREFIX = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatPrefix');
/** Prefix to be placed in front of the form field. */

var MatPrefix = function MatPrefix() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatPrefix);
};

MatPrefix.ɵfac = function MatPrefix_Factory(t) {
  return new (t || MatPrefix)();
};

MatPrefix.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatPrefix,
  selectors: [["", "matPrefix", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_PREFIX,
    useExisting: MatPrefix
  }])]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatPrefix, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matPrefix]',
      providers: [{
        provide: MAT_PREFIX,
        useExisting: MatPrefix
      }]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Injection token that can be used to reference instances of `MatSuffix`. It serves as
 * alternative token to the actual `MatSuffix` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */


var MAT_SUFFIX = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatSuffix');
/** Suffix to be placed at the end of the form field. */

var MatSuffix = function MatSuffix() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatSuffix);
};

MatSuffix.ɵfac = function MatSuffix_Factory(t) {
  return new (t || MatSuffix)();
};

MatSuffix.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatSuffix,
  selectors: [["", "matSuffix", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_SUFFIX,
    useExisting: MatSuffix
  }])]
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatSuffix, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matSuffix]',
      providers: [{
        provide: MAT_SUFFIX,
        useExisting: MatSuffix
      }]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var nextUniqueId$2 = 0;
var floatingLabelScale = 0.75;
var outlineGapPadding = 5;
/**
 * Boilerplate for applying mixins to MatFormField.
 * @docs-private
 */

var MatFormFieldBase = function MatFormFieldBase(_elementRef) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFormFieldBase);

  this._elementRef = _elementRef;
};
/**
 * Base class to which we're applying the form field mixins.
 * @docs-private
 */


var _MatFormFieldMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinColor"])(MatFormFieldBase, 'primary');
/**
 * Injection token that can be used to configure the
 * default options for all form field within an app.
 */


var MAT_FORM_FIELD_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MAT_FORM_FIELD_DEFAULT_OPTIONS');
/**
 * Injection token that can be used to inject an instances of `MatFormField`. It serves
 * as alternative token to the actual `MatFormField` class which would cause unnecessary
 * retention of the `MatFormField` class and its component metadata.
 */

var MAT_FORM_FIELD = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatFormField');
/** Container for form controls that applies Material Design styling and behavior. */

var MatFormField = /*#__PURE__*/function (_MatFormFieldMixinBas) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(MatFormField, _MatFormFieldMixinBas);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(MatFormField);

  function MatFormField(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {
    var _this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFormField);

    _this = _super.call(this, _elementRef);
    _this._elementRef = _elementRef;
    _this._changeDetectorRef = _changeDetectorRef;
    _this._dir = _dir;
    _this._defaults = _defaults;
    _this._platform = _platform;
    _this._ngZone = _ngZone;
    /**
     * Whether the outline gap needs to be calculated
     * immediately on the next change detection run.
     */

    _this._outlineGapCalculationNeededImmediately = false;
    /** Whether the outline gap needs to be calculated next time the zone has stabilized. */

    _this._outlineGapCalculationNeededOnStable = false;
    _this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_11__["Subject"]();
    /** Override for the logic that disables the label animation in certain cases. */

    _this._showAlwaysAnimate = false;
    /** State of the mat-hint and mat-error animations. */

    _this._subscriptAnimationState = '';
    _this._hintLabel = ''; // Unique id for the hint label.

    _this._hintLabelId = "mat-hint-".concat(nextUniqueId$2++); // Unique id for the label element.

    _this._labelId = "mat-form-field-label-".concat(nextUniqueId$2++);
    _this._labelOptions = labelOptions ? labelOptions : {};
    _this.floatLabel = _this._getDefaultFloatLabelState();
    _this._animationsEnabled = _animationMode !== 'NoopAnimations'; // Set the default through here so we invoke the setter on the first run.

    _this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';
    _this._hideRequiredMarker = _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;
    return _this;
  }
  /** The form-field appearance style. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatFormField, [{
    key: "appearance",
    get: function get() {
      return this._appearance;
    },
    set: function set(value) {
      var oldValue = this._appearance;
      this._appearance = value || this._defaults && this._defaults.appearance || 'legacy';

      if (this._appearance === 'outline' && oldValue !== value) {
        this._outlineGapCalculationNeededOnStable = true;
      }
    }
    /** Whether the required marker should be hidden. */

  }, {
    key: "hideRequiredMarker",
    get: function get() {
      return this._hideRequiredMarker;
    },
    set: function set(value) {
      this._hideRequiredMarker = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_10__["coerceBooleanProperty"])(value);
    }
    /** Whether the floating label should always float or not. */

  }, {
    key: "_shouldAlwaysFloat",
    value: function _shouldAlwaysFloat() {
      return this.floatLabel === 'always' && !this._showAlwaysAnimate;
    }
    /** Whether the label can float or not. */

  }, {
    key: "_canLabelFloat",
    value: function _canLabelFloat() {
      return this.floatLabel !== 'never';
    }
    /** Text for the form field hint. */

  }, {
    key: "hintLabel",
    get: function get() {
      return this._hintLabel;
    },
    set: function set(value) {
      this._hintLabel = value;

      this._processHints();
    }
    /**
     * Whether the label should always float, never float or float as the user types.
     *
     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a
     * way to make the floating label emulate the behavior of a standard input placeholder. However
     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy
     * appearances the `never` option has been disabled in favor of just using the placeholder.
     */

  }, {
    key: "floatLabel",
    get: function get() {
      return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;
    },
    set: function set(value) {
      if (value !== this._floatLabel) {
        this._floatLabel = value || this._getDefaultFloatLabelState();

        this._changeDetectorRef.markForCheck();
      }
    }
  }, {
    key: "_control",
    get: function get() {
      // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.
      //  We should clean this up once Ivy is the default renderer.
      return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;
    },
    set: function set(value) {
      this._explicitFormFieldControl = value;
    }
    /**
     * Gets the id of the label element. If no label is present, returns `null`.
     */

  }, {
    key: "getLabelId",
    value: function getLabelId() {
      return this._hasFloatingLabel() ? this._labelId : null;
    }
    /**
     * Gets an ElementRef for the element that a overlay attached to the form-field should be
     * positioned relative to.
     */

  }, {
    key: "getConnectedOverlayOrigin",
    value: function getConnectedOverlayOrigin() {
      return this._connectionContainerRef || this._elementRef;
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this2 = this;

      this._validateControlChild();

      var control = this._control;

      if (control.controlType) {
        this._elementRef.nativeElement.classList.add("mat-form-field-type-".concat(control.controlType));
      } // Subscribe to changes in the child control state in order to update the form field UI.


      control.stateChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["startWith"])(null)).subscribe(function () {
        _this2._validatePlaceholders();

        _this2._syncDescribedByIds();

        _this2._changeDetectorRef.markForCheck();
      }); // Run change detection if the value changes.

      if (control.ngControl && control.ngControl.valueChanges) {
        control.ngControl.valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["takeUntil"])(this._destroyed)).subscribe(function () {
          return _this2._changeDetectorRef.markForCheck();
        });
      } // Note that we have to run outside of the `NgZone` explicitly,
      // in order to avoid throwing users into an infinite loop
      // if `zone-patch-rxjs` is included.


      this._ngZone.runOutsideAngular(function () {
        _this2._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["takeUntil"])(_this2._destroyed)).subscribe(function () {
          if (_this2._outlineGapCalculationNeededOnStable) {
            _this2.updateOutlineGap();
          }
        });
      }); // Run change detection and update the outline if the suffix or prefix changes.


      Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["merge"])(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(function () {
        _this2._outlineGapCalculationNeededOnStable = true;

        _this2._changeDetectorRef.markForCheck();
      }); // Re-validate when the number of hints changes.

      this._hintChildren.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["startWith"])(null)).subscribe(function () {
        _this2._processHints();

        _this2._changeDetectorRef.markForCheck();
      }); // Update the aria-described by when the number of errors changes.


      this._errorChildren.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["startWith"])(null)).subscribe(function () {
        _this2._syncDescribedByIds();

        _this2._changeDetectorRef.markForCheck();
      });

      if (this._dir) {
        this._dir.change.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["takeUntil"])(this._destroyed)).subscribe(function () {
          if (typeof requestAnimationFrame === 'function') {
            _this2._ngZone.runOutsideAngular(function () {
              requestAnimationFrame(function () {
                return _this2.updateOutlineGap();
              });
            });
          } else {
            _this2.updateOutlineGap();
          }
        });
      }
    }
  }, {
    key: "ngAfterContentChecked",
    value: function ngAfterContentChecked() {
      this._validateControlChild();

      if (this._outlineGapCalculationNeededImmediately) {
        this.updateOutlineGap();
      }
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      // Avoid animations on load.
      this._subscriptAnimationState = 'enter';

      this._changeDetectorRef.detectChanges();
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroyed.next();

      this._destroyed.complete();
    }
    /** Determines whether a class from the NgControl should be forwarded to the host element. */

  }, {
    key: "_shouldForward",
    value: function _shouldForward(prop) {
      var ngControl = this._control ? this._control.ngControl : null;
      return ngControl && ngControl[prop];
    }
  }, {
    key: "_hasPlaceholder",
    value: function _hasPlaceholder() {
      return !!(this._control && this._control.placeholder || this._placeholderChild);
    }
  }, {
    key: "_hasLabel",
    value: function _hasLabel() {
      return !!(this._labelChildNonStatic || this._labelChildStatic);
    }
  }, {
    key: "_shouldLabelFloat",
    value: function _shouldLabelFloat() {
      return this._canLabelFloat() && (this._control && this._control.shouldLabelFloat || this._shouldAlwaysFloat());
    }
  }, {
    key: "_hideControlPlaceholder",
    value: function _hideControlPlaceholder() {
      // In the legacy appearance the placeholder is promoted to a label if no label is given.
      return this.appearance === 'legacy' && !this._hasLabel() || this._hasLabel() && !this._shouldLabelFloat();
    }
  }, {
    key: "_hasFloatingLabel",
    value: function _hasFloatingLabel() {
      // In the legacy appearance the placeholder is promoted to a label if no label is given.
      return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();
    }
    /** Determines whether to display hints or errors. */

  }, {
    key: "_getDisplayedMessages",
    value: function _getDisplayedMessages() {
      return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';
    }
    /** Animates the placeholder up and locks it in position. */

  }, {
    key: "_animateAndLockLabel",
    value: function _animateAndLockLabel() {
      var _this3 = this;

      if (this._hasFloatingLabel() && this._canLabelFloat()) {
        // If animations are disabled, we shouldn't go in here,
        // because the `transitionend` will never fire.
        if (this._animationsEnabled && this._label) {
          this._showAlwaysAnimate = true;
          Object(rxjs__WEBPACK_IMPORTED_MODULE_11__["fromEvent"])(this._label.nativeElement, 'transitionend').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["take"])(1)).subscribe(function () {
            _this3._showAlwaysAnimate = false;
          });
        }

        this.floatLabel = 'always';

        this._changeDetectorRef.markForCheck();
      }
    }
    /**
     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control
     * or child element with the `mat-placeholder` directive).
     */

  }, {
    key: "_validatePlaceholders",
    value: function _validatePlaceholders() {
      if (this._control.placeholder && this._placeholderChild && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMatFormFieldPlaceholderConflictError();
      }
    }
    /** Does any extra processing that is required when handling the hints. */

  }, {
    key: "_processHints",
    value: function _processHints() {
      this._validateHints();

      this._syncDescribedByIds();
    }
    /**
     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the
     * attribute being considered as `align="start"`.
     */

  }, {
    key: "_validateHints",
    value: function _validateHints() {
      var _this4 = this;

      if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        var startHint;
        var endHint;

        this._hintChildren.forEach(function (hint) {
          if (hint.align === 'start') {
            if (startHint || _this4.hintLabel) {
              throw getMatFormFieldDuplicatedHintError('start');
            }

            startHint = hint;
          } else if (hint.align === 'end') {
            if (endHint) {
              throw getMatFormFieldDuplicatedHintError('end');
            }

            endHint = hint;
          }
        });
      }
    }
    /** Gets the default float label state. */

  }, {
    key: "_getDefaultFloatLabelState",
    value: function _getDefaultFloatLabelState() {
      return this._defaults && this._defaults.floatLabel || this._labelOptions.float || 'auto';
    }
    /**
     * Sets the list of element IDs that describe the child control. This allows the control to update
     * its `aria-describedby` attribute accordingly.
     */

  }, {
    key: "_syncDescribedByIds",
    value: function _syncDescribedByIds() {
      if (this._control) {
        var ids = []; // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.

        if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {
          ids.push.apply(ids, Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this._control.userAriaDescribedBy.split(' ')));
        }

        if (this._getDisplayedMessages() === 'hint') {
          var startHint = this._hintChildren ? this._hintChildren.find(function (hint) {
            return hint.align === 'start';
          }) : null;
          var endHint = this._hintChildren ? this._hintChildren.find(function (hint) {
            return hint.align === 'end';
          }) : null;

          if (startHint) {
            ids.push(startHint.id);
          } else if (this._hintLabel) {
            ids.push(this._hintLabelId);
          }

          if (endHint) {
            ids.push(endHint.id);
          }
        } else if (this._errorChildren) {
          ids.push.apply(ids, Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this._errorChildren.map(function (error) {
            return error.id;
          })));
        }

        this._control.setDescribedByIds(ids);
      }
    }
    /** Throws an error if the form field's control is missing. */

  }, {
    key: "_validateControlChild",
    value: function _validateControlChild() {
      if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMatFormFieldMissingControlError();
      }
    }
    /**
     * Updates the width and position of the gap in the outline. Only relevant for the outline
     * appearance.
     */

  }, {
    key: "updateOutlineGap",
    value: function updateOutlineGap() {
      var labelEl = this._label ? this._label.nativeElement : null;

      if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {
        return;
      }

      if (!this._platform.isBrowser) {
        // getBoundingClientRect isn't available on the server.
        return;
      } // If the element is not present in the DOM, the outline gap will need to be calculated
      // the next time it is checked and in the DOM.


      if (!this._isAttachedToDOM()) {
        this._outlineGapCalculationNeededImmediately = true;
        return;
      }

      var startWidth = 0;
      var gapWidth = 0;
      var container = this._connectionContainerRef.nativeElement;
      var startEls = container.querySelectorAll('.mat-form-field-outline-start');
      var gapEls = container.querySelectorAll('.mat-form-field-outline-gap');

      if (this._label && this._label.nativeElement.children.length) {
        var containerRect = container.getBoundingClientRect(); // If the container's width and height are zero, it means that the element is
        // invisible and we can't calculate the outline gap. Mark the element as needing
        // to be checked the next time the zone stabilizes. We can't do this immediately
        // on the next change detection, because even if the element becomes visible,
        // the `ClientRect` won't be reclaculated immediately. We reset the
        // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.

        if (containerRect.width === 0 && containerRect.height === 0) {
          this._outlineGapCalculationNeededOnStable = true;
          this._outlineGapCalculationNeededImmediately = false;
          return;
        }

        var containerStart = this._getStartEnd(containerRect);

        var labelChildren = labelEl.children;

        var labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());

        var labelWidth = 0;

        for (var i = 0; i < labelChildren.length; i++) {
          labelWidth += labelChildren[i].offsetWidth;
        }

        startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;
        gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;
      }

      for (var _i = 0; _i < startEls.length; _i++) {
        startEls[_i].style.width = "".concat(startWidth, "px");
      }

      for (var _i2 = 0; _i2 < gapEls.length; _i2++) {
        gapEls[_i2].style.width = "".concat(gapWidth, "px");
      }

      this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately = false;
    }
    /** Gets the start end of the rect considering the current directionality. */

  }, {
    key: "_getStartEnd",
    value: function _getStartEnd(rect) {
      return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;
    }
    /** Checks whether the form field is attached to the DOM. */

  }, {
    key: "_isAttachedToDOM",
    value: function _isAttachedToDOM() {
      var element = this._elementRef.nativeElement;

      if (element.getRootNode) {
        var rootNode = element.getRootNode(); // If the element is inside the DOM the root node will be either the document
        // or the closest shadow root, otherwise it'll be the element itself.

        return rootNode && rootNode !== element;
      } // Otherwise fall back to checking if it's in the document. This doesn't account for
      // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.


      return document.documentElement.contains(element);
    }
  }]);

  return MatFormField;
}(_MatFormFieldMixinBase);

MatFormField.ɵfac = function MatFormField_Factory(t) {
  return new (t || MatFormField)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_LABEL_GLOBAL_OPTIONS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_15__["ANIMATION_MODULE_TYPE"], 8));
};

MatFormField.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatFormField,
  selectors: [["mat-form-field"]],
  contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MatFormFieldControl, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵstaticContentQuery"](dirIndex, MatFormFieldControl, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MatLabel, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵstaticContentQuery"](dirIndex, MatLabel, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MatPlaceholder, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MAT_ERROR, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, _MAT_HINT, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MAT_PREFIX, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MAT_SUFFIX, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._controlNonStatic = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._controlStatic = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._labelChildNonStatic = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._labelChildStatic = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._placeholderChild = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._errorChildren = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._hintChildren = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._prefixChildren = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._suffixChildren = _t);
    }
  },
  viewQuery: function MatFormField_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵviewQuery"](_c0, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵstaticViewQuery"](_c1, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵviewQuery"](_c2, true);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵviewQuery"](_c3, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx.underlineRef = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._connectionContainerRef = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._inputContainerRef = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._label = _t.first);
    }
  },
  hostAttrs: [1, "mat-form-field"],
  hostVars: 44,
  hostBindings: function MatFormField_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-form-field-appearance-standard", ctx.appearance == "standard")("mat-form-field-appearance-fill", ctx.appearance == "fill")("mat-form-field-appearance-outline", ctx.appearance == "outline")("mat-form-field-appearance-legacy", ctx.appearance == "legacy")("mat-form-field-invalid", ctx._control.errorState)("mat-form-field-can-float", ctx._canLabelFloat())("mat-form-field-should-float", ctx._shouldLabelFloat())("mat-form-field-has-label", ctx._hasFloatingLabel())("mat-form-field-hide-placeholder", ctx._hideControlPlaceholder())("mat-form-field-disabled", ctx._control.disabled)("mat-form-field-autofilled", ctx._control.autofilled)("mat-focused", ctx._control.focused)("mat-accent", ctx.color == "accent")("mat-warn", ctx.color == "warn")("ng-untouched", ctx._shouldForward("untouched"))("ng-touched", ctx._shouldForward("touched"))("ng-pristine", ctx._shouldForward("pristine"))("ng-dirty", ctx._shouldForward("dirty"))("ng-valid", ctx._shouldForward("valid"))("ng-invalid", ctx._shouldForward("invalid"))("ng-pending", ctx._shouldForward("pending"))("_mat-animation-noopable", !ctx._animationsEnabled);
    }
  },
  inputs: {
    color: "color",
    floatLabel: "floatLabel",
    appearance: "appearance",
    hideRequiredMarker: "hideRequiredMarker",
    hintLabel: "hintLabel"
  },
  exportAs: ["matFormField"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_FORM_FIELD,
    useExisting: MatFormField
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c5,
  decls: 15,
  vars: 8,
  consts: [[1, "mat-form-field-wrapper"], [1, "mat-form-field-flex", 3, "click"], ["connectionContainer", ""], [4, "ngIf"], ["class", "mat-form-field-prefix", 4, "ngIf"], [1, "mat-form-field-infix"], ["inputContainer", ""], [1, "mat-form-field-label-wrapper"], ["class", "mat-form-field-label", 3, "cdkObserveContentDisabled", "id", "mat-empty", "mat-form-field-empty", "mat-accent", "mat-warn", "ngSwitch", "cdkObserveContent", 4, "ngIf"], ["class", "mat-form-field-suffix", 4, "ngIf"], ["class", "mat-form-field-underline", 4, "ngIf"], [1, "mat-form-field-subscript-wrapper", 3, "ngSwitch"], [4, "ngSwitchCase"], ["class", "mat-form-field-hint-wrapper", 4, "ngSwitchCase"], [1, "mat-form-field-outline"], [1, "mat-form-field-outline-start"], [1, "mat-form-field-outline-gap"], [1, "mat-form-field-outline-end"], [1, "mat-form-field-outline", "mat-form-field-outline-thick"], [1, "mat-form-field-prefix"], [1, "mat-form-field-label", 3, "cdkObserveContentDisabled", "id", "ngSwitch", "cdkObserveContent"], ["label", ""], ["class", "mat-placeholder-required mat-form-field-required-marker", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "mat-placeholder-required", "mat-form-field-required-marker"], [1, "mat-form-field-suffix"], [1, "mat-form-field-underline"], ["underline", ""], [1, "mat-form-field-ripple"], [1, "mat-form-field-hint-wrapper"], ["class", "mat-hint", 3, "id", 4, "ngIf"], [1, "mat-form-field-hint-spacer"], [1, "mat-hint", 3, "id"]],
  template: function MatFormField_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojectionDef"](_c4);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "div", 1, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MatFormField_Template_div_click_1_listener($event) {
        return ctx._control.onContainerClick && ctx._control.onContainerClick($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](3, MatFormField_ng_container_3_Template, 9, 0, "ng-container", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](4, MatFormField_div_4_Template, 2, 0, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "div", 5, 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](7);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](8, "span", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](9, MatFormField_label_9_Template, 5, 16, "label", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](10, MatFormField_div_10_Template, 2, 0, "div", 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](11, MatFormField_div_11_Template, 3, 4, "div", 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](12, "div", 11);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](13, MatFormField_div_13_Template, 2, 1, "div", 12);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](14, MatFormField_div_14_Template, 5, 2, "div", 13);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.appearance == "outline");
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx._prefixChildren.length);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx._hasFloatingLabel());
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx._suffixChildren.length);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.appearance != "outline");
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngSwitch", ctx._getDisplayedMessages());
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngSwitchCase", "error");
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngSwitchCase", "hint");
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["NgSwitch"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["NgSwitchCase"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__["CdkObserveContent"]],
  styles: [".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n", ".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\"\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n", ".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\" \";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\"\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n", ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n", ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n", ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n"],
  encapsulation: 2,
  data: {
    animation: [matFormFieldAnimations.transitionMessages]
  },
  changeDetection: 0
});

MatFormField.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_LABEL_GLOBAL_OPTIONS"]]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_15__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatFormField.propDecorators = {
  appearance: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  hideRequiredMarker: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  hintLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  floatLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  underlineRef: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
    args: ['underline']
  }],
  _connectionContainerRef: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
    args: ['connectionContainer', {
      static: true
    }]
  }],
  _inputContainerRef: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
    args: ['inputContainer']
  }],
  _label: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
    args: ['label']
  }],
  _controlNonStatic: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MatFormFieldControl]
  }],
  _controlStatic: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MatFormFieldControl, {
      static: true
    }]
  }],
  _labelChildNonStatic: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MatLabel]
  }],
  _labelChildStatic: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MatLabel, {
      static: true
    }]
  }],
  _placeholderChild: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MatPlaceholder]
  }],
  _errorChildren: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
    args: [MAT_ERROR, {
      descendants: true
    }]
  }],
  _hintChildren: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
    args: [_MAT_HINT, {
      descendants: true
    }]
  }],
  _prefixChildren: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
    args: [MAT_PREFIX, {
      descendants: true
    }]
  }],
  _suffixChildren: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
    args: [MAT_SUFFIX, {
      descendants: true
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatFormField, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-form-field',
      exportAs: 'matFormField',
      template: "<div class=\"mat-form-field-wrapper\">\n  <div class=\"mat-form-field-flex\" #connectionContainer\n       (click)=\"_control.onContainerClick && _control.onContainerClick($event)\">\n\n    <!-- Outline used for outline appearance. -->\n    <ng-container *ngIf=\"appearance == 'outline'\">\n      <div class=\"mat-form-field-outline\">\n        <div class=\"mat-form-field-outline-start\"></div>\n        <div class=\"mat-form-field-outline-gap\"></div>\n        <div class=\"mat-form-field-outline-end\"></div>\n      </div>\n      <div class=\"mat-form-field-outline mat-form-field-outline-thick\">\n        <div class=\"mat-form-field-outline-start\"></div>\n        <div class=\"mat-form-field-outline-gap\"></div>\n        <div class=\"mat-form-field-outline-end\"></div>\n      </div>\n    </ng-container>\n\n    <div class=\"mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\">\n      <ng-content select=\"[matPrefix]\"></ng-content>\n    </div>\n\n    <div class=\"mat-form-field-infix\" #inputContainer>\n      <ng-content></ng-content>\n\n      <span class=\"mat-form-field-label-wrapper\">\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\n             read if it comes before the control in the DOM. -->\n        <label class=\"mat-form-field-label\"\n               (cdkObserveContent)=\"updateOutlineGap()\"\n               [cdkObserveContentDisabled]=\"appearance != 'outline'\"\n               [id]=\"_labelId\"\n               [attr.for]=\"_control.id\"\n               [attr.aria-owns]=\"_control.id\"\n               [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat()\"\n               [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat()\"\n               [class.mat-accent]=\"color == 'accent'\"\n               [class.mat-warn]=\"color == 'warn'\"\n               #label\n               *ngIf=\"_hasFloatingLabel()\"\n               [ngSwitch]=\"_hasLabel()\">\n\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\n          <ng-container *ngSwitchCase=\"false\">\n            <ng-content select=\"mat-placeholder\"></ng-content>\n            <span>{{_control.placeholder}}</span>\n          </ng-container>\n\n          <ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content>\n\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\n          <span\n            class=\"mat-placeholder-required mat-form-field-required-marker\"\n            aria-hidden=\"true\"\n            *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&#32;*</span>\n        </label>\n      </span>\n    </div>\n\n    <div class=\"mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\">\n      <ng-content select=\"[matSuffix]\"></ng-content>\n    </div>\n  </div>\n\n  <!-- Underline used for legacy, standard, and box appearances. -->\n  <div class=\"mat-form-field-underline\" #underline\n       *ngIf=\"appearance != 'outline'\">\n    <span class=\"mat-form-field-ripple\"\n          [class.mat-accent]=\"color == 'accent'\"\n          [class.mat-warn]=\"color == 'warn'\"></span>\n  </div>\n\n  <div class=\"mat-form-field-subscript-wrapper\"\n       [ngSwitch]=\"_getDisplayedMessages()\">\n    <div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\">\n      <ng-content select=\"mat-error\"></ng-content>\n    </div>\n\n    <div class=\"mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\"\n      [@transitionMessages]=\"_subscriptAnimationState\">\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\n      <div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div>\n      <ng-content select=\"mat-hint:not([align='end'])\"></ng-content>\n      <div class=\"mat-form-field-hint-spacer\"></div>\n      <ng-content select=\"mat-hint[align='end']\"></ng-content>\n    </div>\n  </div>\n</div>\n",
      animations: [matFormFieldAnimations.transitionMessages],
      host: {
        'class': 'mat-form-field',
        '[class.mat-form-field-appearance-standard]': 'appearance == "standard"',
        '[class.mat-form-field-appearance-fill]': 'appearance == "fill"',
        '[class.mat-form-field-appearance-outline]': 'appearance == "outline"',
        '[class.mat-form-field-appearance-legacy]': 'appearance == "legacy"',
        '[class.mat-form-field-invalid]': '_control.errorState',
        '[class.mat-form-field-can-float]': '_canLabelFloat()',
        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',
        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',
        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',
        '[class.mat-form-field-disabled]': '_control.disabled',
        '[class.mat-form-field-autofilled]': '_control.autofilled',
        '[class.mat-focused]': '_control.focused',
        '[class.mat-accent]': 'color == "accent"',
        '[class.mat-warn]': 'color == "warn"',
        '[class.ng-untouched]': '_shouldForward("untouched")',
        '[class.ng-touched]': '_shouldForward("touched")',
        '[class.ng-pristine]': '_shouldForward("pristine")',
        '[class.ng-dirty]': '_shouldForward("dirty")',
        '[class.ng-valid]': '_shouldForward("valid")',
        '[class.ng-invalid]': '_shouldForward("invalid")',
        '[class.ng-pending]': '_shouldForward("pending")',
        '[class._mat-animation-noopable]': '!_animationsEnabled'
      },
      inputs: ['color'],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].OnPush,
      providers: [{
        provide: MAT_FORM_FIELD,
        useExisting: MatFormField
      }],
      styles: [".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\n", ".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\"\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\n", ".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\" \";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\"\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\n", ".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\n", ".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\n", ".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_LABEL_GLOBAL_OPTIONS"]]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_9__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__["Platform"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_15__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    floatLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    appearance: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    hideRequiredMarker: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    hintLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    underlineRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
      args: ['underline']
    }],
    _connectionContainerRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
      args: ['connectionContainer', {
        static: true
      }]
    }],
    _inputContainerRef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
      args: ['inputContainer']
    }],
    _label: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
      args: ['label']
    }],
    _controlNonStatic: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MatFormFieldControl]
    }],
    _controlStatic: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MatFormFieldControl, {
        static: true
      }]
    }],
    _labelChildNonStatic: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MatLabel]
    }],
    _labelChildStatic: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MatLabel, {
        static: true
      }]
    }],
    _placeholderChild: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MatPlaceholder]
    }],
    _errorChildren: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
      args: [MAT_ERROR, {
        descendants: true
      }]
    }],
    _hintChildren: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
      args: [_MAT_HINT, {
        descendants: true
      }]
    }],
    _prefixChildren: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
      args: [MAT_PREFIX, {
        descendants: true
      }]
    }],
    _suffixChildren: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
      args: [MAT_SUFFIX, {
        descendants: true
      }]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatFormFieldModule = function MatFormFieldModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFormFieldModule);
};

MatFormFieldModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatFormFieldModule
});
MatFormFieldModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatFormFieldModule_Factory(t) {
    return new (t || MatFormFieldModule)();
  },
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__["ObserversModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatFormFieldModule, {
    declarations: function declarations() {
      return [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__["ObserversModule"]];
    },
    exports: function exports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatFormFieldModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__["ObserversModule"]],
      exports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "nLfN":
/*!*********************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js ***!
  \*********************************************************************/
/*! exports provided: Platform, PlatformModule, _getShadowRoot, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Platform", function() { return Platform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlatformModule", function() { return PlatformModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_getShadowRoot", function() { return _getShadowRoot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_supportsShadowDom", function() { return _supportsShadowDom; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRtlScrollAxisType", function() { return getRtlScrollAxisType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSupportedInputTypes", function() { return getSupportedInputTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizePassiveListenerOptions", function() { return normalizePassiveListenerOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsPassiveEventListeners", function() { return supportsPassiveEventListeners; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "supportsScrollBehavior", function() { return supportsScrollBehavior; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");



/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Whether the current platform supports the V8 Break Iterator. The V8 check
// is necessary to detect all Blink based browsers.


var hasV8BreakIterator; // We need a try/catch around the reference to `Intl`, because accessing it in some cases can
// cause IE to throw. These cases are tied to particular versions of Windows and can happen if
// the consumer is providing a polyfilled `Map`. See:
// https://github.com/Microsoft/ChakraCore/issues/3189
// https://github.com/angular/components/issues/15687

try {
  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;
} catch (_a) {
  hasV8BreakIterator = false;
}
/**
 * Service to detect the current platform by comparing the userAgent strings and
 * checking browser-specific global properties.
 */


var Platform = function Platform(_platformId) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, Platform);

  this._platformId = _platformId; // We want to use the Angular platform check because if the Document is shimmed
  // without the navigator, the following checks will fail. This is preferred because
  // sometimes the Document may be shimmed without the user's knowledge or intention

  /** Whether the Angular application is being rendered in the browser. */

  this.isBrowser = this._platformId ? Object(_angular_common__WEBPACK_IMPORTED_MODULE_2__["isPlatformBrowser"])(this._platformId) : typeof document === 'object' && !!document;
  /** Whether the current browser is Microsoft Edge. */

  this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);
  /** Whether the current rendering engine is Microsoft Trident. */

  this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent); // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.

  /** Whether the current rendering engine is Blink. */

  this.BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT; // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to
  // ensure that Webkit runs standalone and is not used as another engine's base.

  /** Whether the current rendering engine is WebKit. */

  this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;
  /** Whether the current platform is Apple iOS. */

  this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window); // It's difficult to detect the plain Gecko engine, because most of the browsers identify
  // them self as Gecko-like browsers and modify the userAgent's according to that.
  // Since we only cover one explicit Firefox case, we can simply check for Firefox
  // instead of having an unstable check for Gecko.

  /** Whether the current browser is Firefox. */

  this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);
  /** Whether the current platform is Android. */
  // Trident on mobile adds the android platform to the userAgent to trick detections.

  this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT; // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake
  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every
  // Safari browser should also use Webkit as its layout engine.

  /** Whether the current browser is Safari. */

  this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;
};

Platform.ɵfac = function Platform_Factory(t) {
  return new (t || Platform)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"]));
};

Platform.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"])({
  factory: function Platform_Factory() {
    return new Platform(Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"]));
  },
  token: Platform,
  providedIn: "root"
});

Platform.ctorParameters = function () {
  return [{
    type: Object,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](Platform, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: Object,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var PlatformModule = function PlatformModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, PlatformModule);
};

PlatformModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
  type: PlatformModule
});
PlatformModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
  factory: function PlatformModule_Factory(t) {
    return new (t || PlatformModule)();
  }
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](PlatformModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
    args: [{}]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Cached result Set of input types support by the current browser. */


var supportedInputTypes;
/** Types of `<input>` that *might* be supported. */

var candidateInputTypes = [// `color` must come first. Chrome 56 shows a warning if we change the type to `color` after
// first changing it to something else:
// The specified value "" does not conform to the required format.
// The format is "#rrggbb" where rr, gg, bb are two-digit hexadecimal numbers.
'color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];
/** @returns The input types supported by this browser. */

function getSupportedInputTypes() {
  // Result is cached.
  if (supportedInputTypes) {
    return supportedInputTypes;
  } // We can't check if an input type is not supported until we're on the browser, so say that
  // everything is supported when not on the browser. We don't use `Platform` here since it's
  // just a helper function and can't inject it.


  if (typeof document !== 'object' || !document) {
    supportedInputTypes = new Set(candidateInputTypes);
    return supportedInputTypes;
  }

  var featureTestInput = document.createElement('input');
  supportedInputTypes = new Set(candidateInputTypes.filter(function (value) {
    featureTestInput.setAttribute('type', value);
    return featureTestInput.type === value;
  }));
  return supportedInputTypes;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Cached result of whether the user's browser supports passive event listeners. */


var supportsPassiveEvents;
/**
 * Checks whether the user's browser supports passive event listeners.
 * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md
 */

function supportsPassiveEventListeners() {
  if (supportsPassiveEvents == null && typeof window !== 'undefined') {
    try {
      window.addEventListener('test', null, Object.defineProperty({}, 'passive', {
        get: function get() {
          return supportsPassiveEvents = true;
        }
      }));
    } finally {
      supportsPassiveEvents = supportsPassiveEvents || false;
    }
  }

  return supportsPassiveEvents;
}
/**
 * Normalizes an `AddEventListener` object to something that can be passed
 * to `addEventListener` on any browser, no matter whether it supports the
 * `options` parameter.
 * @param options Object to be normalized.
 */


function normalizePassiveListenerOptions(options) {
  return supportsPassiveEventListeners() ? options : !!options.capture;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */


var rtlScrollAxisType;
/** Cached result of the check that indicates whether the browser supports scroll behaviors. */

var scrollBehaviorSupported;
/** Check whether the browser supports scroll behaviors. */

function supportsScrollBehavior() {
  if (scrollBehaviorSupported == null) {
    // If we're not in the browser, it can't be supported.
    if (typeof document !== 'object' || !document) {
      scrollBehaviorSupported = false;
    } // If the element can have a `scrollBehavior` style, we can be sure that it's supported.


    if ('scrollBehavior' in document.documentElement.style) {
      scrollBehaviorSupported = true;
    } else {
      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's
      // supported but it doesn't handle scroll behavior, or it has been polyfilled.
      var scrollToFunction = Element.prototype.scrollTo;

      if (scrollToFunction) {
        // We can detect if the function has been polyfilled by calling `toString` on it. Native
        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get
        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider
        // polyfilled functions as supporting scroll behavior.
        scrollBehaviorSupported = !/\{\s*\[native code\]\s*\}/.test(scrollToFunction.toString());
      } else {
        scrollBehaviorSupported = false;
      }
    }
  }

  return scrollBehaviorSupported;
}
/**
 * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,
 * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.
 */


function getRtlScrollAxisType() {
  // We can't check unless we're on the browser. Just assume 'normal' if we're not.
  if (typeof document !== 'object' || !document) {
    return 0
    /* NORMAL */
    ;
  }

  if (rtlScrollAxisType == null) {
    // Create a 1px wide scrolling container and a 2px wide content element.
    var scrollContainer = document.createElement('div');
    var containerStyle = scrollContainer.style;
    scrollContainer.dir = 'rtl';
    containerStyle.width = '1px';
    containerStyle.overflow = 'auto';
    containerStyle.visibility = 'hidden';
    containerStyle.pointerEvents = 'none';
    containerStyle.position = 'absolute';
    var content = document.createElement('div');
    var contentStyle = content.style;
    contentStyle.width = '2px';
    contentStyle.height = '1px';
    scrollContainer.appendChild(content);
    document.body.appendChild(scrollContainer);
    rtlScrollAxisType = 0
    /* NORMAL */
    ; // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL
    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're
    // dealing with one of the other two types of browsers.

    if (scrollContainer.scrollLeft === 0) {
      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an
      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by
      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will
      // return 0 when we read it again.
      scrollContainer.scrollLeft = 1;
      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? 1
      /* NEGATED */
      : 2
      /* INVERTED */
      ;
    }

    scrollContainer.parentNode.removeChild(scrollContainer);
  }

  return rtlScrollAxisType;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var shadowDomIsSupported;
/** Checks whether the user's browser support Shadow DOM. */

function _supportsShadowDom() {
  if (shadowDomIsSupported == null) {
    var head = typeof document !== 'undefined' ? document.head : null;
    shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));
  }

  return shadowDomIsSupported;
}
/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */


function _getShadowRoot(element) {
  if (_supportsShadowDom()) {
    var rootNode = element.getRootNode ? element.getRootNode() : null; // Note that this should be caught by `_supportsShadowDom`, but some
    // teams have been able to hit this code path on unsupported browsers.

    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {
      return rootNode;
    }
  }

  return null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "neyp":
/*!***********************************************************!*\
  !*** ./src/app/pages/challenges/challenges.component.css ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NoYWxsZW5nZXMvY2hhbGxlbmdlcy5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "qFsG":
/*!***********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js ***!
  \***********************************************************************/
/*! exports provided: MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_INPUT_VALUE_ACCESSOR", function() { return MAT_INPUT_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatInput", function() { return MatInput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatInputModule", function() { return MatInputModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTextareaAutosize", function() { return MatTextareaAutosize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatInputUnsupportedTypeError", function() { return getMatInputUnsupportedTypeError; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/text-field */ "ihCf");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/form-field */ "kmnG");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ "qCKp");












/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Directive to automatically resize a textarea to fit its content.
 * @deprecated Use `cdkTextareaAutosize` from `@angular/cdk/text-field` instead.
 * @breaking-change 8.0.0
 */








var MatTextareaAutosize = /*#__PURE__*/function (_CdkTextareaAutosize) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(MatTextareaAutosize, _CdkTextareaAutosize);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(MatTextareaAutosize);

  function MatTextareaAutosize() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatTextareaAutosize);

    return _super.apply(this, arguments);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatTextareaAutosize, [{
    key: "matAutosizeMinRows",
    get: function get() {
      return this.minRows;
    },
    set: function set(value) {
      this.minRows = value;
    }
  }, {
    key: "matAutosizeMaxRows",
    get: function get() {
      return this.maxRows;
    },
    set: function set(value) {
      this.maxRows = value;
    }
  }, {
    key: "matAutosize",
    get: function get() {
      return this.enabled;
    },
    set: function set(value) {
      this.enabled = value;
    }
  }, {
    key: "matTextareaAutosize",
    get: function get() {
      return this.enabled;
    },
    set: function set(value) {
      this.enabled = value;
    }
  }]);

  return MatTextareaAutosize;
}(_angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["CdkTextareaAutosize"]);

MatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) {
  return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize);
};

MatTextareaAutosize.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineDirective"]({
  type: MatTextareaAutosize,
  selectors: [["textarea", "mat-autosize", ""], ["textarea", "matTextareaAutosize", ""]],
  hostAttrs: ["rows", "1", 1, "cdk-textarea-autosize", "mat-autosize"],
  inputs: {
    cdkAutosizeMinRows: "cdkAutosizeMinRows",
    cdkAutosizeMaxRows: "cdkAutosizeMaxRows",
    matAutosizeMinRows: "matAutosizeMinRows",
    matAutosizeMaxRows: "matAutosizeMaxRows",
    matAutosize: ["mat-autosize", "matAutosize"],
    matTextareaAutosize: "matTextareaAutosize"
  },
  exportAs: ["matTextareaAutosize"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"]]
});
MatTextareaAutosize.propDecorators = {
  matAutosizeMinRows: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  matAutosizeMaxRows: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  matAutosize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"],
    args: ['mat-autosize']
  }],
  matTextareaAutosize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }]
};
var ɵMatTextareaAutosize_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵgetInheritedFactory"](MatTextareaAutosize);
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatTextareaAutosize, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Directive"],
    args: [{
      selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',
      exportAs: 'matTextareaAutosize',
      inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],
      host: {
        'class': 'cdk-textarea-autosize mat-autosize',
        // Textarea elements that have the directive applied should have a single row by default.
        // Browsers normally show two rows by default and therefore this limits the minRows binding.
        'rows': '1'
      }
    }]
  }], null, {
    matAutosizeMinRows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    matAutosizeMaxRows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    matAutosize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"],
      args: ['mat-autosize']
    }],
    matTextareaAutosize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @docs-private */


function getMatInputUnsupportedTypeError(type) {
  return Error("Input type \"".concat(type, "\" isn't supported by matInput."));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This token is used to inject the object whose value should be set into `MatInput`. If none is
 * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide
 * themselves for this token, in order to make `MatInput` delegate the getting and setting of the
 * value to them.
 */


var MAT_INPUT_VALUE_ACCESSOR = new _angular_core__WEBPACK_IMPORTED_MODULE_5__["InjectionToken"]('MAT_INPUT_VALUE_ACCESSOR');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.

var MAT_INPUT_INVALID_TYPES = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];
var nextUniqueId = 0; // Boilerplate for applying mixins to MatInput.

/** @docs-private */

var MatInputBase = function MatInputBase(_defaultErrorStateMatcher, _parentForm, _parentFormGroup,
/** @docs-private */
ngControl) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatInputBase);

  this._defaultErrorStateMatcher = _defaultErrorStateMatcher;
  this._parentForm = _parentForm;
  this._parentFormGroup = _parentFormGroup;
  this.ngControl = ngControl;
};

var _MatInputMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["mixinErrorState"])(MatInputBase);
/** Directive that allows a native input to work inside a `MatFormField`. */


var MatInput = /*#__PURE__*/function (_MatInputMixinBase2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(MatInput, _MatInputMixinBase2);

  var _super2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(MatInput);

  function MatInput(_elementRef, _platform,
  /** @docs-private */
  ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, // TODO: Remove this once the legacy appearance has been removed. We only need
  // to inject the form-field for determining whether the placeholder has been promoted.
  _formField) {
    var _this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatInput);

    _this = _super2.call(this, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);
    _this._elementRef = _elementRef;
    _this._platform = _platform;
    _this.ngControl = ngControl;
    _this._autofillMonitor = _autofillMonitor;
    _this._formField = _formField;
    _this._uid = "mat-input-".concat(nextUniqueId++);
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

    _this.focused = false;
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

    _this.stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_11__["Subject"]();
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

    _this.controlType = 'mat-input';
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

    _this.autofilled = false;
    _this._disabled = false;
    _this._required = false;
    _this._type = 'text';
    _this._readonly = false;
    _this._neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(function (t) {
      return Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__["getSupportedInputTypes"])().has(t);
    });
    var element = _this._elementRef.nativeElement;
    var nodeName = element.nodeName.toLowerCase(); // If no input value accessor was explicitly specified, use the element as the input value
    // accessor.

    _this._inputValueAccessor = inputValueAccessor || element;
    _this._previousNativeValue = _this.value; // Force setter to be called in case id was not specified.

    _this.id = _this.id; // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete
    // key. In order to get around this we need to "jiggle" the caret loose. Since this bug only
    // exists on iOS, we only bother to install the listener on iOS.

    if (_platform.IOS) {
      ngZone.runOutsideAngular(function () {
        _elementRef.nativeElement.addEventListener('keyup', function (event) {
          var el = event.target;

          if (!el.value && !el.selectionStart && !el.selectionEnd) {
            // Note: Just setting `0, 0` doesn't fix the issue. Setting
            // `1, 1` fixes it for the first time that you type text and
            // then hold delete. Toggling to `1, 1` and then back to
            // `0, 0` seems to completely fix it.
            el.setSelectionRange(1, 1);
            el.setSelectionRange(0, 0);
          }
        });
      });
    }

    _this._isServer = !_this._platform.isBrowser;
    _this._isNativeSelect = nodeName === 'select';
    _this._isTextarea = nodeName === 'textarea';

    if (_this._isNativeSelect) {
      _this.controlType = element.multiple ? 'mat-native-select-multiple' : 'mat-native-select';
    }

    return _this;
  }
  /**
   * Implemented as part of MatFormFieldControl.
   * @docs-private
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatInput, [{
    key: "disabled",
    get: function get() {
      if (this.ngControl && this.ngControl.disabled !== null) {
        return this.ngControl.disabled;
      }

      return this._disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__["coerceBooleanProperty"])(value); // Browsers may not fire the blur event if the input is disabled too quickly.
      // Reset from here to ensure that the element doesn't become stuck.

      if (this.focused) {
        this.focused = false;
        this.stateChanges.next();
      }
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "id",
    get: function get() {
      return this._id;
    },
    set: function set(value) {
      this._id = value || this._uid;
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "required",
    get: function get() {
      return this._required;
    },
    set: function set(value) {
      this._required = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__["coerceBooleanProperty"])(value);
    }
    /** Input type of the element. */

  }, {
    key: "type",
    get: function get() {
      return this._type;
    },
    set: function set(value) {
      this._type = value || 'text';

      this._validateType(); // When using Angular inputs, developers are no longer able to set the properties on the native
      // input element. To ensure that bindings for `type` work, we need to sync the setter
      // with the native property. Textarea elements don't support the type property or attribute.


      if (!this._isTextarea && Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__["getSupportedInputTypes"])().has(this._type)) {
        this._elementRef.nativeElement.type = this._type;
      }
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "value",
    get: function get() {
      return this._inputValueAccessor.value;
    },
    set: function set(value) {
      if (value !== this.value) {
        this._inputValueAccessor.value = value;
        this.stateChanges.next();
      }
    }
    /** Whether the element is readonly. */

  }, {
    key: "readonly",
    get: function get() {
      return this._readonly;
    },
    set: function set(value) {
      this._readonly = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_6__["coerceBooleanProperty"])(value);
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this2 = this;

      if (this._platform.isBrowser) {
        this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(function (event) {
          _this2.autofilled = event.isAutofilled;

          _this2.stateChanges.next();
        });
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges() {
      this.stateChanges.next();
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.stateChanges.complete();

      if (this._platform.isBrowser) {
        this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);
      }
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      if (this.ngControl) {
        // We need to re-evaluate this on every change detection cycle, because there are some
        // error triggers that we can't subscribe to (e.g. parent form submissions). This means
        // that whatever logic is in here has to be super lean or we risk destroying the performance.
        this.updateErrorState();
      } // We need to dirty-check the native element's value, because there are some cases where
      // we won't be notified when it changes (e.g. the consumer isn't using forms or they're
      // updating the value using `emitEvent: false`).


      this._dirtyCheckNativeValue(); // We need to dirty-check and set the placeholder attribute ourselves, because whether it's
      // present or not depends on a query which is prone to "changed after checked" errors.


      this._dirtyCheckPlaceholder();
    }
    /** Focuses the input. */

  }, {
    key: "focus",
    value: function focus(options) {
      this._elementRef.nativeElement.focus(options);
    } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.
    // In Ivy the `host` bindings will be merged when this class is extended, whereas in
    // ViewEngine they're overwritten.
    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.

    /** Callback for the cases where the focused state of the input changes. */
    // tslint:disable:no-host-decorator-in-concrete
    // tslint:enable:no-host-decorator-in-concrete

  }, {
    key: "_focusChanged",
    value: function _focusChanged(isFocused) {
      if (isFocused !== this.focused && (!this.readonly || !isFocused)) {
        this.focused = isFocused;
        this.stateChanges.next();
      }
    } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.
    // In Ivy the `host` bindings will be merged when this class is extended, whereas in
    // ViewEngine they're overwritten.
    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.
    // tslint:disable-next-line:no-host-decorator-in-concrete

  }, {
    key: "_onInput",
    value: function _onInput() {// This is a noop function and is used to let Angular know whenever the value changes.
      // Angular will run a new change detection each time the `input` event has been dispatched.
      // It's necessary that Angular recognizes the value change, because when floatingLabel
      // is set to false and Angular forms aren't used, the placeholder won't recognize the
      // value changes and will not disappear.
      // Listening to the input event wouldn't be necessary when the input is using the
      // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.
    }
    /** Does some manual dirty checking on the native input `placeholder` attribute. */

  }, {
    key: "_dirtyCheckPlaceholder",
    value: function _dirtyCheckPlaceholder() {
      var _a, _b; // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise
      // screen readers will read it out twice: once from the label and once from the attribute.
      // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's
      // the only one that supports promoting the placeholder to a label.


      var placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;

      if (placeholder !== this._previousPlaceholder) {
        var element = this._elementRef.nativeElement;
        this._previousPlaceholder = placeholder;
        placeholder ? element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');
      }
    }
    /** Does some manual dirty checking on the native input `value` property. */

  }, {
    key: "_dirtyCheckNativeValue",
    value: function _dirtyCheckNativeValue() {
      var newValue = this._elementRef.nativeElement.value;

      if (this._previousNativeValue !== newValue) {
        this._previousNativeValue = newValue;
        this.stateChanges.next();
      }
    }
    /** Make sure the input is a supported type. */

  }, {
    key: "_validateType",
    value: function _validateType() {
      if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMatInputUnsupportedTypeError(this._type);
      }
    }
    /** Checks whether the input type is one of the types that are never empty. */

  }, {
    key: "_isNeverEmpty",
    value: function _isNeverEmpty() {
      return this._neverEmptyInputTypes.indexOf(this._type) > -1;
    }
    /** Checks whether the input is invalid based on the native validation. */

  }, {
    key: "_isBadInput",
    value: function _isBadInput() {
      // The `validity` property won't be present on platform-server.
      var validity = this._elementRef.nativeElement.validity;
      return validity && validity.badInput;
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "empty",
    get: function get() {
      return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() && !this.autofilled;
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "shouldLabelFloat",
    get: function get() {
      if (this._isNativeSelect) {
        // For a single-selection `<select>`, the label should float when the selected option has
        // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid
        // overlapping the label with the options.
        var selectElement = this._elementRef.nativeElement;
        var firstOption = selectElement.options[0]; // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be
        // -1 if the `value` is set to something, that isn't in the list of options, at a later point.

        return this.focused || selectElement.multiple || !this.empty || !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);
      } else {
        return this.focused || !this.empty;
      }
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "setDescribedByIds",
    value: function setDescribedByIds(ids) {
      if (ids.length) {
        this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));
      } else {
        this._elementRef.nativeElement.removeAttribute('aria-describedby');
      }
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "onContainerClick",
    value: function onContainerClick() {
      // Do not re-focus the input element if the element is already focused. Otherwise it can happen
      // that someone clicks on a time input and the cursor resets to the "hours" field while the
      // "minutes" field was actually clicked. See: https://github.com/angular/components/issues/12849
      if (!this.focused) {
        this.focus();
      }
    }
  }]);

  return MatInput;
}(_MatInputMixinBase);

MatInput.ɵfac = function MatInput_Factory(t) {
  return new (t || MatInput)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_8__["NgControl"], 10), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_8__["NgForm"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormGroupDirective"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](MAT_INPUT_VALUE_ACCESSOR, 10), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["AutofillMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MAT_FORM_FIELD"], 8));
};

MatInput.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineDirective"]({
  type: MatInput,
  selectors: [["input", "matInput", ""], ["textarea", "matInput", ""], ["select", "matNativeControl", ""], ["input", "matNativeControl", ""], ["textarea", "matNativeControl", ""]],
  hostAttrs: [1, "mat-input-element", "mat-form-field-autofill-control"],
  hostVars: 9,
  hostBindings: function MatInput_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("focus", function MatInput_focus_HostBindingHandler() {
        return ctx._focusChanged(true);
      })("blur", function MatInput_blur_HostBindingHandler() {
        return ctx._focusChanged(false);
      })("input", function MatInput_input_HostBindingHandler() {
        return ctx._onInput();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵhostProperty"]("disabled", ctx.disabled)("required", ctx.required);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("id", ctx.id)("data-placeholder", ctx.placeholder)("readonly", ctx.readonly && !ctx._isNativeSelect || null)("aria-invalid", ctx.errorState)("aria-required", ctx.required.toString());
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("mat-input-server", ctx._isServer);
    }
  },
  inputs: {
    id: "id",
    disabled: "disabled",
    required: "required",
    type: "type",
    value: "value",
    readonly: "readonly",
    placeholder: "placeholder",
    errorStateMatcher: "errorStateMatcher",
    userAriaDescribedBy: ["aria-describedby", "userAriaDescribedBy"]
  },
  exportAs: ["matInput"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵProvidersFeature"]([{
    provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldControl"],
    useExisting: MatInput
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵNgOnChangesFeature"]]
});

MatInput.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__["Platform"]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_8__["NgControl"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Self"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_8__["NgForm"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormGroupDirective"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Self"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
      args: [MAT_INPUT_VALUE_ACCESSOR]
    }]
  }, {
    type: _angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["AutofillMonitor"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["NgZone"]
  }, {
    type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormField"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
      args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MAT_FORM_FIELD"]]
    }]
  }];
};

MatInput.propDecorators = {
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  placeholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  required: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  type: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  errorStateMatcher: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  userAriaDescribedBy: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"],
    args: ['aria-describedby']
  }],
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  readonly: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  _focusChanged: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["HostListener"],
    args: ['focus', ['true']]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["HostListener"],
    args: ['blur', ['false']]
  }],
  _onInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["HostListener"],
    args: ['input']
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatInput, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Directive"],
    args: [{
      selector: "input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]",
      exportAs: 'matInput',
      host: {
        /**
         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.
         */
        'class': 'mat-input-element mat-form-field-autofill-control',
        '[class.mat-input-server]': '_isServer',
        // Native input properties that are overwritten by Angular inputs need to be synced with
        // the native input element. Otherwise property bindings for those don't work.
        '[attr.id]': 'id',
        // At the time of writing, we have a lot of customer tests that look up the input based on its
        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen
        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.
        '[attr.data-placeholder]': 'placeholder',
        '[disabled]': 'disabled',
        '[required]': 'required',
        '[attr.readonly]': 'readonly && !_isNativeSelect || null',
        '[attr.aria-invalid]': 'errorState',
        '[attr.aria-required]': 'required.toString()'
      },
      providers: [{
        provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldControl"],
        useExisting: MatInput
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_7__["Platform"]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_8__["NgControl"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Self"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_8__["NgForm"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_8__["FormGroupDirective"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Self"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
        args: [MAT_INPUT_VALUE_ACCESSOR]
      }]
    }, {
      type: _angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["AutofillMonitor"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["NgZone"]
    }, {
      type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormField"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
        args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MAT_FORM_FIELD"]]
      }]
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    required: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    readonly: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.
    // In Ivy the `host` bindings will be merged when this class is extended, whereas in
    // ViewEngine they're overwritten.
    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.

    /** Callback for the cases where the focused state of the input changes. */
    // tslint:disable:no-host-decorator-in-concrete
    // tslint:enable:no-host-decorator-in-concrete
    _focusChanged: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["HostListener"],
      args: ['focus', ['true']]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["HostListener"],
      args: ['blur', ['false']]
    }],
    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.
    // In Ivy the `host` bindings will be merged when this class is extended, whereas in
    // ViewEngine they're overwritten.
    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.
    // tslint:disable-next-line:no-host-decorator-in-concrete
    _onInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["HostListener"],
      args: ['input']
    }],
    placeholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    errorStateMatcher: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    userAriaDescribedBy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"],
      args: ['aria-describedby']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatInputModule = function MatInputModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatInputModule);
};

MatInputModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineNgModule"]({
  type: MatInputModule
});
MatInputModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjector"]({
  factory: function MatInputModule_Factory(t) {
    return new (t || MatInputModule)();
  },
  providers: [_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]],
  imports: [[_angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["TextFieldModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"]], _angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["TextFieldModule"], // We re-export the `MatFormFieldModule` since `MatInput` will almost always
  // be used together with `MatFormField`.
  _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsetNgModuleScope"](MatInputModule, {
    declarations: function declarations() {
      return [MatInput, MatTextareaAutosize];
    },
    imports: function imports() {
      return [_angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["TextFieldModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"]];
    },
    exports: function exports() {
      return [_angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["TextFieldModule"], // We re-export the `MatFormFieldModule` since `MatInput` will almost always
      // be used together with `MatFormField`.
      _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"], MatInput, MatTextareaAutosize];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatInputModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["NgModule"],
    args: [{
      declarations: [MatInput, MatTextareaAutosize],
      imports: [_angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["TextFieldModule"], _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"]],
      exports: [_angular_cdk_text_field__WEBPACK_IMPORTED_MODULE_4__["TextFieldModule"], // We re-export the `MatFormFieldModule` since `MatInput` will almost always
      // be used together with `MatFormField`.
      _angular_material_form_field__WEBPACK_IMPORTED_MODULE_10__["MatFormFieldModule"], MatInput, MatTextareaAutosize],
      providers: [_angular_material_core__WEBPACK_IMPORTED_MODULE_9__["ErrorStateMatcher"]]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "qZ7x":
/*!**************************************************************!*\
  !*** ./src/app/layouts/admin-layout/admin-layout.routing.ts ***!
  \**************************************************************/
/*! exports provided: AdminLayoutRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLayoutRoutes", function() { return AdminLayoutRoutes; });
/* harmony import */ var _pages_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../pages/dashboard/dashboard.component */ "U5Cf");
/* harmony import */ var app_pages_resources_resources_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/pages/resources/resources.component */ "F3Tb");
/* harmony import */ var app_pages_blogs_blogs_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/pages/blogs/blogs.component */ "RdVG");
/* harmony import */ var app_pages_projects_projects_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/pages/projects/projects.component */ "u/sh");
/* harmony import */ var app_pages_discussion_discussion_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/pages/discussion/discussion.component */ "8Xqe");
/* harmony import */ var app_pages_user_user_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/pages/user/user.component */ "3OJA");
/* harmony import */ var app_pages_user_edit_user_edit_user_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/pages/user/edit-user/edit-user.component */ "5rky");
/* harmony import */ var app_pages_challenges_challenges_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/pages/challenges/challenges.component */ "Gr0w");








var AdminLayoutRoutes = [
    { path: 'dashboard', component: _pages_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_0__["DashboardComponent"] },
    { path: 'resources', component: app_pages_resources_resources_component__WEBPACK_IMPORTED_MODULE_1__["ResourcesComponent"] },
    { path: 'challenges', component: app_pages_challenges_challenges_component__WEBPACK_IMPORTED_MODULE_7__["ChallengesComponent"] },
    { path: 'projects', component: app_pages_projects_projects_component__WEBPACK_IMPORTED_MODULE_3__["ProjectsComponent"] },
    { path: 'blog', component: app_pages_blogs_blogs_component__WEBPACK_IMPORTED_MODULE_2__["BlogsComponent"] },
    { path: 'discussion', component: app_pages_discussion_discussion_component__WEBPACK_IMPORTED_MODULE_4__["DiscussionComponent"] },
    // userprofile and edit
    { path: 'me', component: app_pages_user_user_component__WEBPACK_IMPORTED_MODULE_5__["UserComponent"] },
    { path: 'me/edit', component: app_pages_user_edit_user_edit_user_component__WEBPACK_IMPORTED_MODULE_6__["EditUserComponent"] },
];


/***/ }),

/***/ "qitP":
/*!****************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/pages/blogs/blogs.component.html ***!
  \****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\n    <div class=\"container\">\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12\">\n            <div class=\"row\">\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">text_snippet</i>\n                            </div>\n                            <p class=\"card-category\">Post</p>\n                            <h3 class=\"card-title\">5</h3>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                <a href=\"javascript:void(0)\">Published Post</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">visibility</i>\n                            </div>\n                            <p class=\"card-category\">Views</p>\n                            <h3 class=\"card-title\">127</h3>\n                            \n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                  <a href=\"javascript:void(0)\">Assessment score</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card card-stats\">\n                        <div class=\"card-header card-header-info card-header-icon\">\n                            <div class=\"card-icon\">\n                                <i class=\"material-icons\">favorite_border</i>\n                            </div>\n                            <p class=\"card-category\">Likes</p>\n                            <h3 class=\"card-title\">50</h3>\n                        </div>\n                        <div class=\"card-footer\">\n                            <div class=\"stats\">\n                                <a href=\"javascript:void(0)\">Completed projects</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-lg-3 col-md-6 col-sm-6\">\n                    <div class=\"card add\">\n                        <h1>+</h1>\n                        <div class=\"add-footer\">\n                            Create a post\n                        </div>\n                    </div>\n                </div>\n            </div>\n          </div>\n        </div>\n  \n        <div class=\"row\">\n            <div class=\"col-lg-8 col-md-8 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-primary\">\n                        <h4 class=\"card-title \">My Blog</h4>\n                        <p class=\"card-category\"> Here is a subtitle for this table</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                                <thead class=\" text-primary\">\n                                    <th>\n                                        ID\n                                    </th>\n                                    <th>\n                                        Name\n                                    </th>\n                                    <th>\n                                        Country\n                                    </th>\n                                    <th>\n                                        City\n                                    </th>\n                                    <th>\n                                        Salary\n                                    </th>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td>\n                                            1\n                                        </td>\n                                        <td>\n                                            Dakota Rice\n                                        </td>\n                                        <td>\n                                            Niger\n                                        </td>\n                                        <td>\n                                            Oud-Turnhout\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $36,738\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            2\n                                        </td>\n                                        <td>\n                                            Minerva Hooper\n                                        </td>\n                                        <td>\n                                            Curaçao\n                                        </td>\n                                        <td>\n                                            Sinaai-Waas\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $23,789\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            3\n                                        </td>\n                                        <td>\n                                            Sage Rodriguez\n                                        </td>\n                                        <td>\n                                            Netherlands\n                                        </td>\n                                        <td>\n                                            Baileux\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $56,142\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            4\n                                        </td>\n                                        <td>\n                                            Philip Chaney\n                                        </td>\n                                        <td>\n                                            Korea, South\n                                        </td>\n                                        <td>\n                                            Overland Park\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $38,735\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            5\n                                        </td>\n                                        <td>\n                                            Doris Greene\n                                        </td>\n                                        <td>\n                                            Malawi\n                                        </td>\n                                        <td>\n                                            Feldkirchen in Kärnten\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $63,542\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td>\n                                            6\n                                        </td>\n                                        <td>\n                                            Mason Porter\n                                        </td>\n                                        <td>\n                                            Chile\n                                        </td>\n                                        <td>\n                                            Gloucester\n                                        </td>\n                                        <td class=\"text-primary\">\n                                            $78,615\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4 col-md-4 col-sm-12\">\n                <div class=\"card\">\n                    <div class=\"card-header card-header-warning\">\n                        <h4 class=\"card-title \">Recent Blog</h4>\n                        <p class=\"card-category\"> Here is a subtitle for this table</p>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"table-responsive\">\n                            <table class=\"table table-hover\">\n                                <thead class=\" text-primary\">\n                                    <th>\n                                        Date\n                                    </th>\n                                    <th>\n                                        Topic\n                                    </th>\n                                    <th>\n                                        Author\n                                    </th>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <td class=\"text-primary\">\n                                            13/5/2021\n                                        </td>\n                                        <td>\n                                            Dakota Rice\n                                        </td>\n                                        <td>\n                                            Niger\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"text-primary\">\n                                          13/5/2021\n                                      </td>\n                                      <td>\n                                          Minerva Hooper\n                                      </td>\n                                      <td>\n                                          Curaçao\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"text-primary\">\n                                          13/5/2021\n                                      </td>\n                                      <td>\n                                          Sage Rodriguez\n                                      </td>\n                                      <td>\n                                          Netherlands\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"text-primary\">\n                                          13/5/2021\n                                      </td>\n                                      <td>\n                                          Philip Chaney\n                                      </td>\n                                      <td>\n                                          Korea, South\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"text-primary\">\n                                          13/5/2021\n                                      </td>\n                                      <td>\n                                          Doris Greene\n                                      </td>\n                                      <td>\n                                          Malawi\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td class=\"text-primary\">\n                                          13/5/2021\n                                      </td>\n                                      <td>\n                                          Mason Porter\n                                      </td>\n                                      <td>\n                                          Chile\n                                      </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n  </div>\n  ");

/***/ }),

/***/ "rDax":
/*!********************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js ***!
  \********************************************************************/
/*! exports provided: CdkScrollable, ScrollDispatcher, ViewportRuler, BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, ɵangular_material_src_cdk_overlay_overlay_a, ɵangular_material_src_cdk_overlay_overlay_b, ɵangular_material_src_cdk_overlay_overlay_c, ɵangular_material_src_cdk_overlay_overlay_d, ɵangular_material_src_cdk_overlay_overlay_e, ɵangular_material_src_cdk_overlay_overlay_f, ɵangular_material_src_cdk_overlay_overlay_g, ɵangular_material_src_cdk_overlay_overlay_h */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlockScrollStrategy", function() { return BlockScrollStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkConnectedOverlay", function() { return CdkConnectedOverlay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkOverlayOrigin", function() { return CdkOverlayOrigin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CloseScrollStrategy", function() { return CloseScrollStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectedOverlayPositionChange", function() { return ConnectedOverlayPositionChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectedPositionStrategy", function() { return ConnectedPositionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectionPositionPair", function() { return ConnectionPositionPair; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlexibleConnectedPositionStrategy", function() { return FlexibleConnectedPositionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FullscreenOverlayContainer", function() { return FullscreenOverlayContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GlobalPositionStrategy", function() { return GlobalPositionStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoopScrollStrategy", function() { return NoopScrollStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OVERLAY_PROVIDERS", function() { return OVERLAY_PROVIDERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Overlay", function() { return Overlay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverlayConfig", function() { return OverlayConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverlayContainer", function() { return OverlayContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverlayKeyboardDispatcher", function() { return OverlayKeyboardDispatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverlayModule", function() { return OverlayModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverlayOutsideClickDispatcher", function() { return OverlayOutsideClickDispatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverlayPositionBuilder", function() { return OverlayPositionBuilder; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OverlayRef", function() { return OverlayRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RepositionScrollStrategy", function() { return RepositionScrollStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollStrategyOptions", function() { return ScrollStrategyOptions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollingVisibility", function() { return ScrollingVisibility; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateHorizontalPosition", function() { return validateHorizontalPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateVerticalPosition", function() { return validateVerticalPosition; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_a", function() { return OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_b", function() { return OVERLAY_KEYBOARD_DISPATCHER_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_c", function() { return OVERLAY_CONTAINER_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_d", function() { return OVERLAY_CONTAINER_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_e", function() { return CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_f", function() { return CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_g", function() { return CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_overlay_overlay_h", function() { return BaseOverlayDispatcher; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/scrolling */ "vxfF");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CdkScrollable", function() { return _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["CdkScrollable"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ScrollDispatcher", function() { return _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ViewportRuler", function() { return _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]; });

/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/portal */ "+rOU");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");
























/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Strategy that will prevent the user from scrolling while the overlay is visible.
 */

var BlockScrollStrategy = /*#__PURE__*/function () {
  function BlockScrollStrategy(_viewportRuler, document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, BlockScrollStrategy);

    this._viewportRuler = _viewportRuler;
    this._previousHTMLStyles = {
      top: '',
      left: ''
    };
    this._isEnabled = false;
    this._document = document;
  }
  /** Attaches this scroll strategy to an overlay. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(BlockScrollStrategy, [{
    key: "attach",
    value: function attach() {}
    /** Blocks page-level scroll while the attached overlay is open. */

  }, {
    key: "enable",
    value: function enable() {
      if (this._canBeEnabled()) {
        var root = this._document.documentElement;
        this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition(); // Cache the previous inline styles in case the user had set them.

        this._previousHTMLStyles.left = root.style.left || '';
        this._previousHTMLStyles.top = root.style.top || ''; // Note: we're using the `html` node, instead of the `body`, because the `body` may
        // have the user agent margin, whereas the `html` is guaranteed not to have one.

        root.style.left = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(-this._previousScrollPosition.left);
        root.style.top = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(-this._previousScrollPosition.top);
        root.classList.add('cdk-global-scrollblock');
        this._isEnabled = true;
      }
    }
    /** Unblocks page-level scroll while the attached overlay is open. */

  }, {
    key: "disable",
    value: function disable() {
      if (this._isEnabled) {
        var html = this._document.documentElement;
        var body = this._document.body;
        var htmlStyle = html.style;
        var bodyStyle = body.style;
        var previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';
        var previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';
        this._isEnabled = false;
        htmlStyle.left = this._previousHTMLStyles.left;
        htmlStyle.top = this._previousHTMLStyles.top;
        html.classList.remove('cdk-global-scrollblock'); // Disable user-defined smooth scrolling temporarily while we restore the scroll position.
        // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior

        htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';
        window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);
        htmlStyle.scrollBehavior = previousHtmlScrollBehavior;
        bodyStyle.scrollBehavior = previousBodyScrollBehavior;
      }
    }
  }, {
    key: "_canBeEnabled",
    value: function _canBeEnabled() {
      // Since the scroll strategies can't be singletons, we have to use a global CSS class
      // (`cdk-global-scrollblock`) to make sure that we don't try to disable global
      // scrolling multiple times.
      var html = this._document.documentElement;

      if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {
        return false;
      }

      var body = this._document.body;

      var viewport = this._viewportRuler.getViewportSize();

      return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;
    }
  }]);

  return BlockScrollStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.
 */


function getMatScrollStrategyAlreadyAttachedError() {
  return Error("Scroll strategy has already been attached.");
}
/**
 * Strategy that will close the overlay as soon as the user starts scrolling.
 */


var CloseScrollStrategy = /*#__PURE__*/function () {
  function CloseScrollStrategy(_scrollDispatcher, _ngZone, _viewportRuler, _config) {
    var _this = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CloseScrollStrategy);

    this._scrollDispatcher = _scrollDispatcher;
    this._ngZone = _ngZone;
    this._viewportRuler = _viewportRuler;
    this._config = _config;
    this._scrollSubscription = null;
    /** Detaches the overlay ref and disables the scroll strategy. */

    this._detach = function () {
      _this.disable();

      if (_this._overlayRef.hasAttached()) {
        _this._ngZone.run(function () {
          return _this._overlayRef.detach();
        });
      }
    };
  }
  /** Attaches this scroll strategy to an overlay. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(CloseScrollStrategy, [{
    key: "attach",
    value: function attach(overlayRef) {
      if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMatScrollStrategyAlreadyAttachedError();
      }

      this._overlayRef = overlayRef;
    }
    /** Enables the closing of the attached overlay on scroll. */

  }, {
    key: "enable",
    value: function enable() {
      var _this2 = this;

      if (this._scrollSubscription) {
        return;
      }

      var stream = this._scrollDispatcher.scrolled(0);

      if (this._config && this._config.threshold && this._config.threshold > 1) {
        this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;
        this._scrollSubscription = stream.subscribe(function () {
          var scrollPosition = _this2._viewportRuler.getViewportScrollPosition().top;

          if (Math.abs(scrollPosition - _this2._initialScrollPosition) > _this2._config.threshold) {
            _this2._detach();
          } else {
            _this2._overlayRef.updatePosition();
          }
        });
      } else {
        this._scrollSubscription = stream.subscribe(this._detach);
      }
    }
    /** Disables the closing the attached overlay on scroll. */

  }, {
    key: "disable",
    value: function disable() {
      if (this._scrollSubscription) {
        this._scrollSubscription.unsubscribe();

        this._scrollSubscription = null;
      }
    }
  }, {
    key: "detach",
    value: function detach() {
      this.disable();
      this._overlayRef = null;
    }
  }]);

  return CloseScrollStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Scroll strategy that doesn't do anything. */


var NoopScrollStrategy = /*#__PURE__*/function () {
  function NoopScrollStrategy() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, NoopScrollStrategy);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(NoopScrollStrategy, [{
    key: "enable",
    value:
    /** Does nothing, as this scroll strategy is a no-op. */
    function enable() {}
    /** Does nothing, as this scroll strategy is a no-op. */

  }, {
    key: "disable",
    value: function disable() {}
    /** Does nothing, as this scroll strategy is a no-op. */

  }, {
    key: "attach",
    value: function attach() {}
  }]);

  return NoopScrollStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO(jelbourn): move this to live with the rest of the scrolling code
// TODO(jelbourn): someday replace this with IntersectionObservers

/**
 * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.
 * @param element Dimensions of the element (from getBoundingClientRect)
 * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)
 * @returns Whether the element is scrolled out of view
 * @docs-private
 */


function isElementScrolledOutsideView(element, scrollContainers) {
  return scrollContainers.some(function (containerBounds) {
    var outsideAbove = element.bottom < containerBounds.top;
    var outsideBelow = element.top > containerBounds.bottom;
    var outsideLeft = element.right < containerBounds.left;
    var outsideRight = element.left > containerBounds.right;
    return outsideAbove || outsideBelow || outsideLeft || outsideRight;
  });
}
/**
 * Gets whether an element is clipped by any of its scrolling containers.
 * @param element Dimensions of the element (from getBoundingClientRect)
 * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)
 * @returns Whether the element is clipped
 * @docs-private
 */


function isElementClippedByScrolling(element, scrollContainers) {
  return scrollContainers.some(function (scrollContainerRect) {
    var clippedAbove = element.top < scrollContainerRect.top;
    var clippedBelow = element.bottom > scrollContainerRect.bottom;
    var clippedLeft = element.left < scrollContainerRect.left;
    var clippedRight = element.right > scrollContainerRect.right;
    return clippedAbove || clippedBelow || clippedLeft || clippedRight;
  });
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Strategy that will update the element position as the user is scrolling.
 */


var RepositionScrollStrategy = /*#__PURE__*/function () {
  function RepositionScrollStrategy(_scrollDispatcher, _viewportRuler, _ngZone, _config) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, RepositionScrollStrategy);

    this._scrollDispatcher = _scrollDispatcher;
    this._viewportRuler = _viewportRuler;
    this._ngZone = _ngZone;
    this._config = _config;
    this._scrollSubscription = null;
  }
  /** Attaches this scroll strategy to an overlay. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(RepositionScrollStrategy, [{
    key: "attach",
    value: function attach(overlayRef) {
      if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getMatScrollStrategyAlreadyAttachedError();
      }

      this._overlayRef = overlayRef;
    }
    /** Enables repositioning of the attached overlay on scroll. */

  }, {
    key: "enable",
    value: function enable() {
      var _this3 = this;

      if (!this._scrollSubscription) {
        var throttle = this._config ? this._config.scrollThrottle : 0;
        this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(function () {
          _this3._overlayRef.updatePosition(); // TODO(crisbeto): make `close` on by default once all components can handle it.


          if (_this3._config && _this3._config.autoClose) {
            var overlayRect = _this3._overlayRef.overlayElement.getBoundingClientRect();

            var _this3$_viewportRuler = _this3._viewportRuler.getViewportSize(),
                width = _this3$_viewportRuler.width,
                height = _this3$_viewportRuler.height; // TODO(crisbeto): include all ancestor scroll containers here once
            // we have a way of exposing the trigger element to the scroll strategy.


            var parentRects = [{
              width: width,
              height: height,
              bottom: height,
              right: width,
              top: 0,
              left: 0
            }];

            if (isElementScrolledOutsideView(overlayRect, parentRects)) {
              _this3.disable();

              _this3._ngZone.run(function () {
                return _this3._overlayRef.detach();
              });
            }
          }
        });
      }
    }
    /** Disables repositioning of the attached overlay on scroll. */

  }, {
    key: "disable",
    value: function disable() {
      if (this._scrollSubscription) {
        this._scrollSubscription.unsubscribe();

        this._scrollSubscription = null;
      }
    }
  }, {
    key: "detach",
    value: function detach() {
      this.disable();
      this._overlayRef = null;
    }
  }]);

  return RepositionScrollStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Options for how an overlay will handle scrolling.
 *
 * Users can provide a custom value for `ScrollStrategyOptions` to replace the default
 * behaviors. This class primarily acts as a factory for ScrollStrategy instances.
 */


var ScrollStrategyOptions = function ScrollStrategyOptions(_scrollDispatcher, _viewportRuler, _ngZone, document) {
  var _this4 = this;

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ScrollStrategyOptions);

  this._scrollDispatcher = _scrollDispatcher;
  this._viewportRuler = _viewportRuler;
  this._ngZone = _ngZone;
  /** Do nothing on scroll. */

  this.noop = function () {
    return new NoopScrollStrategy();
  };
  /**
   * Close the overlay as soon as the user scrolls.
   * @param config Configuration to be used inside the scroll strategy.
   */


  this.close = function (config) {
    return new CloseScrollStrategy(_this4._scrollDispatcher, _this4._ngZone, _this4._viewportRuler, config);
  };
  /** Block scrolling. */


  this.block = function () {
    return new BlockScrollStrategy(_this4._viewportRuler, _this4._document);
  };
  /**
   * Update the overlay's position on scroll.
   * @param config Configuration to be used inside the scroll strategy.
   * Allows debouncing the reposition calls.
   */


  this.reposition = function (config) {
    return new RepositionScrollStrategy(_this4._scrollDispatcher, _this4._viewportRuler, _this4._ngZone, config);
  };

  this._document = document;
};

ScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) {
  return new (t || ScrollStrategyOptions)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]));
};

ScrollStrategyOptions.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function ScrollStrategyOptions_Factory() {
    return new ScrollStrategyOptions(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]));
  },
  token: ScrollStrategyOptions,
  providedIn: "root"
});

ScrollStrategyOptions.ctorParameters = function () {
  return [{
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]
  }, {
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](ScrollStrategyOptions, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollDispatcher"]
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Initial configuration used when creating an overlay. */


var OverlayConfig = function OverlayConfig(config) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, OverlayConfig);

  /** Strategy to be used when handling scroll events while the overlay is open. */
  this.scrollStrategy = new NoopScrollStrategy();
  /** Custom class to add to the overlay pane. */

  this.panelClass = '';
  /** Whether the overlay has a backdrop. */

  this.hasBackdrop = false;
  /** Custom class to add to the backdrop */

  this.backdropClass = 'cdk-overlay-dark-backdrop';
  /**
   * Whether the overlay should be disposed of when the user goes backwards/forwards in history.
   * Note that this usually doesn't include clicking on links (unless the user is using
   * the `HashLocationStrategy`).
   */

  this.disposeOnNavigation = false;

  if (config) {
    // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,
    // loses the array generic type in the `for of`. But we *also* have to use `Array` because
    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`
    var configKeys = Object.keys(config);

    for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {
      var key = _configKeys[_i];

      if (config[key] !== undefined) {
        // TypeScript, as of version 3.5, sees the left-hand-side of this expression
        // as "I don't know *which* key this is, so the only valid value is the intersection
        // of all the posible values." In this case, that happens to be `undefined`. TypeScript
        // is not smart enough to see that the right-hand-side is actually an access of the same
        // exact type with the same exact key, meaning that the value type must be identical.
        // So we use `any` to work around this.
        this[key] = config[key];
      }
    }
  }
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** The points of the origin element and the overlay element to connect. */


var ConnectionPositionPair = function ConnectionPositionPair(origin, overlay,
/** Offset along the X axis. */
offsetX,
/** Offset along the Y axis. */
offsetY,
/** Class(es) to be applied to the panel while this position is active. */
panelClass) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ConnectionPositionPair);

  this.offsetX = offsetX;
  this.offsetY = offsetY;
  this.panelClass = panelClass;
  this.originX = origin.originX;
  this.originY = origin.originY;
  this.overlayX = overlay.overlayX;
  this.overlayY = overlay.overlayY;
};
/**
 * Set of properties regarding the position of the origin and overlay relative to the viewport
 * with respect to the containing Scrollable elements.
 *
 * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the
 * bounds of any one of the strategy's Scrollable's bounding client rectangle.
 *
 * The overlay and origin are outside view if there is no overlap between their bounding client
 * rectangle and any one of the strategy's Scrollable's bounding client rectangle.
 *
 *       -----------                    -----------
 *       | outside |                    | clipped |
 *       |  view   |              --------------------------
 *       |         |              |     |         |        |
 *       ----------               |     -----------        |
 *  --------------------------    |                        |
 *  |                        |    |      Scrollable        |
 *  |                        |    |                        |
 *  |                        |     --------------------------
 *  |      Scrollable        |
 *  |                        |
 *  --------------------------
 *
 *  @docs-private
 */


var ScrollingVisibility = function ScrollingVisibility() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ScrollingVisibility);
};
/** The change event emitted by the strategy when a fallback position is used. */


var ConnectedOverlayPositionChange = function ConnectedOverlayPositionChange(
/** The position used as a result of this change. */
connectionPair,
/** @docs-private */
scrollableViewProperties) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ConnectedOverlayPositionChange);

  this.connectionPair = connectionPair;
  this.scrollableViewProperties = scrollableViewProperties;
};

ConnectedOverlayPositionChange.ctorParameters = function () {
  return [{
    type: ConnectionPositionPair
  }, {
    type: ScrollingVisibility,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
    }]
  }];
};
/**
 * Validates whether a vertical position property matches the expected values.
 * @param property Name of the property being validated.
 * @param value Value of the property being validated.
 * @docs-private
 */


function validateVerticalPosition(property, value) {
  if (value !== 'top' && value !== 'bottom' && value !== 'center') {
    throw Error("ConnectedPosition: Invalid ".concat(property, " \"").concat(value, "\". ") + "Expected \"top\", \"bottom\" or \"center\".");
  }
}
/**
 * Validates whether a horizontal position property matches the expected values.
 * @param property Name of the property being validated.
 * @param value Value of the property being validated.
 * @docs-private
 */


function validateHorizontalPosition(property, value) {
  if (value !== 'start' && value !== 'end' && value !== 'center') {
    throw Error("ConnectedPosition: Invalid ".concat(property, " \"").concat(value, "\". ") + "Expected \"start\", \"end\" or \"center\".");
  }
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Service for dispatching events that land on the body to appropriate overlay ref,
 * if any. It maintains a list of attached overlays to determine best suited overlay based
 * on event target and order of overlay opens.
 */


var BaseOverlayDispatcher = /*#__PURE__*/function () {
  function BaseOverlayDispatcher(document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, BaseOverlayDispatcher);

    /** Currently attached overlays in the order they were attached. */
    this._attachedOverlays = [];
    this._document = document;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(BaseOverlayDispatcher, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.detach();
    }
    /** Add a new overlay to the list of attached overlay refs. */

  }, {
    key: "add",
    value: function add(overlayRef) {
      // Ensure that we don't get the same overlay multiple times.
      this.remove(overlayRef);

      this._attachedOverlays.push(overlayRef);
    }
    /** Remove an overlay from the list of attached overlay refs. */

  }, {
    key: "remove",
    value: function remove(overlayRef) {
      var index = this._attachedOverlays.indexOf(overlayRef);

      if (index > -1) {
        this._attachedOverlays.splice(index, 1);
      } // Remove the global listener once there are no more overlays.


      if (this._attachedOverlays.length === 0) {
        this.detach();
      }
    }
  }]);

  return BaseOverlayDispatcher;
}();

BaseOverlayDispatcher.ɵfac = function BaseOverlayDispatcher_Factory(t) {
  return new (t || BaseOverlayDispatcher)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]));
};

BaseOverlayDispatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function BaseOverlayDispatcher_Factory() {
    return new BaseOverlayDispatcher(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]));
  },
  token: BaseOverlayDispatcher,
  providedIn: "root"
});

BaseOverlayDispatcher.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](BaseOverlayDispatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Service for dispatching keyboard events that land on the body to appropriate overlay ref,
 * if any. It maintains a list of attached overlays to determine best suited overlay based
 * on event target and order of overlay opens.
 */


var OverlayKeyboardDispatcher = /*#__PURE__*/function (_BaseOverlayDispatche) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(OverlayKeyboardDispatcher, _BaseOverlayDispatche);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(OverlayKeyboardDispatcher);

  function OverlayKeyboardDispatcher(document) {
    var _this5;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, OverlayKeyboardDispatcher);

    _this5 = _super.call(this, document);
    /** Keyboard event listener that will be attached to the body. */

    _this5._keydownListener = function (event) {
      var overlays = _this5._attachedOverlays;

      for (var i = overlays.length - 1; i > -1; i--) {
        // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.
        // We want to target the most recent overlay, rather than trying to match where the event came
        // from, because some components might open an overlay, but keep focus on a trigger element
        // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,
        // because we don't want overlays that don't handle keyboard events to block the ones below
        // them that do.
        if (overlays[i]._keydownEvents.observers.length > 0) {
          overlays[i]._keydownEvents.next(event);

          break;
        }
      }
    };

    return _this5;
  }
  /** Add a new overlay to the list of attached overlay refs. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(OverlayKeyboardDispatcher, [{
    key: "add",
    value: function add(overlayRef) {
      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(OverlayKeyboardDispatcher.prototype), "add", this).call(this, overlayRef); // Lazily start dispatcher once first overlay is added


      if (!this._isAttached) {
        this._document.body.addEventListener('keydown', this._keydownListener);

        this._isAttached = true;
      }
    }
    /** Detaches the global keyboard event listener. */

  }, {
    key: "detach",
    value: function detach() {
      if (this._isAttached) {
        this._document.body.removeEventListener('keydown', this._keydownListener);

        this._isAttached = false;
      }
    }
  }]);

  return OverlayKeyboardDispatcher;
}(BaseOverlayDispatcher);

OverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) {
  return new (t || OverlayKeyboardDispatcher)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]));
};

OverlayKeyboardDispatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function OverlayKeyboardDispatcher_Factory() {
    return new OverlayKeyboardDispatcher(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]));
  },
  token: OverlayKeyboardDispatcher,
  providedIn: "root"
});

OverlayKeyboardDispatcher.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](OverlayKeyboardDispatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/** @docs-private @deprecated @breaking-change 8.0.0 */


function OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {
  return dispatcher || new OverlayKeyboardDispatcher(_document);
}
/** @docs-private @deprecated @breaking-change 8.0.0 */


var OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {
  // If there is already an OverlayKeyboardDispatcher available, use that.
  // Otherwise, provide a new one.
  provide: OverlayKeyboardDispatcher,
  deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_9__["SkipSelf"](), OverlayKeyboardDispatcher], // Coerce to `InjectionToken` so that the `deps` match the "shape"
  // of the type expected by Angular
  _angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]],
  useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Service for dispatching mouse click events that land on the body to appropriate overlay ref,
 * if any. It maintains a list of attached overlays to determine best suited overlay based
 * on event target and order of overlay opens.
 */

var OverlayOutsideClickDispatcher = /*#__PURE__*/function (_BaseOverlayDispatche2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(OverlayOutsideClickDispatcher, _BaseOverlayDispatche2);

  var _super2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(OverlayOutsideClickDispatcher);

  function OverlayOutsideClickDispatcher(document, _platform) {
    var _this6;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, OverlayOutsideClickDispatcher);

    _this6 = _super2.call(this, document);
    _this6._platform = _platform;
    _this6._cursorStyleIsSet = false;
    /** Click event listener that will be attached to the body propagate phase. */

    _this6._clickListener = function (event) {
      // Get the target through the `composedPath` if possible to account for shadow DOM.
      var target = event.composedPath ? event.composedPath()[0] : event.target; // We copy the array because the original may be modified asynchronously if the
      // outsidePointerEvents listener decides to detach overlays resulting in index errors inside
      // the for loop.

      var overlays = _this6._attachedOverlays.slice(); // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.
      // We want to target all overlays for which the click could be considered as outside click.
      // As soon as we reach an overlay for which the click is not outside click we break off
      // the loop.


      for (var i = overlays.length - 1; i > -1; i--) {
        var overlayRef = overlays[i];

        if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {
          continue;
        } // If it's a click inside the overlay, just break - we should do nothing
        // If it's an outside click dispatch the mouse event, and proceed with the next overlay


        if (overlayRef.overlayElement.contains(target)) {
          break;
        }

        overlayRef._outsidePointerEvents.next(event);
      }
    };

    return _this6;
  }
  /** Add a new overlay to the list of attached overlay refs. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(OverlayOutsideClickDispatcher, [{
    key: "add",
    value: function add(overlayRef) {
      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(OverlayOutsideClickDispatcher.prototype), "add", this).call(this, overlayRef); // tslint:disable: max-line-length
      // Safari on iOS does not generate click events for non-interactive
      // elements. However, we want to receive a click for any element outside
      // the overlay. We can force a "clickable" state by setting
      // `cursor: pointer` on the document body.
      // See https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile
      // and https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html
      // tslint:enable: max-line-length


      if (!this._isAttached) {
        this._document.body.addEventListener('click', this._clickListener, true);

        this._document.body.addEventListener('contextmenu', this._clickListener, true); // click event is not fired on iOS. To make element "clickable" we are
        // setting the cursor to pointer


        if (this._platform.IOS && !this._cursorStyleIsSet) {
          this._cursorOriginalValue = this._document.body.style.cursor;
          this._document.body.style.cursor = 'pointer';
          this._cursorStyleIsSet = true;
        }

        this._isAttached = true;
      }
    }
    /** Detaches the global keyboard event listener. */

  }, {
    key: "detach",
    value: function detach() {
      if (this._isAttached) {
        this._document.body.removeEventListener('click', this._clickListener, true);

        this._document.body.removeEventListener('contextmenu', this._clickListener, true);

        if (this._platform.IOS && this._cursorStyleIsSet) {
          this._document.body.style.cursor = this._cursorOriginalValue;
          this._cursorStyleIsSet = false;
        }

        this._isAttached = false;
      }
    }
  }]);

  return OverlayOutsideClickDispatcher;
}(BaseOverlayDispatcher);

OverlayOutsideClickDispatcher.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) {
  return new (t || OverlayOutsideClickDispatcher)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]));
};

OverlayOutsideClickDispatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function OverlayOutsideClickDispatcher_Factory() {
    return new OverlayOutsideClickDispatcher(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]));
  },
  token: OverlayOutsideClickDispatcher,
  providedIn: "root"
});

OverlayOutsideClickDispatcher.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](OverlayOutsideClickDispatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Whether we're in a testing environment.
 * TODO(crisbeto): remove this once we have an overlay testing module.
 */


var isTestEnvironment = typeof window !== 'undefined' && !!window && !!(window.__karma__ || window.jasmine);
/** Container inside which all overlays will render. */

var OverlayContainer = /*#__PURE__*/function () {
  function OverlayContainer(document,
  /**
   * @deprecated `platform` parameter to become required.
   * @breaking-change 10.0.0
   */
  _platform) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, OverlayContainer);

    this._platform = _platform;
    this._document = document;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(OverlayContainer, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var container = this._containerElement;

      if (container && container.parentNode) {
        container.parentNode.removeChild(container);
      }
    }
    /**
     * This method returns the overlay container element. It will lazily
     * create the element the first time  it is called to facilitate using
     * the container in non-browser environments.
     * @returns the container element
     */

  }, {
    key: "getContainerElement",
    value: function getContainerElement() {
      if (!this._containerElement) {
        this._createContainer();
      }

      return this._containerElement;
    }
    /**
     * Create the overlay container element, which is simply a div
     * with the 'cdk-overlay-container' class on the document body.
     */

  }, {
    key: "_createContainer",
    value: function _createContainer() {
      // @breaking-change 10.0.0 Remove null check for `_platform`.
      var isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';
      var containerClass = 'cdk-overlay-container';

      if (isBrowser || isTestEnvironment) {
        var oppositePlatformContainers = this._document.querySelectorAll(".".concat(containerClass, "[platform=\"server\"], ") + ".".concat(containerClass, "[platform=\"test\"]")); // Remove any old containers from the opposite platform.
        // This can happen when transitioning from the server to the client.


        for (var i = 0; i < oppositePlatformContainers.length; i++) {
          oppositePlatformContainers[i].parentNode.removeChild(oppositePlatformContainers[i]);
        }
      }

      var container = this._document.createElement('div');

      container.classList.add(containerClass); // A long time ago we kept adding new overlay containers whenever a new app was instantiated,
      // but at some point we added logic which clears the duplicate ones in order to avoid leaks.
      // The new logic was a little too aggressive since it was breaking some legitimate use cases.
      // To mitigate the problem we made it so that only containers from a different platform are
      // cleared, but the side-effect was that people started depending on the overly-aggressive
      // logic to clean up their tests for them. Until we can introduce an overlay-specific testing
      // module which does the cleanup, we try to detect that we're in a test environment and we
      // always clear the container. See #17006.
      // TODO(crisbeto): remove the test environment check once we have an overlay testing module.

      if (isTestEnvironment) {
        container.setAttribute('platform', 'test');
      } else if (!isBrowser) {
        container.setAttribute('platform', 'server');
      }

      this._document.body.appendChild(container);

      this._containerElement = container;
    }
  }]);

  return OverlayContainer;
}();

OverlayContainer.ɵfac = function OverlayContainer_Factory(t) {
  return new (t || OverlayContainer)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]));
};

OverlayContainer.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function OverlayContainer_Factory() {
    return new OverlayContainer(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]));
  },
  token: OverlayContainer,
  providedIn: "root"
});

OverlayContainer.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](OverlayContainer, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
    }];
  }, null);
})();
/** @docs-private @deprecated @breaking-change 8.0.0 */


function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {
  return parentContainer || new OverlayContainer(_document);
}
/** @docs-private @deprecated @breaking-change 8.0.0 */


var OVERLAY_CONTAINER_PROVIDER = {
  // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.
  provide: OverlayContainer,
  deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_9__["SkipSelf"](), OverlayContainer], _angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"] // We need to use the InjectionToken somewhere to keep TS happy
  ],
  useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Reference to an overlay that has been created with the Overlay service.
 * Used to manipulate or dispose of said overlay.
 */

var OverlayRef = /*#__PURE__*/function () {
  function OverlayRef(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, // @breaking-change 8.0.0 `_location` parameter to be made required.
  _location, // @breaking-change 9.0.0 `_mouseClickDispatcher` parameter to be made required.
  _outsideClickDispatcher) {
    var _this7 = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, OverlayRef);

    this._portalOutlet = _portalOutlet;
    this._host = _host;
    this._pane = _pane;
    this._config = _config;
    this._ngZone = _ngZone;
    this._keyboardDispatcher = _keyboardDispatcher;
    this._document = _document;
    this._location = _location;
    this._outsideClickDispatcher = _outsideClickDispatcher;
    this._backdropElement = null;
    this._backdropClick = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    this._attachments = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    this._detachments = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    this._locationChanges = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;

    this._backdropClickHandler = function (event) {
      return _this7._backdropClick.next(event);
    };
    /** Stream of keydown events dispatched to this overlay. */


    this._keydownEvents = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /** Stream of mouse outside events dispatched to this overlay. */

    this._outsidePointerEvents = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();

    if (_config.scrollStrategy) {
      this._scrollStrategy = _config.scrollStrategy;

      this._scrollStrategy.attach(this);
    }

    this._positionStrategy = _config.positionStrategy;
  }
  /** The overlay's HTML element */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(OverlayRef, [{
    key: "overlayElement",
    get: function get() {
      return this._pane;
    }
    /** The overlay's backdrop HTML element. */

  }, {
    key: "backdropElement",
    get: function get() {
      return this._backdropElement;
    }
    /**
     * Wrapper around the panel element. Can be used for advanced
     * positioning where a wrapper with specific styling is
     * required around the overlay pane.
     */

  }, {
    key: "hostElement",
    get: function get() {
      return this._host;
    }
    /**
     * Attaches content, given via a Portal, to the overlay.
     * If the overlay is configured to have a backdrop, it will be created.
     *
     * @param portal Portal instance to which to attach the overlay.
     * @returns The portal attachment result.
     */

  }, {
    key: "attach",
    value: function attach(portal) {
      var _this8 = this;

      var attachResult = this._portalOutlet.attach(portal); // Update the pane element with the given configuration.


      if (!this._host.parentElement && this._previousHostParent) {
        this._previousHostParent.appendChild(this._host);
      }

      if (this._positionStrategy) {
        this._positionStrategy.attach(this);
      }

      this._updateStackingOrder();

      this._updateElementSize();

      this._updateElementDirection();

      if (this._scrollStrategy) {
        this._scrollStrategy.enable();
      } // Update the position once the zone is stable so that the overlay will be fully rendered
      // before attempting to position it, as the position may depend on the size of the rendered
      // content.


      this._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["take"])(1)).subscribe(function () {
        // The overlay could've been detached before the zone has stabilized.
        if (_this8.hasAttached()) {
          _this8.updatePosition();
        }
      }); // Enable pointer events for the overlay pane element.


      this._togglePointerEvents(true);

      if (this._config.hasBackdrop) {
        this._attachBackdrop();
      }

      if (this._config.panelClass) {
        this._toggleClasses(this._pane, this._config.panelClass, true);
      } // Only emit the `attachments` event once all other setup is done.


      this._attachments.next(); // Track this overlay by the keyboard dispatcher


      this._keyboardDispatcher.add(this); // @breaking-change 8.0.0 remove the null check for `_location`
      // once the constructor parameter is made required.


      if (this._config.disposeOnNavigation && this._location) {
        this._locationChanges = this._location.subscribe(function () {
          return _this8.dispose();
        });
      } // @breaking-change 9.0.0 remove the null check for `_mouseClickDispatcher`


      if (this._outsideClickDispatcher) {
        this._outsideClickDispatcher.add(this);
      }

      return attachResult;
    }
    /**
     * Detaches an overlay from a portal.
     * @returns The portal detachment result.
     */

  }, {
    key: "detach",
    value: function detach() {
      if (!this.hasAttached()) {
        return;
      }

      this.detachBackdrop(); // When the overlay is detached, the pane element should disable pointer events.
      // This is necessary because otherwise the pane element will cover the page and disable
      // pointer events therefore. Depends on the position strategy and the applied pane boundaries.

      this._togglePointerEvents(false);

      if (this._positionStrategy && this._positionStrategy.detach) {
        this._positionStrategy.detach();
      }

      if (this._scrollStrategy) {
        this._scrollStrategy.disable();
      }

      var detachmentResult = this._portalOutlet.detach(); // Only emit after everything is detached.


      this._detachments.next(); // Remove this overlay from keyboard dispatcher tracking.


      this._keyboardDispatcher.remove(this); // Keeping the host element in the DOM can cause scroll jank, because it still gets
      // rendered, even though it's transparent and unclickable which is why we remove it.


      this._detachContentWhenStable(); // Stop listening for location changes.


      this._locationChanges.unsubscribe(); // @breaking-change 9.0.0 remove the null check for `_outsideClickDispatcher`


      if (this._outsideClickDispatcher) {
        this._outsideClickDispatcher.remove(this);
      }

      return detachmentResult;
    }
    /** Cleans up the overlay from the DOM. */

  }, {
    key: "dispose",
    value: function dispose() {
      var isAttached = this.hasAttached();

      if (this._positionStrategy) {
        this._positionStrategy.dispose();
      }

      this._disposeScrollStrategy();

      this.detachBackdrop();

      this._locationChanges.unsubscribe();

      this._keyboardDispatcher.remove(this);

      this._portalOutlet.dispose();

      this._attachments.complete();

      this._backdropClick.complete();

      this._keydownEvents.complete();

      this._outsidePointerEvents.complete(); // @breaking-change 9.0.0 remove the null check for `_outsideClickDispatcher`


      if (this._outsideClickDispatcher) {
        this._outsideClickDispatcher.remove(this);
      }

      if (this._host && this._host.parentNode) {
        this._host.parentNode.removeChild(this._host);

        this._host = null;
      }

      this._previousHostParent = this._pane = null;

      if (isAttached) {
        this._detachments.next();
      }

      this._detachments.complete();
    }
    /** Whether the overlay has attached content. */

  }, {
    key: "hasAttached",
    value: function hasAttached() {
      return this._portalOutlet.hasAttached();
    }
    /** Gets an observable that emits when the backdrop has been clicked. */

  }, {
    key: "backdropClick",
    value: function backdropClick() {
      return this._backdropClick;
    }
    /** Gets an observable that emits when the overlay has been attached. */

  }, {
    key: "attachments",
    value: function attachments() {
      return this._attachments;
    }
    /** Gets an observable that emits when the overlay has been detached. */

  }, {
    key: "detachments",
    value: function detachments() {
      return this._detachments;
    }
    /** Gets an observable of keydown events targeted to this overlay. */

  }, {
    key: "keydownEvents",
    value: function keydownEvents() {
      return this._keydownEvents;
    }
    /** Gets an observable of pointer events targeted outside this overlay. */

  }, {
    key: "outsidePointerEvents",
    value: function outsidePointerEvents() {
      return this._outsidePointerEvents;
    }
    /** Gets the current overlay configuration, which is immutable. */

  }, {
    key: "getConfig",
    value: function getConfig() {
      return this._config;
    }
    /** Updates the position of the overlay based on the position strategy. */

  }, {
    key: "updatePosition",
    value: function updatePosition() {
      if (this._positionStrategy) {
        this._positionStrategy.apply();
      }
    }
    /** Switches to a new position strategy and updates the overlay position. */

  }, {
    key: "updatePositionStrategy",
    value: function updatePositionStrategy(strategy) {
      if (strategy === this._positionStrategy) {
        return;
      }

      if (this._positionStrategy) {
        this._positionStrategy.dispose();
      }

      this._positionStrategy = strategy;

      if (this.hasAttached()) {
        strategy.attach(this);
        this.updatePosition();
      }
    }
    /** Update the size properties of the overlay. */

  }, {
    key: "updateSize",
    value: function updateSize(sizeConfig) {
      this._config = Object.assign(Object.assign({}, this._config), sizeConfig);

      this._updateElementSize();
    }
    /** Sets the LTR/RTL direction for the overlay. */

  }, {
    key: "setDirection",
    value: function setDirection(dir) {
      this._config = Object.assign(Object.assign({}, this._config), {
        direction: dir
      });

      this._updateElementDirection();
    }
    /** Add a CSS class or an array of classes to the overlay pane. */

  }, {
    key: "addPanelClass",
    value: function addPanelClass(classes) {
      if (this._pane) {
        this._toggleClasses(this._pane, classes, true);
      }
    }
    /** Remove a CSS class or an array of classes from the overlay pane. */

  }, {
    key: "removePanelClass",
    value: function removePanelClass(classes) {
      if (this._pane) {
        this._toggleClasses(this._pane, classes, false);
      }
    }
    /**
     * Returns the layout direction of the overlay panel.
     */

  }, {
    key: "getDirection",
    value: function getDirection() {
      var direction = this._config.direction;

      if (!direction) {
        return 'ltr';
      }

      return typeof direction === 'string' ? direction : direction.value;
    }
    /** Switches to a new scroll strategy. */

  }, {
    key: "updateScrollStrategy",
    value: function updateScrollStrategy(strategy) {
      if (strategy === this._scrollStrategy) {
        return;
      }

      this._disposeScrollStrategy();

      this._scrollStrategy = strategy;

      if (this.hasAttached()) {
        strategy.attach(this);
        strategy.enable();
      }
    }
    /** Updates the text direction of the overlay panel. */

  }, {
    key: "_updateElementDirection",
    value: function _updateElementDirection() {
      this._host.setAttribute('dir', this.getDirection());
    }
    /** Updates the size of the overlay element based on the overlay config. */

  }, {
    key: "_updateElementSize",
    value: function _updateElementSize() {
      if (!this._pane) {
        return;
      }

      var style = this._pane.style;
      style.width = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(this._config.width);
      style.height = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(this._config.height);
      style.minWidth = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(this._config.minWidth);
      style.minHeight = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(this._config.minHeight);
      style.maxWidth = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(this._config.maxWidth);
      style.maxHeight = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(this._config.maxHeight);
    }
    /** Toggles the pointer events for the overlay pane element. */

  }, {
    key: "_togglePointerEvents",
    value: function _togglePointerEvents(enablePointer) {
      this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';
    }
    /** Attaches a backdrop for this overlay. */

  }, {
    key: "_attachBackdrop",
    value: function _attachBackdrop() {
      var _this9 = this;

      var showingClass = 'cdk-overlay-backdrop-showing';
      this._backdropElement = this._document.createElement('div');

      this._backdropElement.classList.add('cdk-overlay-backdrop');

      if (this._config.backdropClass) {
        this._toggleClasses(this._backdropElement, this._config.backdropClass, true);
      } // Insert the backdrop before the pane in the DOM order,
      // in order to handle stacked overlays properly.


      this._host.parentElement.insertBefore(this._backdropElement, this._host); // Forward backdrop clicks such that the consumer of the overlay can perform whatever
      // action desired when such a click occurs (usually closing the overlay).


      this._backdropElement.addEventListener('click', this._backdropClickHandler); // Add class to fade-in the backdrop after one frame.


      if (typeof requestAnimationFrame !== 'undefined') {
        this._ngZone.runOutsideAngular(function () {
          requestAnimationFrame(function () {
            if (_this9._backdropElement) {
              _this9._backdropElement.classList.add(showingClass);
            }
          });
        });
      } else {
        this._backdropElement.classList.add(showingClass);
      }
    }
    /**
     * Updates the stacking order of the element, moving it to the top if necessary.
     * This is required in cases where one overlay was detached, while another one,
     * that should be behind it, was destroyed. The next time both of them are opened,
     * the stacking will be wrong, because the detached element's pane will still be
     * in its original DOM position.
     */

  }, {
    key: "_updateStackingOrder",
    value: function _updateStackingOrder() {
      if (this._host.nextSibling) {
        this._host.parentNode.appendChild(this._host);
      }
    }
    /** Detaches the backdrop (if any) associated with the overlay. */

  }, {
    key: "detachBackdrop",
    value: function detachBackdrop() {
      var _this10 = this;

      var backdropToDetach = this._backdropElement;

      if (!backdropToDetach) {
        return;
      }

      var timeoutId;

      var finishDetach = function finishDetach() {
        // It may not be attached to anything in certain cases (e.g. unit tests).
        if (backdropToDetach) {
          backdropToDetach.removeEventListener('click', _this10._backdropClickHandler);
          backdropToDetach.removeEventListener('transitionend', finishDetach);

          if (backdropToDetach.parentNode) {
            backdropToDetach.parentNode.removeChild(backdropToDetach);
          }
        } // It is possible that a new portal has been attached to this overlay since we started
        // removing the backdrop. If that is the case, only clear the backdrop reference if it
        // is still the same instance that we started to remove.


        if (_this10._backdropElement == backdropToDetach) {
          _this10._backdropElement = null;
        }

        if (_this10._config.backdropClass) {
          _this10._toggleClasses(backdropToDetach, _this10._config.backdropClass, false);
        }

        clearTimeout(timeoutId);
      };

      backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');

      this._ngZone.runOutsideAngular(function () {
        backdropToDetach.addEventListener('transitionend', finishDetach);
      }); // If the backdrop doesn't have a transition, the `transitionend` event won't fire.
      // In this case we make it unclickable and we try to remove it after a delay.


      backdropToDetach.style.pointerEvents = 'none'; // Run this outside the Angular zone because there's nothing that Angular cares about.
      // If it were to run inside the Angular zone, every test that used Overlay would have to be
      // either async or fakeAsync.

      timeoutId = this._ngZone.runOutsideAngular(function () {
        return setTimeout(finishDetach, 500);
      });
    }
    /** Toggles a single CSS class or an array of classes on an element. */

  }, {
    key: "_toggleClasses",
    value: function _toggleClasses(element, cssClasses, isAdd) {
      var classList = element.classList;
      Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceArray"])(cssClasses).forEach(function (cssClass) {
        // We can't do a spread here, because IE doesn't support setting multiple classes.
        // Also trying to add an empty string to a DOMTokenList will throw.
        if (cssClass) {
          isAdd ? classList.add(cssClass) : classList.remove(cssClass);
        }
      });
    }
    /** Detaches the overlay content next time the zone stabilizes. */

  }, {
    key: "_detachContentWhenStable",
    value: function _detachContentWhenStable() {
      var _this11 = this;

      // Normally we wouldn't have to explicitly run this outside the `NgZone`, however
      // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will
      // be patched to run inside the zone, which will throw us into an infinite loop.
      this._ngZone.runOutsideAngular(function () {
        // We can't remove the host here immediately, because the overlay pane's content
        // might still be animating. This stream helps us avoid interrupting the animation
        // by waiting for the pane to become empty.
        var subscription = _this11._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeUntil"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["merge"])(_this11._attachments, _this11._detachments))).subscribe(function () {
          // Needs a couple of checks for the pane and host, because
          // they may have been removed by the time the zone stabilizes.
          if (!_this11._pane || !_this11._host || _this11._pane.children.length === 0) {
            if (_this11._pane && _this11._config.panelClass) {
              _this11._toggleClasses(_this11._pane, _this11._config.panelClass, false);
            }

            if (_this11._host && _this11._host.parentElement) {
              _this11._previousHostParent = _this11._host.parentElement;

              _this11._previousHostParent.removeChild(_this11._host);
            }

            subscription.unsubscribe();
          }
        });
      });
    }
    /** Disposes of a scroll strategy. */

  }, {
    key: "_disposeScrollStrategy",
    value: function _disposeScrollStrategy() {
      var scrollStrategy = this._scrollStrategy;

      if (scrollStrategy) {
        scrollStrategy.disable();

        if (scrollStrategy.detach) {
          scrollStrategy.detach();
        }
      }
    }
  }]);

  return OverlayRef;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO: refactor clipping detection into a separate thing (part of scrolling module)
// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.

/** Class to be added to the overlay bounding box. */


var boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';
/** Regex used to split a string on its CSS units. */

var cssUnitPattern = /([A-Za-z%]+)$/;
/**
 * A strategy for positioning overlays. Using this strategy, an overlay is given an
 * implicit position relative some origin element. The relative position is defined in terms of
 * a point on the origin element that is connected to a point on the overlay element. For example,
 * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner
 * of the overlay.
 */

var FlexibleConnectedPositionStrategy = /*#__PURE__*/function () {
  function FlexibleConnectedPositionStrategy(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, FlexibleConnectedPositionStrategy);

    this._viewportRuler = _viewportRuler;
    this._document = _document;
    this._platform = _platform;
    this._overlayContainer = _overlayContainer;
    /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */

    this._lastBoundingBoxSize = {
      width: 0,
      height: 0
    };
    /** Whether the overlay was pushed in a previous positioning. */

    this._isPushed = false;
    /** Whether the overlay can be pushed on-screen on the initial open. */

    this._canPush = true;
    /** Whether the overlay can grow via flexible width/height after the initial open. */

    this._growAfterOpen = false;
    /** Whether the overlay's width and height can be constrained to fit within the viewport. */

    this._hasFlexibleDimensions = true;
    /** Whether the overlay position is locked. */

    this._positionLocked = false;
    /** Amount of space that must be maintained between the overlay and the edge of the viewport. */

    this._viewportMargin = 0;
    /** The Scrollable containers used to check scrollable view properties on position change. */

    this._scrollables = [];
    /** Ordered list of preferred positions, from most to least desirable. */

    this._preferredPositions = [];
    /** Subject that emits whenever the position changes. */

    this._positionChanges = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /** Subscription to viewport size changes. */

    this._resizeSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    /** Default offset for the overlay along the x axis. */

    this._offsetX = 0;
    /** Default offset for the overlay along the y axis. */

    this._offsetY = 0;
    /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */

    this._appliedPanelClasses = [];
    /** Observable sequence of position changes. */

    this.positionChanges = this._positionChanges;
    this.setOrigin(connectedTo);
  }
  /** Ordered list of preferred positions, from most to least desirable. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(FlexibleConnectedPositionStrategy, [{
    key: "positions",
    get: function get() {
      return this._preferredPositions;
    }
    /** Attaches this position strategy to an overlay. */

  }, {
    key: "attach",
    value: function attach(overlayRef) {
      var _this12 = this;

      if (this._overlayRef && overlayRef !== this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('This position strategy is already attached to an overlay');
      }

      this._validatePositions();

      overlayRef.hostElement.classList.add(boundingBoxClass);
      this._overlayRef = overlayRef;
      this._boundingBox = overlayRef.hostElement;
      this._pane = overlayRef.overlayElement;
      this._isDisposed = false;
      this._isInitialRender = true;
      this._lastPosition = null;

      this._resizeSubscription.unsubscribe();

      this._resizeSubscription = this._viewportRuler.change().subscribe(function () {
        // When the window is resized, we want to trigger the next reposition as if it
        // was an initial render, in order for the strategy to pick a new optimal position,
        // otherwise position locking will cause it to stay at the old one.
        _this12._isInitialRender = true;

        _this12.apply();
      });
    }
    /**
     * Updates the position of the overlay element, using whichever preferred position relative
     * to the origin best fits on-screen.
     *
     * The selection of a position goes as follows:
     *  - If any positions fit completely within the viewport as-is,
     *      choose the first position that does so.
     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,
     *      choose the position with the greatest available size modified by the positions' weight.
     *  - If pushing is enabled, take the position that went off-screen the least and push it
     *      on-screen.
     *  - If none of the previous criteria were met, use the position that goes off-screen the least.
     * @docs-private
     */

  }, {
    key: "apply",
    value: function apply() {
      // We shouldn't do anything if the strategy was disposed or we're on the server.
      if (this._isDisposed || !this._platform.isBrowser) {
        return;
      } // If the position has been applied already (e.g. when the overlay was opened) and the
      // consumer opted into locking in the position, re-use the old position, in order to
      // prevent the overlay from jumping around.


      if (!this._isInitialRender && this._positionLocked && this._lastPosition) {
        this.reapplyLastPosition();
        return;
      }

      this._clearPanelClasses();

      this._resetOverlayElementStyles();

      this._resetBoundingBoxStyles(); // We need the bounding rects for the origin and the overlay to determine how to position
      // the overlay relative to the origin.
      // We use the viewport rect to determine whether a position would go off-screen.


      this._viewportRect = this._getNarrowedViewportRect();
      this._originRect = this._getOriginRect();
      this._overlayRect = this._pane.getBoundingClientRect();
      var originRect = this._originRect;
      var overlayRect = this._overlayRect;
      var viewportRect = this._viewportRect; // Positions where the overlay will fit with flexible dimensions.

      var flexibleFits = []; // Fallback if none of the preferred positions fit within the viewport.

      var fallback; // Go through each of the preferred positions looking for a good fit.
      // If a good fit is found, it will be applied immediately.

      var _iterator = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(this._preferredPositions),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var pos = _step.value;

          // Get the exact (x, y) coordinate for the point-of-origin on the origin element.
          var originPoint = this._getOriginPoint(originRect, pos); // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the
          // overlay in this position. We use the top-left corner for calculations and later translate
          // this into an appropriate (top, left, bottom, right) style.


          var overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos); // Calculate how well the overlay would fit into the viewport with this point.


          var overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos); // If the overlay, without any further work, fits into the viewport, use this position.


          if (overlayFit.isCompletelyWithinViewport) {
            this._isPushed = false;

            this._applyPosition(pos, originPoint);

            return;
          } // If the overlay has flexible dimensions, we can use this position
          // so long as there's enough space for the minimum dimensions.


          if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {
            // Save positions where the overlay will fit with flexible dimensions. We will use these
            // if none of the positions fit *without* flexible dimensions.
            flexibleFits.push({
              position: pos,
              origin: originPoint,
              overlayRect: overlayRect,
              boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)
            });
            continue;
          } // If the current preferred position does not fit on the screen, remember the position
          // if it has more visible area on-screen than we've seen and move onto the next preferred
          // position.


          if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {
            fallback = {
              overlayFit: overlayFit,
              overlayPoint: overlayPoint,
              originPoint: originPoint,
              position: pos,
              overlayRect: overlayRect
            };
          }
        } // If there are any positions where the overlay would fit with flexible dimensions, choose the
        // one that has the greatest area available modified by the position's weight

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if (flexibleFits.length) {
        var bestFit = null;
        var bestScore = -1;

        var _iterator2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(flexibleFits),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var fit = _step2.value;
            var score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);

            if (score > bestScore) {
              bestScore = score;
              bestFit = fit;
            }
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }

        this._isPushed = false;

        this._applyPosition(bestFit.position, bestFit.origin);

        return;
      } // When none of the preferred positions fit within the viewport, take the position
      // that went off-screen the least and attempt to push it on-screen.


      if (this._canPush) {
        // TODO(jelbourn): after pushing, the opening "direction" of the overlay might not make sense.
        this._isPushed = true;

        this._applyPosition(fallback.position, fallback.originPoint);

        return;
      } // All options for getting the overlay within the viewport have been exhausted, so go with the
      // position that went off-screen the least.


      this._applyPosition(fallback.position, fallback.originPoint);
    }
  }, {
    key: "detach",
    value: function detach() {
      this._clearPanelClasses();

      this._lastPosition = null;
      this._previousPushAmount = null;

      this._resizeSubscription.unsubscribe();
    }
    /** Cleanup after the element gets destroyed. */

  }, {
    key: "dispose",
    value: function dispose() {
      if (this._isDisposed) {
        return;
      } // We can't use `_resetBoundingBoxStyles` here, because it resets
      // some properties to zero, rather than removing them.


      if (this._boundingBox) {
        extendStyles(this._boundingBox.style, {
          top: '',
          left: '',
          right: '',
          bottom: '',
          height: '',
          width: '',
          alignItems: '',
          justifyContent: ''
        });
      }

      if (this._pane) {
        this._resetOverlayElementStyles();
      }

      if (this._overlayRef) {
        this._overlayRef.hostElement.classList.remove(boundingBoxClass);
      }

      this.detach();

      this._positionChanges.complete();

      this._overlayRef = this._boundingBox = null;
      this._isDisposed = true;
    }
    /**
     * This re-aligns the overlay element with the trigger in its last calculated position,
     * even if a position higher in the "preferred positions" list would now fit. This
     * allows one to re-align the panel without changing the orientation of the panel.
     */

  }, {
    key: "reapplyLastPosition",
    value: function reapplyLastPosition() {
      if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {
        this._originRect = this._getOriginRect();
        this._overlayRect = this._pane.getBoundingClientRect();
        this._viewportRect = this._getNarrowedViewportRect();
        var lastPosition = this._lastPosition || this._preferredPositions[0];

        var originPoint = this._getOriginPoint(this._originRect, lastPosition);

        this._applyPosition(lastPosition, originPoint);
      }
    }
    /**
     * Sets the list of Scrollable containers that host the origin element so that
     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every
     * Scrollable must be an ancestor element of the strategy's origin element.
     */

  }, {
    key: "withScrollableContainers",
    value: function withScrollableContainers(scrollables) {
      this._scrollables = scrollables;
      return this;
    }
    /**
     * Adds new preferred positions.
     * @param positions List of positions options for this overlay.
     */

  }, {
    key: "withPositions",
    value: function withPositions(positions) {
      this._preferredPositions = positions; // If the last calculated position object isn't part of the positions anymore, clear
      // it in order to avoid it being picked up if the consumer tries to re-apply.

      if (positions.indexOf(this._lastPosition) === -1) {
        this._lastPosition = null;
      }

      this._validatePositions();

      return this;
    }
    /**
     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.
     * @param margin Required margin between the overlay and the viewport edge in pixels.
     */

  }, {
    key: "withViewportMargin",
    value: function withViewportMargin(margin) {
      this._viewportMargin = margin;
      return this;
    }
    /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */

  }, {
    key: "withFlexibleDimensions",
    value: function withFlexibleDimensions() {
      var flexibleDimensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._hasFlexibleDimensions = flexibleDimensions;
      return this;
    }
    /** Sets whether the overlay can grow after the initial open via flexible width/height. */

  }, {
    key: "withGrowAfterOpen",
    value: function withGrowAfterOpen() {
      var growAfterOpen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._growAfterOpen = growAfterOpen;
      return this;
    }
    /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */

  }, {
    key: "withPush",
    value: function withPush() {
      var canPush = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._canPush = canPush;
      return this;
    }
    /**
     * Sets whether the overlay's position should be locked in after it is positioned
     * initially. When an overlay is locked in, it won't attempt to reposition itself
     * when the position is re-applied (e.g. when the user scrolls away).
     * @param isLocked Whether the overlay should locked in.
     */

  }, {
    key: "withLockedPosition",
    value: function withLockedPosition() {
      var isLocked = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._positionLocked = isLocked;
      return this;
    }
    /**
     * Sets the origin, relative to which to position the overlay.
     * Using an element origin is useful for building components that need to be positioned
     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be
     * used for cases like contextual menus which open relative to the user's pointer.
     * @param origin Reference to the new origin.
     */

  }, {
    key: "setOrigin",
    value: function setOrigin(origin) {
      this._origin = origin;
      return this;
    }
    /**
     * Sets the default offset for the overlay's connection point on the x-axis.
     * @param offset New offset in the X axis.
     */

  }, {
    key: "withDefaultOffsetX",
    value: function withDefaultOffsetX(offset) {
      this._offsetX = offset;
      return this;
    }
    /**
     * Sets the default offset for the overlay's connection point on the y-axis.
     * @param offset New offset in the Y axis.
     */

  }, {
    key: "withDefaultOffsetY",
    value: function withDefaultOffsetY(offset) {
      this._offsetY = offset;
      return this;
    }
    /**
     * Configures that the position strategy should set a `transform-origin` on some elements
     * inside the overlay, depending on the current position that is being applied. This is
     * useful for the cases where the origin of an animation can change depending on the
     * alignment of the overlay.
     * @param selector CSS selector that will be used to find the target
     *    elements onto which to set the transform origin.
     */

  }, {
    key: "withTransformOriginOn",
    value: function withTransformOriginOn(selector) {
      this._transformOriginSelector = selector;
      return this;
    }
    /**
     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.
     */

  }, {
    key: "_getOriginPoint",
    value: function _getOriginPoint(originRect, pos) {
      var x;

      if (pos.originX == 'center') {
        // Note: when centering we should always use the `left`
        // offset, otherwise the position will be wrong in RTL.
        x = originRect.left + originRect.width / 2;
      } else {
        var startX = this._isRtl() ? originRect.right : originRect.left;
        var endX = this._isRtl() ? originRect.left : originRect.right;
        x = pos.originX == 'start' ? startX : endX;
      }

      var y;

      if (pos.originY == 'center') {
        y = originRect.top + originRect.height / 2;
      } else {
        y = pos.originY == 'top' ? originRect.top : originRect.bottom;
      }

      return {
        x: x,
        y: y
      };
    }
    /**
     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and
     * origin point to which the overlay should be connected.
     */

  }, {
    key: "_getOverlayPoint",
    value: function _getOverlayPoint(originPoint, overlayRect, pos) {
      // Calculate the (overlayStartX, overlayStartY), the start of the
      // potential overlay position relative to the origin point.
      var overlayStartX;

      if (pos.overlayX == 'center') {
        overlayStartX = -overlayRect.width / 2;
      } else if (pos.overlayX === 'start') {
        overlayStartX = this._isRtl() ? -overlayRect.width : 0;
      } else {
        overlayStartX = this._isRtl() ? 0 : -overlayRect.width;
      }

      var overlayStartY;

      if (pos.overlayY == 'center') {
        overlayStartY = -overlayRect.height / 2;
      } else {
        overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;
      } // The (x, y) coordinates of the overlay.


      return {
        x: originPoint.x + overlayStartX,
        y: originPoint.y + overlayStartY
      };
    }
    /** Gets how well an overlay at the given point will fit within the viewport. */

  }, {
    key: "_getOverlayFit",
    value: function _getOverlayFit(point, overlay, viewport, position) {
      var x = point.x,
          y = point.y;

      var offsetX = this._getOffset(position, 'x');

      var offsetY = this._getOffset(position, 'y'); // Account for the offsets since they could push the overlay out of the viewport.


      if (offsetX) {
        x += offsetX;
      }

      if (offsetY) {
        y += offsetY;
      } // How much the overlay would overflow at this position, on each side.


      var leftOverflow = 0 - x;
      var rightOverflow = x + overlay.width - viewport.width;
      var topOverflow = 0 - y;
      var bottomOverflow = y + overlay.height - viewport.height; // Visible parts of the element on each axis.

      var visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);

      var visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);

      var visibleArea = visibleWidth * visibleHeight;
      return {
        visibleArea: visibleArea,
        isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,
        fitsInViewportVertically: visibleHeight === overlay.height,
        fitsInViewportHorizontally: visibleWidth == overlay.width
      };
    }
    /**
     * Whether the overlay can fit within the viewport when it may resize either its width or height.
     * @param fit How well the overlay fits in the viewport at some position.
     * @param point The (x, y) coordinates of the overlat at some position.
     * @param viewport The geometry of the viewport.
     */

  }, {
    key: "_canFitWithFlexibleDimensions",
    value: function _canFitWithFlexibleDimensions(fit, point, viewport) {
      if (this._hasFlexibleDimensions) {
        var availableHeight = viewport.bottom - point.y;
        var availableWidth = viewport.right - point.x;
        var minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);
        var minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);
        var verticalFit = fit.fitsInViewportVertically || minHeight != null && minHeight <= availableHeight;
        var horizontalFit = fit.fitsInViewportHorizontally || minWidth != null && minWidth <= availableWidth;
        return verticalFit && horizontalFit;
      }

      return false;
    }
    /**
     * Gets the point at which the overlay can be "pushed" on-screen. If the overlay is larger than
     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the
     * right and bottom).
     *
     * @param start Starting point from which the overlay is pushed.
     * @param overlay Dimensions of the overlay.
     * @param scrollPosition Current viewport scroll position.
     * @returns The point at which to position the overlay after pushing. This is effectively a new
     *     originPoint.
     */

  }, {
    key: "_pushOverlayOnScreen",
    value: function _pushOverlayOnScreen(start, overlay, scrollPosition) {
      // If the position is locked and we've pushed the overlay already, reuse the previous push
      // amount, rather than pushing it again. If we were to continue pushing, the element would
      // remain in the viewport, which goes against the expectations when position locking is enabled.
      if (this._previousPushAmount && this._positionLocked) {
        return {
          x: start.x + this._previousPushAmount.x,
          y: start.y + this._previousPushAmount.y
        };
      }

      var viewport = this._viewportRect; // Determine how much the overlay goes outside the viewport on each
      // side, which we'll use to decide which direction to push it.

      var overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);
      var overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);
      var overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);
      var overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0); // Amount by which to push the overlay in each axis such that it remains on-screen.

      var pushX = 0;
      var pushY = 0; // If the overlay fits completely within the bounds of the viewport, push it from whichever
      // direction is goes off-screen. Otherwise, push the top-left corner such that its in the
      // viewport and allow for the trailing end of the overlay to go out of bounds.

      if (overlay.width <= viewport.width) {
        pushX = overflowLeft || -overflowRight;
      } else {
        pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;
      }

      if (overlay.height <= viewport.height) {
        pushY = overflowTop || -overflowBottom;
      } else {
        pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;
      }

      this._previousPushAmount = {
        x: pushX,
        y: pushY
      };
      return {
        x: start.x + pushX,
        y: start.y + pushY
      };
    }
    /**
     * Applies a computed position to the overlay and emits a position change.
     * @param position The position preference
     * @param originPoint The point on the origin element where the overlay is connected.
     */

  }, {
    key: "_applyPosition",
    value: function _applyPosition(position, originPoint) {
      this._setTransformOrigin(position);

      this._setOverlayElementStyles(originPoint, position);

      this._setBoundingBoxStyles(originPoint, position);

      if (position.panelClass) {
        this._addPanelClasses(position.panelClass);
      } // Save the last connected position in case the position needs to be re-calculated.


      this._lastPosition = position; // Notify that the position has been changed along with its change properties.
      // We only emit if we've got any subscriptions, because the scroll visibility
      // calculcations can be somewhat expensive.

      if (this._positionChanges.observers.length) {
        var scrollableViewProperties = this._getScrollVisibility();

        var changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);

        this._positionChanges.next(changeEvent);
      }

      this._isInitialRender = false;
    }
    /** Sets the transform origin based on the configured selector and the passed-in position.  */

  }, {
    key: "_setTransformOrigin",
    value: function _setTransformOrigin(position) {
      if (!this._transformOriginSelector) {
        return;
      }

      var elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);

      var xOrigin;
      var yOrigin = position.overlayY;

      if (position.overlayX === 'center') {
        xOrigin = 'center';
      } else if (this._isRtl()) {
        xOrigin = position.overlayX === 'start' ? 'right' : 'left';
      } else {
        xOrigin = position.overlayX === 'start' ? 'left' : 'right';
      }

      for (var i = 0; i < elements.length; i++) {
        elements[i].style.transformOrigin = "".concat(xOrigin, " ").concat(yOrigin);
      }
    }
    /**
     * Gets the position and size of the overlay's sizing container.
     *
     * This method does no measuring and applies no styles so that we can cheaply compute the
     * bounds for all positions and choose the best fit based on these results.
     */

  }, {
    key: "_calculateBoundingBoxRect",
    value: function _calculateBoundingBoxRect(origin, position) {
      var viewport = this._viewportRect;

      var isRtl = this._isRtl();

      var height, top, bottom;

      if (position.overlayY === 'top') {
        // Overlay is opening "downward" and thus is bound by the bottom viewport edge.
        top = origin.y;
        height = viewport.height - top + this._viewportMargin;
      } else if (position.overlayY === 'bottom') {
        // Overlay is opening "upward" and thus is bound by the top viewport edge. We need to add
        // the viewport margin back in, because the viewport rect is narrowed down to remove the
        // margin, whereas the `origin` position is calculated based on its `ClientRect`.
        bottom = viewport.height - origin.y + this._viewportMargin * 2;
        height = viewport.height - bottom + this._viewportMargin;
      } else {
        // If neither top nor bottom, it means that the overlay is vertically centered on the
        // origin point. Note that we want the position relative to the viewport, rather than
        // the page, which is why we don't use something like `viewport.bottom - origin.y` and
        // `origin.y - viewport.top`.
        var smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);
        var previousHeight = this._lastBoundingBoxSize.height;
        height = smallestDistanceToViewportEdge * 2;
        top = origin.y - smallestDistanceToViewportEdge;

        if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {
          top = origin.y - previousHeight / 2;
        }
      } // The overlay is opening 'right-ward' (the content flows to the right).


      var isBoundedByRightViewportEdge = position.overlayX === 'start' && !isRtl || position.overlayX === 'end' && isRtl; // The overlay is opening 'left-ward' (the content flows to the left).

      var isBoundedByLeftViewportEdge = position.overlayX === 'end' && !isRtl || position.overlayX === 'start' && isRtl;
      var width, left, right;

      if (isBoundedByLeftViewportEdge) {
        right = viewport.width - origin.x + this._viewportMargin;
        width = origin.x - this._viewportMargin;
      } else if (isBoundedByRightViewportEdge) {
        left = origin.x;
        width = viewport.right - origin.x;
      } else {
        // If neither start nor end, it means that the overlay is horizontally centered on the
        // origin point. Note that we want the position relative to the viewport, rather than
        // the page, which is why we don't use something like `viewport.right - origin.x` and
        // `origin.x - viewport.left`.
        var _smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);

        var previousWidth = this._lastBoundingBoxSize.width;
        width = _smallestDistanceToViewportEdge * 2;
        left = origin.x - _smallestDistanceToViewportEdge;

        if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {
          left = origin.x - previousWidth / 2;
        }
      }

      return {
        top: top,
        left: left,
        bottom: bottom,
        right: right,
        width: width,
        height: height
      };
    }
    /**
     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the
     * origin's connection point and stetches to the bounds of the viewport.
     *
     * @param origin The point on the origin element where the overlay is connected.
     * @param position The position preference
     */

  }, {
    key: "_setBoundingBoxStyles",
    value: function _setBoundingBoxStyles(origin, position) {
      var boundingBoxRect = this._calculateBoundingBoxRect(origin, position); // It's weird if the overlay *grows* while scrolling, so we take the last size into account
      // when applying a new size.


      if (!this._isInitialRender && !this._growAfterOpen) {
        boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);
        boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);
      }

      var styles = {};

      if (this._hasExactPosition()) {
        styles.top = styles.left = '0';
        styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';
        styles.width = styles.height = '100%';
      } else {
        var maxHeight = this._overlayRef.getConfig().maxHeight;

        var maxWidth = this._overlayRef.getConfig().maxWidth;

        styles.height = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(boundingBoxRect.height);
        styles.top = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(boundingBoxRect.top);
        styles.bottom = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(boundingBoxRect.bottom);
        styles.width = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(boundingBoxRect.width);
        styles.left = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(boundingBoxRect.left);
        styles.right = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(boundingBoxRect.right); // Push the pane content towards the proper direction.

        if (position.overlayX === 'center') {
          styles.alignItems = 'center';
        } else {
          styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';
        }

        if (position.overlayY === 'center') {
          styles.justifyContent = 'center';
        } else {
          styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';
        }

        if (maxHeight) {
          styles.maxHeight = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(maxHeight);
        }

        if (maxWidth) {
          styles.maxWidth = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(maxWidth);
        }
      }

      this._lastBoundingBoxSize = boundingBoxRect;
      extendStyles(this._boundingBox.style, styles);
    }
    /** Resets the styles for the bounding box so that a new positioning can be computed. */

  }, {
    key: "_resetBoundingBoxStyles",
    value: function _resetBoundingBoxStyles() {
      extendStyles(this._boundingBox.style, {
        top: '0',
        left: '0',
        right: '0',
        bottom: '0',
        height: '',
        width: '',
        alignItems: '',
        justifyContent: ''
      });
    }
    /** Resets the styles for the overlay pane so that a new positioning can be computed. */

  }, {
    key: "_resetOverlayElementStyles",
    value: function _resetOverlayElementStyles() {
      extendStyles(this._pane.style, {
        top: '',
        left: '',
        bottom: '',
        right: '',
        position: '',
        transform: ''
      });
    }
    /** Sets positioning styles to the overlay element. */

  }, {
    key: "_setOverlayElementStyles",
    value: function _setOverlayElementStyles(originPoint, position) {
      var styles = {};

      var hasExactPosition = this._hasExactPosition();

      var hasFlexibleDimensions = this._hasFlexibleDimensions;

      var config = this._overlayRef.getConfig();

      if (hasExactPosition) {
        var scrollPosition = this._viewportRuler.getViewportScrollPosition();

        extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));
        extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));
      } else {
        styles.position = 'static';
      } // Use a transform to apply the offsets. We do this because the `center` positions rely on
      // being in the normal flex flow and setting a `top` / `left` at all will completely throw
      // off the position. We also can't use margins, because they won't have an effect in some
      // cases where the element doesn't have anything to "push off of". Finally, this works
      // better both with flexible and non-flexible positioning.


      var transformString = '';

      var offsetX = this._getOffset(position, 'x');

      var offsetY = this._getOffset(position, 'y');

      if (offsetX) {
        transformString += "translateX(".concat(offsetX, "px) ");
      }

      if (offsetY) {
        transformString += "translateY(".concat(offsetY, "px)");
      }

      styles.transform = transformString.trim(); // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because
      // we need these values to both be set to "100%" for the automatic flexible sizing to work.
      // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.
      // Note that this doesn't apply when we have an exact position, in which case we do want to
      // apply them because they'll be cleared from the bounding box.

      if (config.maxHeight) {
        if (hasExactPosition) {
          styles.maxHeight = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(config.maxHeight);
        } else if (hasFlexibleDimensions) {
          styles.maxHeight = '';
        }
      }

      if (config.maxWidth) {
        if (hasExactPosition) {
          styles.maxWidth = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(config.maxWidth);
        } else if (hasFlexibleDimensions) {
          styles.maxWidth = '';
        }
      }

      extendStyles(this._pane.style, styles);
    }
    /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */

  }, {
    key: "_getExactOverlayY",
    value: function _getExactOverlayY(position, originPoint, scrollPosition) {
      // Reset any existing styles. This is necessary in case the
      // preferred position has changed since the last `apply`.
      var styles = {
        top: '',
        bottom: ''
      };

      var overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);

      if (this._isPushed) {
        overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);
      }

      var virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top; // Normally this would be zero, however when the overlay is attached to an input (e.g. in an
      // autocomplete), mobile browsers will shift everything in order to put the input in the middle
      // of the screen and to make space for the virtual keyboard. We need to account for this offset,
      // otherwise our positioning will be thrown off.


      overlayPoint.y -= virtualKeyboardOffset; // We want to set either `top` or `bottom` based on whether the overlay wants to appear
      // above or below the origin and the direction in which the element will expand.

      if (position.overlayY === 'bottom') {
        // When using `bottom`, we adjust the y position such that it is the distance
        // from the bottom of the viewport rather than the top.
        var documentHeight = this._document.documentElement.clientHeight;
        styles.bottom = "".concat(documentHeight - (overlayPoint.y + this._overlayRect.height), "px");
      } else {
        styles.top = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(overlayPoint.y);
      }

      return styles;
    }
    /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */

  }, {
    key: "_getExactOverlayX",
    value: function _getExactOverlayX(position, originPoint, scrollPosition) {
      // Reset any existing styles. This is necessary in case the preferred position has
      // changed since the last `apply`.
      var styles = {
        left: '',
        right: ''
      };

      var overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);

      if (this._isPushed) {
        overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);
      } // We want to set either `left` or `right` based on whether the overlay wants to appear "before"
      // or "after" the origin, which determines the direction in which the element will expand.
      // For the horizontal axis, the meaning of "before" and "after" change based on whether the
      // page is in RTL or LTR.


      var horizontalStyleProperty;

      if (this._isRtl()) {
        horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';
      } else {
        horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';
      } // When we're setting `right`, we adjust the x position such that it is the distance
      // from the right edge of the viewport rather than the left edge.


      if (horizontalStyleProperty === 'right') {
        var documentWidth = this._document.documentElement.clientWidth;
        styles.right = "".concat(documentWidth - (overlayPoint.x + this._overlayRect.width), "px");
      } else {
        styles.left = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceCssPixelValue"])(overlayPoint.x);
      }

      return styles;
    }
    /**
     * Gets the view properties of the trigger and overlay, including whether they are clipped
     * or completely outside the view of any of the strategy's scrollables.
     */

  }, {
    key: "_getScrollVisibility",
    value: function _getScrollVisibility() {
      // Note: needs fresh rects since the position could've changed.
      var originBounds = this._getOriginRect();

      var overlayBounds = this._pane.getBoundingClientRect(); // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers
      // every time, we should be able to use the scrollTop of the containers if the size of those
      // containers hasn't changed.


      var scrollContainerBounds = this._scrollables.map(function (scrollable) {
        return scrollable.getElementRef().nativeElement.getBoundingClientRect();
      });

      return {
        isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),
        isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),
        isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),
        isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds)
      };
    }
    /** Subtracts the amount that an element is overflowing on an axis from its length. */

  }, {
    key: "_subtractOverflows",
    value: function _subtractOverflows(length) {
      for (var _len = arguments.length, overflows = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        overflows[_key - 1] = arguments[_key];
      }

      return overflows.reduce(function (currentValue, currentOverflow) {
        return currentValue - Math.max(currentOverflow, 0);
      }, length);
    }
    /** Narrows the given viewport rect by the current _viewportMargin. */

  }, {
    key: "_getNarrowedViewportRect",
    value: function _getNarrowedViewportRect() {
      // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,
      // because we want to use the `clientWidth` and `clientHeight` as the base. The difference
      // being that the client properties don't include the scrollbar, as opposed to `innerWidth`
      // and `innerHeight` that do. This is necessary, because the overlay container uses
      // 100% `width` and `height` which don't include the scrollbar either.
      var width = this._document.documentElement.clientWidth;
      var height = this._document.documentElement.clientHeight;

      var scrollPosition = this._viewportRuler.getViewportScrollPosition();

      return {
        top: scrollPosition.top + this._viewportMargin,
        left: scrollPosition.left + this._viewportMargin,
        right: scrollPosition.left + width - this._viewportMargin,
        bottom: scrollPosition.top + height - this._viewportMargin,
        width: width - 2 * this._viewportMargin,
        height: height - 2 * this._viewportMargin
      };
    }
    /** Whether the we're dealing with an RTL context */

  }, {
    key: "_isRtl",
    value: function _isRtl() {
      return this._overlayRef.getDirection() === 'rtl';
    }
    /** Determines whether the overlay uses exact or flexible positioning. */

  }, {
    key: "_hasExactPosition",
    value: function _hasExactPosition() {
      return !this._hasFlexibleDimensions || this._isPushed;
    }
    /** Retrieves the offset of a position along the x or y axis. */

  }, {
    key: "_getOffset",
    value: function _getOffset(position, axis) {
      if (axis === 'x') {
        // We don't do something like `position['offset' + axis]` in
        // order to avoid breking minifiers that rename properties.
        return position.offsetX == null ? this._offsetX : position.offsetX;
      }

      return position.offsetY == null ? this._offsetY : position.offsetY;
    }
    /** Validates that the current position match the expected values. */

  }, {
    key: "_validatePositions",
    value: function _validatePositions() {
      if (typeof ngDevMode === 'undefined' || ngDevMode) {
        if (!this._preferredPositions.length) {
          throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');
        } // TODO(crisbeto): remove these once Angular's template type
        // checking is advanced enough to catch these cases.


        this._preferredPositions.forEach(function (pair) {
          validateHorizontalPosition('originX', pair.originX);
          validateVerticalPosition('originY', pair.originY);
          validateHorizontalPosition('overlayX', pair.overlayX);
          validateVerticalPosition('overlayY', pair.overlayY);
        });
      }
    }
    /** Adds a single CSS class or an array of classes on the overlay panel. */

  }, {
    key: "_addPanelClasses",
    value: function _addPanelClasses(cssClasses) {
      var _this13 = this;

      if (this._pane) {
        Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceArray"])(cssClasses).forEach(function (cssClass) {
          if (cssClass !== '' && _this13._appliedPanelClasses.indexOf(cssClass) === -1) {
            _this13._appliedPanelClasses.push(cssClass);

            _this13._pane.classList.add(cssClass);
          }
        });
      }
    }
    /** Clears the classes that the position strategy has applied from the overlay panel. */

  }, {
    key: "_clearPanelClasses",
    value: function _clearPanelClasses() {
      var _this14 = this;

      if (this._pane) {
        this._appliedPanelClasses.forEach(function (cssClass) {
          _this14._pane.classList.remove(cssClass);
        });

        this._appliedPanelClasses = [];
      }
    }
    /** Returns the ClientRect of the current origin. */

  }, {
    key: "_getOriginRect",
    value: function _getOriginRect() {
      var origin = this._origin;

      if (origin instanceof _angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]) {
        return origin.nativeElement.getBoundingClientRect();
      } // Check for Element so SVG elements are also supported.


      if (origin instanceof Element) {
        return origin.getBoundingClientRect();
      }

      var width = origin.width || 0;
      var height = origin.height || 0; // If the origin is a point, return a client rect as if it was a 0x0 element at the point.

      return {
        top: origin.y,
        bottom: origin.y + height,
        left: origin.x,
        right: origin.x + width,
        height: height,
        width: width
      };
    }
  }]);

  return FlexibleConnectedPositionStrategy;
}();
/** Shallow-extends a stylesheet object with another stylesheet object. */


function extendStyles(destination, source) {
  for (var key in source) {
    if (source.hasOwnProperty(key)) {
      destination[key] = source[key];
    }
  }

  return destination;
}
/**
 * Extracts the pixel value as a number from a value, if it's a number
 * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.
 */


function getPixelValue(input) {
  if (typeof input !== 'number' && input != null) {
    var _input$split = input.split(cssUnitPattern),
        _input$split2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_input$split, 2),
        value = _input$split2[0],
        units = _input$split2[1];

    return !units || units === 'px' ? parseFloat(value) : null;
  }

  return input || null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A strategy for positioning overlays. Using this strategy, an overlay is given an
 * implicit position relative to some origin element. The relative position is defined in terms of
 * a point on the origin element that is connected to a point on the overlay element. For example,
 * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner
 * of the overlay.
 * @deprecated Use `FlexibleConnectedPositionStrategy` instead.
 * @breaking-change 8.0.0
 */


var ConnectedPositionStrategy = /*#__PURE__*/function () {
  function ConnectedPositionStrategy(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ConnectedPositionStrategy);

    /** Ordered list of preferred positions, from most to least desirable. */
    this._preferredPositions = []; // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain
    // the extra logic, we create an instance of the positioning strategy that has some
    // defaults that make it behave as the old position strategy and to which we'll
    // proxy all of the API calls.

    this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer).withFlexibleDimensions(false).withPush(false).withViewportMargin(0);
    this.withFallbackPosition(originPos, overlayPos);
    this.onPositionChange = this._positionStrategy.positionChanges;
  }
  /** Ordered list of preferred positions, from most to least desirable. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(ConnectedPositionStrategy, [{
    key: "positions",
    get: function get() {
      return this._preferredPositions;
    }
    /** Attach this position strategy to an overlay. */

  }, {
    key: "attach",
    value: function attach(overlayRef) {
      this._overlayRef = overlayRef;

      this._positionStrategy.attach(overlayRef);

      if (this._direction) {
        overlayRef.setDirection(this._direction);
        this._direction = null;
      }
    }
    /** Disposes all resources used by the position strategy. */

  }, {
    key: "dispose",
    value: function dispose() {
      this._positionStrategy.dispose();
    }
    /** @docs-private */

  }, {
    key: "detach",
    value: function detach() {
      this._positionStrategy.detach();
    }
    /**
     * Updates the position of the overlay element, using whichever preferred position relative
     * to the origin fits on-screen.
     * @docs-private
     */

  }, {
    key: "apply",
    value: function apply() {
      this._positionStrategy.apply();
    }
    /**
     * Re-positions the overlay element with the trigger in its last calculated position,
     * even if a position higher in the "preferred positions" list would now fit. This
     * allows one to re-align the panel without changing the orientation of the panel.
     */

  }, {
    key: "recalculateLastPosition",
    value: function recalculateLastPosition() {
      this._positionStrategy.reapplyLastPosition();
    }
    /**
     * Sets the list of Scrollable containers that host the origin element so that
     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every
     * Scrollable must be an ancestor element of the strategy's origin element.
     */

  }, {
    key: "withScrollableContainers",
    value: function withScrollableContainers(scrollables) {
      this._positionStrategy.withScrollableContainers(scrollables);
    }
    /**
     * Adds a new preferred fallback position.
     * @param originPos
     * @param overlayPos
     */

  }, {
    key: "withFallbackPosition",
    value: function withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {
      var position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);

      this._preferredPositions.push(position);

      this._positionStrategy.withPositions(this._preferredPositions);

      return this;
    }
    /**
     * Sets the layout direction so the overlay's position can be adjusted to match.
     * @param dir New layout direction.
     */

  }, {
    key: "withDirection",
    value: function withDirection(dir) {
      // Since the direction might be declared before the strategy is attached,
      // we save the value in a temporary property and we'll transfer it to the
      // overlay ref on attachment.
      if (this._overlayRef) {
        this._overlayRef.setDirection(dir);
      } else {
        this._direction = dir;
      }

      return this;
    }
    /**
     * Sets an offset for the overlay's connection point on the x-axis
     * @param offset New offset in the X axis.
     */

  }, {
    key: "withOffsetX",
    value: function withOffsetX(offset) {
      this._positionStrategy.withDefaultOffsetX(offset);

      return this;
    }
    /**
     * Sets an offset for the overlay's connection point on the y-axis
     * @param  offset New offset in the Y axis.
     */

  }, {
    key: "withOffsetY",
    value: function withOffsetY(offset) {
      this._positionStrategy.withDefaultOffsetY(offset);

      return this;
    }
    /**
     * Sets whether the overlay's position should be locked in after it is positioned
     * initially. When an overlay is locked in, it won't attempt to reposition itself
     * when the position is re-applied (e.g. when the user scrolls away).
     * @param isLocked Whether the overlay should locked in.
     */

  }, {
    key: "withLockedPosition",
    value: function withLockedPosition(isLocked) {
      this._positionStrategy.withLockedPosition(isLocked);

      return this;
    }
    /**
     * Overwrites the current set of positions with an array of new ones.
     * @param positions Position pairs to be set on the strategy.
     */

  }, {
    key: "withPositions",
    value: function withPositions(positions) {
      this._preferredPositions = positions.slice();

      this._positionStrategy.withPositions(this._preferredPositions);

      return this;
    }
    /**
     * Sets the origin element, relative to which to position the overlay.
     * @param origin Reference to the new origin element.
     */

  }, {
    key: "setOrigin",
    value: function setOrigin(origin) {
      this._positionStrategy.setOrigin(origin);

      return this;
    }
  }]);

  return ConnectedPositionStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Class to be added to the overlay pane wrapper. */


var wrapperClass = 'cdk-global-overlay-wrapper';
/**
 * A strategy for positioning overlays. Using this strategy, an overlay is given an
 * explicit position relative to the browser's viewport. We use flexbox, instead of
 * transforms, in order to avoid issues with subpixel rendering which can cause the
 * element to become blurry.
 */

var GlobalPositionStrategy = /*#__PURE__*/function () {
  function GlobalPositionStrategy() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, GlobalPositionStrategy);

    this._cssPosition = 'static';
    this._topOffset = '';
    this._bottomOffset = '';
    this._leftOffset = '';
    this._rightOffset = '';
    this._alignItems = '';
    this._justifyContent = '';
    this._width = '';
    this._height = '';
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(GlobalPositionStrategy, [{
    key: "attach",
    value: function attach(overlayRef) {
      var config = overlayRef.getConfig();
      this._overlayRef = overlayRef;

      if (this._width && !config.width) {
        overlayRef.updateSize({
          width: this._width
        });
      }

      if (this._height && !config.height) {
        overlayRef.updateSize({
          height: this._height
        });
      }

      overlayRef.hostElement.classList.add(wrapperClass);
      this._isDisposed = false;
    }
    /**
     * Sets the top position of the overlay. Clears any previously set vertical position.
     * @param value New top offset.
     */

  }, {
    key: "top",
    value: function top() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this._bottomOffset = '';
      this._topOffset = value;
      this._alignItems = 'flex-start';
      return this;
    }
    /**
     * Sets the left position of the overlay. Clears any previously set horizontal position.
     * @param value New left offset.
     */

  }, {
    key: "left",
    value: function left() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this._rightOffset = '';
      this._leftOffset = value;
      this._justifyContent = 'flex-start';
      return this;
    }
    /**
     * Sets the bottom position of the overlay. Clears any previously set vertical position.
     * @param value New bottom offset.
     */

  }, {
    key: "bottom",
    value: function bottom() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this._topOffset = '';
      this._bottomOffset = value;
      this._alignItems = 'flex-end';
      return this;
    }
    /**
     * Sets the right position of the overlay. Clears any previously set horizontal position.
     * @param value New right offset.
     */

  }, {
    key: "right",
    value: function right() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this._leftOffset = '';
      this._rightOffset = value;
      this._justifyContent = 'flex-end';
      return this;
    }
    /**
     * Sets the overlay width and clears any previously set width.
     * @param value New width for the overlay
     * @deprecated Pass the `width` through the `OverlayConfig`.
     * @breaking-change 8.0.0
     */

  }, {
    key: "width",
    value: function width() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      if (this._overlayRef) {
        this._overlayRef.updateSize({
          width: value
        });
      } else {
        this._width = value;
      }

      return this;
    }
    /**
     * Sets the overlay height and clears any previously set height.
     * @param value New height for the overlay
     * @deprecated Pass the `height` through the `OverlayConfig`.
     * @breaking-change 8.0.0
     */

  }, {
    key: "height",
    value: function height() {
      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

      if (this._overlayRef) {
        this._overlayRef.updateSize({
          height: value
        });
      } else {
        this._height = value;
      }

      return this;
    }
    /**
     * Centers the overlay horizontally with an optional offset.
     * Clears any previously set horizontal position.
     *
     * @param offset Overlay offset from the horizontal center.
     */

  }, {
    key: "centerHorizontally",
    value: function centerHorizontally() {
      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this.left(offset);
      this._justifyContent = 'center';
      return this;
    }
    /**
     * Centers the overlay vertically with an optional offset.
     * Clears any previously set vertical position.
     *
     * @param offset Overlay offset from the vertical center.
     */

  }, {
    key: "centerVertically",
    value: function centerVertically() {
      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this.top(offset);
      this._alignItems = 'center';
      return this;
    }
    /**
     * Apply the position to the element.
     * @docs-private
     */

  }, {
    key: "apply",
    value: function apply() {
      // Since the overlay ref applies the strategy asynchronously, it could
      // have been disposed before it ends up being applied. If that is the
      // case, we shouldn't do anything.
      if (!this._overlayRef || !this._overlayRef.hasAttached()) {
        return;
      }

      var styles = this._overlayRef.overlayElement.style;
      var parentStyles = this._overlayRef.hostElement.style;

      var config = this._overlayRef.getConfig();

      var width = config.width,
          height = config.height,
          maxWidth = config.maxWidth,
          maxHeight = config.maxHeight;
      var shouldBeFlushHorizontally = (width === '100%' || width === '100vw') && (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');
      var shouldBeFlushVertically = (height === '100%' || height === '100vh') && (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');
      styles.position = this._cssPosition;
      styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;
      styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;
      styles.marginBottom = this._bottomOffset;
      styles.marginRight = this._rightOffset;

      if (shouldBeFlushHorizontally) {
        parentStyles.justifyContent = 'flex-start';
      } else if (this._justifyContent === 'center') {
        parentStyles.justifyContent = 'center';
      } else if (this._overlayRef.getConfig().direction === 'rtl') {
        // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we
        // don't want that because our positioning is explicitly `left` and `right`, hence
        // why we do another inversion to ensure that the overlay stays in the same position.
        // TODO: reconsider this if we add `start` and `end` methods.
        if (this._justifyContent === 'flex-start') {
          parentStyles.justifyContent = 'flex-end';
        } else if (this._justifyContent === 'flex-end') {
          parentStyles.justifyContent = 'flex-start';
        }
      } else {
        parentStyles.justifyContent = this._justifyContent;
      }

      parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;
    }
    /**
     * Cleans up the DOM changes from the position strategy.
     * @docs-private
     */

  }, {
    key: "dispose",
    value: function dispose() {
      if (this._isDisposed || !this._overlayRef) {
        return;
      }

      var styles = this._overlayRef.overlayElement.style;
      var parent = this._overlayRef.hostElement;
      var parentStyles = parent.style;
      parent.classList.remove(wrapperClass);
      parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop = styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';
      this._overlayRef = null;
      this._isDisposed = true;
    }
  }]);

  return GlobalPositionStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Builder for overlay position strategy. */


var OverlayPositionBuilder = /*#__PURE__*/function () {
  function OverlayPositionBuilder(_viewportRuler, _document, _platform, _overlayContainer) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, OverlayPositionBuilder);

    this._viewportRuler = _viewportRuler;
    this._document = _document;
    this._platform = _platform;
    this._overlayContainer = _overlayContainer;
  }
  /**
   * Creates a global position strategy.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(OverlayPositionBuilder, [{
    key: "global",
    value: function global() {
      return new GlobalPositionStrategy();
    }
    /**
     * Creates a relative position strategy.
     * @param elementRef
     * @param originPos
     * @param overlayPos
     * @deprecated Use `flexibleConnectedTo` instead.
     * @breaking-change 8.0.0
     */

  }, {
    key: "connectedTo",
    value: function connectedTo(elementRef, originPos, overlayPos) {
      return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);
    }
    /**
     * Creates a flexible position strategy.
     * @param origin Origin relative to which to position the overlay.
     */

  }, {
    key: "flexibleConnectedTo",
    value: function flexibleConnectedTo(origin) {
      return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);
    }
  }]);

  return OverlayPositionBuilder;
}();

OverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) {
  return new (t || OverlayPositionBuilder)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](OverlayContainer));
};

OverlayPositionBuilder.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function OverlayPositionBuilder_Factory() {
    return new OverlayPositionBuilder(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(OverlayContainer));
  },
  token: OverlayPositionBuilder,
  providedIn: "root"
});

OverlayPositionBuilder.ctorParameters = function () {
  return [{
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
  }, {
    type: OverlayContainer
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](OverlayPositionBuilder, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ViewportRuler"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
    }, {
      type: OverlayContainer
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Next overlay unique ID. */


var nextUniqueId = 0; // Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver
// which needs to be different depending on where OverlayModule is imported.

/**
 * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be
 * used as a low-level building block for other components. Dialogs, tooltips, menus,
 * selects, etc. can all be built using overlays. The service should primarily be used by authors
 * of re-usable components rather than developers building end-user applications.
 *
 * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.
 */

var Overlay = /*#__PURE__*/function () {
  function Overlay(
  /** Scrolling strategies that can be used when creating an overlay. */
  scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, // @breaking-change 8.0.0 `_location` parameter to be made required.
  _location, // @breaking-change 9.0.0 `_outsideClickDispatcher` parameter to be made required.
  _outsideClickDispatcher) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, Overlay);

    this.scrollStrategies = scrollStrategies;
    this._overlayContainer = _overlayContainer;
    this._componentFactoryResolver = _componentFactoryResolver;
    this._positionBuilder = _positionBuilder;
    this._keyboardDispatcher = _keyboardDispatcher;
    this._injector = _injector;
    this._ngZone = _ngZone;
    this._document = _document;
    this._directionality = _directionality;
    this._location = _location;
    this._outsideClickDispatcher = _outsideClickDispatcher;
  }
  /**
   * Creates an overlay.
   * @param config Configuration applied to the overlay.
   * @returns Reference to the created overlay.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(Overlay, [{
    key: "create",
    value: function create(config) {
      var host = this._createHostElement();

      var pane = this._createPaneElement(host);

      var portalOutlet = this._createPortalOutlet(pane);

      var overlayConfig = new OverlayConfig(config);
      overlayConfig.direction = overlayConfig.direction || this._directionality.value;
      return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher);
    }
    /**
     * Gets a position builder that can be used, via fluent API,
     * to construct and configure a position strategy.
     * @returns An overlay position builder.
     */

  }, {
    key: "position",
    value: function position() {
      return this._positionBuilder;
    }
    /**
     * Creates the DOM element for an overlay and appends it to the overlay container.
     * @returns Newly-created pane element
     */

  }, {
    key: "_createPaneElement",
    value: function _createPaneElement(host) {
      var pane = this._document.createElement('div');

      pane.id = "cdk-overlay-".concat(nextUniqueId++);
      pane.classList.add('cdk-overlay-pane');
      host.appendChild(pane);
      return pane;
    }
    /**
     * Creates the host element that wraps around an overlay
     * and can be used for advanced positioning.
     * @returns Newly-create host element.
     */

  }, {
    key: "_createHostElement",
    value: function _createHostElement() {
      var host = this._document.createElement('div');

      this._overlayContainer.getContainerElement().appendChild(host);

      return host;
    }
    /**
     * Create a DomPortalOutlet into which the overlay content can be loaded.
     * @param pane The DOM element to turn into a portal outlet.
     * @returns A portal outlet for the given DOM element.
     */

  }, {
    key: "_createPortalOutlet",
    value: function _createPortalOutlet(pane) {
      // We have to resolve the ApplicationRef later in order to allow people
      // to use overlay-based providers during app initialization.
      if (!this._appRef) {
        this._appRef = this._injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ApplicationRef"]);
      }

      return new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__["DomPortalOutlet"](pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);
    }
  }]);

  return Overlay;
}();

Overlay.ɵfac = function Overlay_Factory(t) {
  return new (t || Overlay)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](ScrollStrategyOptions), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](OverlayContainer), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["ComponentFactoryResolver"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](OverlayPositionBuilder), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](OverlayKeyboardDispatcher), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["Directionality"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["Location"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](OverlayOutsideClickDispatcher));
};

Overlay.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"]({
  token: Overlay,
  factory: Overlay.ɵfac
});

Overlay.ctorParameters = function () {
  return [{
    type: ScrollStrategyOptions
  }, {
    type: OverlayContainer
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ComponentFactoryResolver"]
  }, {
    type: OverlayPositionBuilder
  }, {
    type: OverlayKeyboardDispatcher
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injector"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["Directionality"]
  }, {
    type: _angular_common__WEBPACK_IMPORTED_MODULE_12__["Location"]
  }, {
    type: OverlayOutsideClickDispatcher
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](Overlay, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"]
  }], function () {
    return [{
      type: ScrollStrategyOptions
    }, {
      type: OverlayContainer
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ComponentFactoryResolver"]
    }, {
      type: OverlayPositionBuilder
    }, {
      type: OverlayKeyboardDispatcher
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injector"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["Directionality"]
    }, {
      type: _angular_common__WEBPACK_IMPORTED_MODULE_12__["Location"]
    }, {
      type: OverlayOutsideClickDispatcher
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Default set of positions for the overlay. Follows the behavior of a dropdown. */


var defaultPositionList = [{
  originX: 'start',
  originY: 'bottom',
  overlayX: 'start',
  overlayY: 'top'
}, {
  originX: 'start',
  originY: 'top',
  overlayX: 'start',
  overlayY: 'bottom'
}, {
  originX: 'end',
  originY: 'top',
  overlayX: 'end',
  overlayY: 'bottom'
}, {
  originX: 'end',
  originY: 'bottom',
  overlayX: 'end',
  overlayY: 'top'
}];
/** Injection token that determines the scroll handling while the connected overlay is open. */

var CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["InjectionToken"]('cdk-connected-overlay-scroll-strategy');
/** @docs-private @deprecated @breaking-change 8.0.0 */

function CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {
  return function (config) {
    return overlay.scrollStrategies.reposition(config);
  };
}
/**
 * Directive applied to an element to make it usable as an origin for an Overlay using a
 * ConnectedPositionStrategy.
 */


var CdkOverlayOrigin = function CdkOverlayOrigin(
/** Reference to the element on which the directive is applied. */
elementRef) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CdkOverlayOrigin);

  this.elementRef = elementRef;
};

CdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) {
  return new (t || CdkOverlayOrigin)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]));
};

CdkOverlayOrigin.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineDirective"]({
  type: CdkOverlayOrigin,
  selectors: [["", "cdk-overlay-origin", ""], ["", "overlay-origin", ""], ["", "cdkOverlayOrigin", ""]],
  exportAs: ["cdkOverlayOrigin"]
});

CdkOverlayOrigin.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](CdkOverlayOrigin, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Directive"],
    args: [{
      selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',
      exportAs: 'cdkOverlayOrigin'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]
    }];
  }, null);
})();
/**
 * Directive to facilitate declarative creation of an
 * Overlay using a FlexibleConnectedPositionStrategy.
 */


var CdkConnectedOverlay = /*#__PURE__*/function () {
  // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.
  function CdkConnectedOverlay(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CdkConnectedOverlay);

    this._overlay = _overlay;
    this._dir = _dir;
    this._hasBackdrop = false;
    this._lockPosition = false;
    this._growAfterOpen = false;
    this._flexibleDimensions = false;
    this._push = false;
    this._backdropSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    this._attachSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    this._detachSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    this._positionSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    /** Margin between the overlay and the viewport edges. */

    this.viewportMargin = 0;
    /** Whether the overlay is open. */

    this.open = false;
    /** Event emitted when the backdrop is clicked. */

    this.backdropClick = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["EventEmitter"]();
    /** Event emitted when the position has changed. */

    this.positionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["EventEmitter"]();
    /** Event emitted when the overlay has been attached. */

    this.attach = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["EventEmitter"]();
    /** Event emitted when the overlay has been detached. */

    this.detach = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["EventEmitter"]();
    /** Emits when there are keyboard events that are targeted at the overlay. */

    this.overlayKeydown = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["EventEmitter"]();
    /** Emits when there are mouse outside click events that are targeted at the overlay. */

    this.overlayOutsideClick = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["EventEmitter"]();
    this._templatePortal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__["TemplatePortal"](templateRef, viewContainerRef);
    this._scrollStrategyFactory = scrollStrategyFactory;
    this.scrollStrategy = this._scrollStrategyFactory();
  }
  /** The offset in pixels for the overlay connection point on the x-axis */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkConnectedOverlay, [{
    key: "offsetX",
    get: function get() {
      return this._offsetX;
    },
    set: function set(offsetX) {
      this._offsetX = offsetX;

      if (this._position) {
        this._updatePositionStrategy(this._position);
      }
    }
    /** The offset in pixels for the overlay connection point on the y-axis */

  }, {
    key: "offsetY",
    get: function get() {
      return this._offsetY;
    },
    set: function set(offsetY) {
      this._offsetY = offsetY;

      if (this._position) {
        this._updatePositionStrategy(this._position);
      }
    }
    /** Whether or not the overlay should attach a backdrop. */

  }, {
    key: "hasBackdrop",
    get: function get() {
      return this._hasBackdrop;
    },
    set: function set(value) {
      this._hasBackdrop = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceBooleanProperty"])(value);
    }
    /** Whether or not the overlay should be locked when scrolling. */

  }, {
    key: "lockPosition",
    get: function get() {
      return this._lockPosition;
    },
    set: function set(value) {
      this._lockPosition = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceBooleanProperty"])(value);
    }
    /** Whether the overlay's width and height can be constrained to fit within the viewport. */

  }, {
    key: "flexibleDimensions",
    get: function get() {
      return this._flexibleDimensions;
    },
    set: function set(value) {
      this._flexibleDimensions = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceBooleanProperty"])(value);
    }
    /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */

  }, {
    key: "growAfterOpen",
    get: function get() {
      return this._growAfterOpen;
    },
    set: function set(value) {
      this._growAfterOpen = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceBooleanProperty"])(value);
    }
    /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */

  }, {
    key: "push",
    get: function get() {
      return this._push;
    },
    set: function set(value) {
      this._push = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceBooleanProperty"])(value);
    }
    /** The associated overlay reference. */

  }, {
    key: "overlayRef",
    get: function get() {
      return this._overlayRef;
    }
    /** The element's layout direction. */

  }, {
    key: "dir",
    get: function get() {
      return this._dir ? this._dir.value : 'ltr';
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._attachSubscription.unsubscribe();

      this._detachSubscription.unsubscribe();

      this._backdropSubscription.unsubscribe();

      this._positionSubscription.unsubscribe();

      if (this._overlayRef) {
        this._overlayRef.dispose();
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (this._position) {
        this._updatePositionStrategy(this._position);

        this._overlayRef.updateSize({
          width: this.width,
          minWidth: this.minWidth,
          height: this.height,
          minHeight: this.minHeight
        });

        if (changes['origin'] && this.open) {
          this._position.apply();
        }
      }

      if (changes['open']) {
        this.open ? this._attachOverlay() : this._detachOverlay();
      }
    }
    /** Creates an overlay */

  }, {
    key: "_createOverlay",
    value: function _createOverlay() {
      var _this15 = this;

      if (!this.positions || !this.positions.length) {
        this.positions = defaultPositionList;
      }

      var overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());

      this._attachSubscription = overlayRef.attachments().subscribe(function () {
        return _this15.attach.emit();
      });
      this._detachSubscription = overlayRef.detachments().subscribe(function () {
        return _this15.detach.emit();
      });
      overlayRef.keydownEvents().subscribe(function (event) {
        _this15.overlayKeydown.next(event);

        if (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_17__["ESCAPE"] && !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_17__["hasModifierKey"])(event)) {
          event.preventDefault();

          _this15._detachOverlay();
        }
      });

      this._overlayRef.outsidePointerEvents().subscribe(function (event) {
        _this15.overlayOutsideClick.next(event);
      });
    }
    /** Builds the overlay config based on the directive's inputs */

  }, {
    key: "_buildConfig",
    value: function _buildConfig() {
      var positionStrategy = this._position = this.positionStrategy || this._createPositionStrategy();

      var overlayConfig = new OverlayConfig({
        direction: this._dir,
        positionStrategy: positionStrategy,
        scrollStrategy: this.scrollStrategy,
        hasBackdrop: this.hasBackdrop
      });

      if (this.width || this.width === 0) {
        overlayConfig.width = this.width;
      }

      if (this.height || this.height === 0) {
        overlayConfig.height = this.height;
      }

      if (this.minWidth || this.minWidth === 0) {
        overlayConfig.minWidth = this.minWidth;
      }

      if (this.minHeight || this.minHeight === 0) {
        overlayConfig.minHeight = this.minHeight;
      }

      if (this.backdropClass) {
        overlayConfig.backdropClass = this.backdropClass;
      }

      if (this.panelClass) {
        overlayConfig.panelClass = this.panelClass;
      }

      return overlayConfig;
    }
    /** Updates the state of a position strategy, based on the values of the directive inputs. */

  }, {
    key: "_updatePositionStrategy",
    value: function _updatePositionStrategy(positionStrategy) {
      var _this16 = this;

      var positions = this.positions.map(function (currentPosition) {
        return {
          originX: currentPosition.originX,
          originY: currentPosition.originY,
          overlayX: currentPosition.overlayX,
          overlayY: currentPosition.overlayY,
          offsetX: currentPosition.offsetX || _this16.offsetX,
          offsetY: currentPosition.offsetY || _this16.offsetY,
          panelClass: currentPosition.panelClass || undefined
        };
      });
      return positionStrategy.setOrigin(this.origin.elementRef).withPositions(positions).withFlexibleDimensions(this.flexibleDimensions).withPush(this.push).withGrowAfterOpen(this.growAfterOpen).withViewportMargin(this.viewportMargin).withLockedPosition(this.lockPosition).withTransformOriginOn(this.transformOriginSelector);
    }
    /** Returns the position strategy of the overlay to be set on the overlay config */

  }, {
    key: "_createPositionStrategy",
    value: function _createPositionStrategy() {
      var strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);

      this._updatePositionStrategy(strategy);

      return strategy;
    }
    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */

  }, {
    key: "_attachOverlay",
    value: function _attachOverlay() {
      var _this17 = this;

      if (!this._overlayRef) {
        this._createOverlay();
      } else {
        // Update the overlay size, in case the directive's inputs have changed
        this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;
      }

      if (!this._overlayRef.hasAttached()) {
        this._overlayRef.attach(this._templatePortal);
      }

      if (this.hasBackdrop) {
        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(function (event) {
          _this17.backdropClick.emit(event);
        });
      } else {
        this._backdropSubscription.unsubscribe();
      }

      this._positionSubscription.unsubscribe(); // Only subscribe to `positionChanges` if requested, because putting
      // together all the information for it can be expensive.


      if (this.positionChange.observers.length > 0) {
        this._positionSubscription = this._position.positionChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_16__["takeWhile"])(function () {
          return _this17.positionChange.observers.length > 0;
        })).subscribe(function (position) {
          _this17.positionChange.emit(position);

          if (_this17.positionChange.observers.length === 0) {
            _this17._positionSubscription.unsubscribe();
          }
        });
      }
    }
    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */

  }, {
    key: "_detachOverlay",
    value: function _detachOverlay() {
      if (this._overlayRef) {
        this._overlayRef.detach();
      }

      this._backdropSubscription.unsubscribe();

      this._positionSubscription.unsubscribe();
    }
  }]);

  return CdkConnectedOverlay;
}();

CdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) {
  return new (t || CdkConnectedOverlay)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](Overlay), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["Directionality"], 8));
};

CdkConnectedOverlay.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineDirective"]({
  type: CdkConnectedOverlay,
  selectors: [["", "cdk-connected-overlay", ""], ["", "connected-overlay", ""], ["", "cdkConnectedOverlay", ""]],
  inputs: {
    viewportMargin: ["cdkConnectedOverlayViewportMargin", "viewportMargin"],
    open: ["cdkConnectedOverlayOpen", "open"],
    scrollStrategy: ["cdkConnectedOverlayScrollStrategy", "scrollStrategy"],
    offsetX: ["cdkConnectedOverlayOffsetX", "offsetX"],
    offsetY: ["cdkConnectedOverlayOffsetY", "offsetY"],
    hasBackdrop: ["cdkConnectedOverlayHasBackdrop", "hasBackdrop"],
    lockPosition: ["cdkConnectedOverlayLockPosition", "lockPosition"],
    flexibleDimensions: ["cdkConnectedOverlayFlexibleDimensions", "flexibleDimensions"],
    growAfterOpen: ["cdkConnectedOverlayGrowAfterOpen", "growAfterOpen"],
    push: ["cdkConnectedOverlayPush", "push"],
    positions: ["cdkConnectedOverlayPositions", "positions"],
    origin: ["cdkConnectedOverlayOrigin", "origin"],
    positionStrategy: ["cdkConnectedOverlayPositionStrategy", "positionStrategy"],
    width: ["cdkConnectedOverlayWidth", "width"],
    height: ["cdkConnectedOverlayHeight", "height"],
    minWidth: ["cdkConnectedOverlayMinWidth", "minWidth"],
    minHeight: ["cdkConnectedOverlayMinHeight", "minHeight"],
    backdropClass: ["cdkConnectedOverlayBackdropClass", "backdropClass"],
    panelClass: ["cdkConnectedOverlayPanelClass", "panelClass"],
    transformOriginSelector: ["cdkConnectedOverlayTransformOriginOn", "transformOriginSelector"]
  },
  outputs: {
    backdropClick: "backdropClick",
    positionChange: "positionChange",
    attach: "attach",
    detach: "detach",
    overlayKeydown: "overlayKeydown",
    overlayOutsideClick: "overlayOutsideClick"
  },
  exportAs: ["cdkConnectedOverlay"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵNgOnChangesFeature"]]
});

CdkConnectedOverlay.ctorParameters = function () {
  return [{
    type: Overlay
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["TemplateRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewContainerRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
    }]
  }];
};

CdkConnectedOverlay.propDecorators = {
  origin: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayOrigin']
  }],
  positions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayPositions']
  }],
  positionStrategy: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayPositionStrategy']
  }],
  offsetX: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayOffsetX']
  }],
  offsetY: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayOffsetY']
  }],
  width: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayWidth']
  }],
  height: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayHeight']
  }],
  minWidth: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayMinWidth']
  }],
  minHeight: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayMinHeight']
  }],
  backdropClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayBackdropClass']
  }],
  panelClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayPanelClass']
  }],
  viewportMargin: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayViewportMargin']
  }],
  scrollStrategy: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayScrollStrategy']
  }],
  open: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayOpen']
  }],
  transformOriginSelector: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayTransformOriginOn']
  }],
  hasBackdrop: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayHasBackdrop']
  }],
  lockPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayLockPosition']
  }],
  flexibleDimensions: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayFlexibleDimensions']
  }],
  growAfterOpen: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayGrowAfterOpen']
  }],
  push: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
    args: ['cdkConnectedOverlayPush']
  }],
  backdropClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
  }],
  positionChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
  }],
  attach: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
  }],
  detach: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
  }],
  overlayKeydown: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
  }],
  overlayOutsideClick: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](CdkConnectedOverlay, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Directive"],
    args: [{
      selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',
      exportAs: 'cdkConnectedOverlay'
    }]
  }], function () {
    return [{
      type: Overlay
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["TemplateRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewContainerRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
      }]
    }];
  }, {
    viewportMargin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayViewportMargin']
    }],
    open: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayOpen']
    }],
    backdropClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
    }],
    positionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
    }],
    attach: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
    }],
    detach: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
    }],
    overlayKeydown: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
    }],
    overlayOutsideClick: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
    }],
    scrollStrategy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayScrollStrategy']
    }],
    offsetX: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayOffsetX']
    }],
    offsetY: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayOffsetY']
    }],
    hasBackdrop: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayHasBackdrop']
    }],
    lockPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayLockPosition']
    }],
    flexibleDimensions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayFlexibleDimensions']
    }],
    growAfterOpen: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayGrowAfterOpen']
    }],
    push: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayPush']
    }],
    positions: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayPositions']
    }],
    origin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayOrigin']
    }],
    positionStrategy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayPositionStrategy']
    }],
    width: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayWidth']
    }],
    height: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayHeight']
    }],
    minWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayMinWidth']
    }],
    minHeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayMinHeight']
    }],
    backdropClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayBackdropClass']
    }],
    panelClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayPanelClass']
    }],
    transformOriginSelector: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"],
      args: ['cdkConnectedOverlayTransformOriginOn']
    }]
  });
})();
/** @docs-private */


function CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {
  return function () {
    return overlay.scrollStrategies.reposition();
  };
}
/** @docs-private */


var CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {
  provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,
  deps: [Overlay],
  useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var OverlayModule = function OverlayModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, OverlayModule);
};

OverlayModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineNgModule"]({
  type: OverlayModule
});
OverlayModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjector"]({
  factory: function OverlayModule_Factory(t) {
    return new (t || OverlayModule)();
  },
  providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],
  imports: [[_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["BidiModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__["PortalModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollingModule"]], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollingModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵsetNgModuleScope"](OverlayModule, {
    declarations: function declarations() {
      return [CdkConnectedOverlay, CdkOverlayOrigin];
    },
    imports: function imports() {
      return [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["BidiModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__["PortalModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollingModule"]];
    },
    exports: function exports() {
      return [CdkConnectedOverlay, CdkOverlayOrigin, _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollingModule"]];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](OverlayModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgModule"],
    args: [{
      imports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_11__["BidiModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_14__["PortalModule"], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollingModule"]],
      exports: [CdkConnectedOverlay, CdkOverlayOrigin, _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_8__["ScrollingModule"]],
      declarations: [CdkConnectedOverlay, CdkOverlayOrigin],
      providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER]
    }]
  }], null, null);
})();
/**
 * @deprecated Use `OverlayModule` instead.
 * @breaking-change 8.0.0
 * @docs-private
 */


var OVERLAY_PROVIDERS = [Overlay, OverlayPositionBuilder, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER, OVERLAY_CONTAINER_PROVIDER, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER];
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Alternative to OverlayContainer that supports correct displaying of overlay elements in
 * Fullscreen mode
 * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen
 *
 * Should be provided in the root component.
 */

var FullscreenOverlayContainer = /*#__PURE__*/function (_OverlayContainer) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(FullscreenOverlayContainer, _OverlayContainer);

  var _super3 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(FullscreenOverlayContainer);

  function FullscreenOverlayContainer(_document,
  /**
   * @deprecated `platform` parameter to become required.
   * @breaking-change 10.0.0
   */
  platform) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, FullscreenOverlayContainer);

    return _super3.call(this, _document, platform);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(FullscreenOverlayContainer, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(FullscreenOverlayContainer.prototype), "ngOnDestroy", this).call(this);

      if (this._fullScreenEventName && this._fullScreenListener) {
        this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);
      }
    }
  }, {
    key: "_createContainer",
    value: function _createContainer() {
      var _this18 = this;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(FullscreenOverlayContainer.prototype), "_createContainer", this).call(this);

      this._adjustParentForFullscreenChange();

      this._addFullscreenChangeListener(function () {
        return _this18._adjustParentForFullscreenChange();
      });
    }
  }, {
    key: "_adjustParentForFullscreenChange",
    value: function _adjustParentForFullscreenChange() {
      if (!this._containerElement) {
        return;
      }

      var fullscreenElement = this.getFullscreenElement();
      var parent = fullscreenElement || this._document.body;
      parent.appendChild(this._containerElement);
    }
  }, {
    key: "_addFullscreenChangeListener",
    value: function _addFullscreenChangeListener(fn) {
      var eventName = this._getEventName();

      if (eventName) {
        if (this._fullScreenListener) {
          this._document.removeEventListener(eventName, this._fullScreenListener);
        }

        this._document.addEventListener(eventName, fn);

        this._fullScreenListener = fn;
      }
    }
  }, {
    key: "_getEventName",
    value: function _getEventName() {
      if (!this._fullScreenEventName) {
        var _document = this._document;

        if (_document.fullscreenEnabled) {
          this._fullScreenEventName = 'fullscreenchange';
        } else if (_document.webkitFullscreenEnabled) {
          this._fullScreenEventName = 'webkitfullscreenchange';
        } else if (_document.mozFullScreenEnabled) {
          this._fullScreenEventName = 'mozfullscreenchange';
        } else if (_document.msFullscreenEnabled) {
          this._fullScreenEventName = 'MSFullscreenChange';
        }
      }

      return this._fullScreenEventName;
    }
    /**
     * When the page is put into fullscreen mode, a specific element is specified.
     * Only that element and its children are visible when in fullscreen mode.
     */

  }, {
    key: "getFullscreenElement",
    value: function getFullscreenElement() {
      var _document = this._document;
      return _document.fullscreenElement || _document.webkitFullscreenElement || _document.mozFullScreenElement || _document.msFullscreenElement || null;
    }
  }]);

  return FullscreenOverlayContainer;
}(OverlayContainer);

FullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) {
  return new (t || FullscreenOverlayContainer)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]));
};

FullscreenOverlayContainer.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function FullscreenOverlayContainer_Factory() {
    return new FullscreenOverlayContainer(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]));
  },
  token: FullscreenOverlayContainer,
  providedIn: "root"
});

FullscreenOverlayContainer.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](FullscreenOverlayContainer, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_12__["DOCUMENT"]]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "u/sh":
/*!******************************************************!*\
  !*** ./src/app/pages/projects/projects.component.ts ***!
  \******************************************************/
/*! exports provided: ProjectsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProjectsComponent", function() { return ProjectsComponent; });
/* harmony import */ var _raw_loader_projects_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./projects.component.html */ "Jxph");
/* harmony import */ var _projects_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projects.component.css */ "kez0");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var ProjectsComponent = /** @class */ (function () {
    function ProjectsComponent() {
    }
    ProjectsComponent.prototype.ngOnInit = function () {
    };
    ProjectsComponent.ctorParameters = function () { return []; };
    ProjectsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-projects',
            template: _raw_loader_projects_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_projects_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [])
    ], ProjectsComponent);
    return ProjectsComponent;
}());



/***/ }),

/***/ "u47x":
/*!*****************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js ***!
  \*****************************************************************/
/*! exports provided: A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, ɵangular_material_src_cdk_a11y_a11y_a, ɵangular_material_src_cdk_a11y_a11y_b */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "A11yModule", function() { return A11yModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActiveDescendantKeyManager", function() { return ActiveDescendantKeyManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AriaDescriber", function() { return AriaDescriber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_DESCRIBEDBY_HOST_ATTRIBUTE", function() { return CDK_DESCRIBEDBY_HOST_ATTRIBUTE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_DESCRIBEDBY_ID_PREFIX", function() { return CDK_DESCRIBEDBY_ID_PREFIX; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkAriaLive", function() { return CdkAriaLive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkMonitorFocus", function() { return CdkMonitorFocus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkTrapFocus", function() { return CdkTrapFocus; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurableFocusTrap", function() { return ConfigurableFocusTrap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigurableFocusTrapFactory", function() { return ConfigurableFocusTrapFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventListenerFocusTrapInertStrategy", function() { return EventListenerFocusTrapInertStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOCUS_MONITOR_DEFAULT_OPTIONS", function() { return FOCUS_MONITOR_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOCUS_TRAP_INERT_STRATEGY", function() { return FOCUS_TRAP_INERT_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusKeyManager", function() { return FocusKeyManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusMonitor", function() { return FocusMonitor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusTrap", function() { return FocusTrap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusTrapFactory", function() { return FocusTrapFactory; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HighContrastModeDetector", function() { return HighContrastModeDetector; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InteractivityChecker", function() { return InteractivityChecker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IsFocusableConfig", function() { return IsFocusableConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIVE_ANNOUNCER_DEFAULT_OPTIONS", function() { return LIVE_ANNOUNCER_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIVE_ANNOUNCER_ELEMENT_TOKEN", function() { return LIVE_ANNOUNCER_ELEMENT_TOKEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY", function() { return LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ListKeyManager", function() { return ListKeyManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiveAnnouncer", function() { return LiveAnnouncer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MESSAGES_CONTAINER_ID", function() { return MESSAGES_CONTAINER_ID; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOUCH_BUFFER_MS", function() { return TOUCH_BUFFER_MS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFakeMousedownFromScreenReader", function() { return isFakeMousedownFromScreenReader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_a11y_a11y_a", function() { return FocusTrapManager; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_cdk_a11y_a11y_b", function() { return ConfigurableFocusTrapConfig; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/observers */ "GU7r");















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** IDs are delimited by an empty space, as per the spec. */




var ID_DELIMITER = ' ';
/**
 * Adds the given ID to the specified ARIA attribute on an element.
 * Used for attributes such as aria-labelledby, aria-owns, etc.
 */

function addAriaReferencedId(el, attr, id) {
  var ids = getAriaReferenceIds(el, attr);

  if (ids.some(function (existingId) {
    return existingId.trim() == id.trim();
  })) {
    return;
  }

  ids.push(id.trim());
  el.setAttribute(attr, ids.join(ID_DELIMITER));
}
/**
 * Removes the given ID from the specified ARIA attribute on an element.
 * Used for attributes such as aria-labelledby, aria-owns, etc.
 */


function removeAriaReferencedId(el, attr, id) {
  var ids = getAriaReferenceIds(el, attr);
  var filteredIds = ids.filter(function (val) {
    return val != id.trim();
  });

  if (filteredIds.length) {
    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));
  } else {
    el.removeAttribute(attr);
  }
}
/**
 * Gets the list of IDs referenced by the given ARIA attribute on an element.
 * Used for attributes such as aria-labelledby, aria-owns, etc.
 */


function getAriaReferenceIds(el, attr) {
  // Get string array of all individual ids (whitespace delimited) in the attribute value
  return (el.getAttribute(attr) || '').match(/\S+/g) || [];
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** ID used for the body container where all messages are appended. */


var MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';
/** ID prefix used for each created message element. */

var CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';
/** Attribute given to each host element that is described by a message element. */

var CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';
/** Global incremental identifier for each registered message element. */

var nextId = 0;
/** Global map of all registered message elements that have been placed into the document. */

var messageRegistry = new Map();
/** Container for all registered messages. */

var messagesContainer = null;
/**
 * Utility that creates visually hidden elements with a message content. Useful for elements that
 * want to use aria-describedby to further describe themselves without adding additional visual
 * content.
 */

var AriaDescriber = /*#__PURE__*/function () {
  function AriaDescriber(_document,
  /**
   * @breaking-change 8.0.0 `_platform` parameter to be made required.
   */
  _platform) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, AriaDescriber);

    this._platform = _platform;
    this._document = _document;
  }
  /**
   * Adds to the host element an aria-describedby reference to a hidden element that contains
   * the message. If the same message has already been registered, then it will reuse the created
   * message element.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(AriaDescriber, [{
    key: "describe",
    value: function describe(hostElement, message) {
      if (!this._canBeDescribed(hostElement, message)) {
        return;
      }

      if (typeof message !== 'string') {
        // We need to ensure that the element has an ID.
        this._setMessageId(message);

        messageRegistry.set(message, {
          messageElement: message,
          referenceCount: 0
        });
      } else if (!messageRegistry.has(message)) {
        this._createMessageElement(message);
      }

      if (!this._isElementDescribedByMessage(hostElement, message)) {
        this._addMessageReference(hostElement, message);
      }
    }
    /** Removes the host element's aria-describedby reference to the message element. */

  }, {
    key: "removeDescription",
    value: function removeDescription(hostElement, message) {
      if (!message || !this._isElementNode(hostElement)) {
        return;
      }

      if (this._isElementDescribedByMessage(hostElement, message)) {
        this._removeMessageReference(hostElement, message);
      } // If the message is a string, it means that it's one that we created for the
      // consumer so we can remove it safely, otherwise we should leave it in place.


      if (typeof message === 'string') {
        var registeredMessage = messageRegistry.get(message);

        if (registeredMessage && registeredMessage.referenceCount === 0) {
          this._deleteMessageElement(message);
        }
      }

      if (messagesContainer && messagesContainer.childNodes.length === 0) {
        this._deleteMessagesContainer();
      }
    }
    /** Unregisters all created message elements and removes the message container. */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var describedElements = this._document.querySelectorAll("[".concat(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, "]"));

      for (var i = 0; i < describedElements.length; i++) {
        this._removeCdkDescribedByReferenceIds(describedElements[i]);

        describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);
      }

      if (messagesContainer) {
        this._deleteMessagesContainer();
      }

      messageRegistry.clear();
    }
    /**
     * Creates a new element in the visually hidden message container element with the message
     * as its content and adds it to the message registry.
     */

  }, {
    key: "_createMessageElement",
    value: function _createMessageElement(message) {
      var messageElement = this._document.createElement('div');

      this._setMessageId(messageElement);

      messageElement.textContent = message;

      this._createMessagesContainer();

      messagesContainer.appendChild(messageElement);
      messageRegistry.set(message, {
        messageElement: messageElement,
        referenceCount: 0
      });
    }
    /** Assigns a unique ID to an element, if it doesn't have one already. */

  }, {
    key: "_setMessageId",
    value: function _setMessageId(element) {
      if (!element.id) {
        element.id = "".concat(CDK_DESCRIBEDBY_ID_PREFIX, "-").concat(nextId++);
      }
    }
    /** Deletes the message element from the global messages container. */

  }, {
    key: "_deleteMessageElement",
    value: function _deleteMessageElement(message) {
      var registeredMessage = messageRegistry.get(message);
      var messageElement = registeredMessage && registeredMessage.messageElement;

      if (messagesContainer && messageElement) {
        messagesContainer.removeChild(messageElement);
      }

      messageRegistry.delete(message);
    }
    /** Creates the global container for all aria-describedby messages. */

  }, {
    key: "_createMessagesContainer",
    value: function _createMessagesContainer() {
      if (!messagesContainer) {
        // @breaking-change 8.0.0 `_platform` null check can be removed once the parameter is required
        var canBeAriaHidden = !this._platform || !this._platform.EDGE && !this._platform.TRIDENT;

        var preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID); // When going from the server to the client, we may end up in a situation where there's
        // already a container on the page, but we don't have a reference to it. Clear the
        // old container so we don't get duplicates. Doing this, instead of emptying the previous
        // container, should be slightly faster.


        if (preExistingContainer && preExistingContainer.parentNode) {
          preExistingContainer.parentNode.removeChild(preExistingContainer);
        }

        messagesContainer = this._document.createElement('div');
        messagesContainer.id = MESSAGES_CONTAINER_ID;
        messagesContainer.classList.add('cdk-visually-hidden'); // IE and Edge won't read out the messages if they're in an `aria-hidden` container.
        // We only disable `aria-hidden` for these platforms, because it comes with the
        // disadvantage that people might hit the messages when they've navigated past
        // the end of the document using the arrow keys.

        messagesContainer.setAttribute('aria-hidden', canBeAriaHidden + '');

        this._document.body.appendChild(messagesContainer);
      }
    }
    /** Deletes the global messages container. */

  }, {
    key: "_deleteMessagesContainer",
    value: function _deleteMessagesContainer() {
      if (messagesContainer && messagesContainer.parentNode) {
        messagesContainer.parentNode.removeChild(messagesContainer);
        messagesContainer = null;
      }
    }
    /** Removes all cdk-describedby messages that are hosted through the element. */

  }, {
    key: "_removeCdkDescribedByReferenceIds",
    value: function _removeCdkDescribedByReferenceIds(element) {
      // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX
      var originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(function (id) {
        return id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0;
      });
      element.setAttribute('aria-describedby', originalReferenceIds.join(' '));
    }
    /**
     * Adds a message reference to the element using aria-describedby and increments the registered
     * message's reference count.
     */

  }, {
    key: "_addMessageReference",
    value: function _addMessageReference(element, message) {
      var registeredMessage = messageRegistry.get(message); // Add the aria-describedby reference and set the
      // describedby_host attribute to mark the element.

      addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);
      element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');
      registeredMessage.referenceCount++;
    }
    /**
     * Removes a message reference from the element using aria-describedby
     * and decrements the registered message's reference count.
     */

  }, {
    key: "_removeMessageReference",
    value: function _removeMessageReference(element, message) {
      var registeredMessage = messageRegistry.get(message);
      registeredMessage.referenceCount--;
      removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);
      element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);
    }
    /** Returns true if the element has been described by the provided message ID. */

  }, {
    key: "_isElementDescribedByMessage",
    value: function _isElementDescribedByMessage(element, message) {
      var referenceIds = getAriaReferenceIds(element, 'aria-describedby');
      var registeredMessage = messageRegistry.get(message);
      var messageId = registeredMessage && registeredMessage.messageElement.id;
      return !!messageId && referenceIds.indexOf(messageId) != -1;
    }
    /** Determines whether a message can be described on a particular element. */

  }, {
    key: "_canBeDescribed",
    value: function _canBeDescribed(element, message) {
      if (!this._isElementNode(element)) {
        return false;
      }

      if (message && typeof message === 'object') {
        // We'd have to make some assumptions about the description element's text, if the consumer
        // passed in an element. Assume that if an element is passed in, the consumer has verified
        // that it can be used as a description.
        return true;
      }

      var trimmedMessage = message == null ? '' : "".concat(message).trim();
      var ariaLabel = element.getAttribute('aria-label'); // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the
      // element, because screen readers will end up reading out the same text twice in a row.

      return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;
    }
    /** Checks whether a node is an Element node. */

  }, {
    key: "_isElementNode",
    value: function _isElementNode(element) {
      return element.nodeType === this._document.ELEMENT_NODE;
    }
  }]);

  return AriaDescriber;
}();

AriaDescriber.ɵfac = function AriaDescriber_Factory(t) {
  return new (t || AriaDescriber)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]));
};

AriaDescriber.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function AriaDescriber_Factory() {
    return new AriaDescriber(Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]));
  },
  token: AriaDescriber,
  providedIn: "root"
});

AriaDescriber.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](AriaDescriber, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * This class manages keyboard events for selectable lists. If you pass it a query list
 * of items, it will set the active item correctly when arrow events occur.
 */


var ListKeyManager = /*#__PURE__*/function () {
  function ListKeyManager(_items) {
    var _this = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ListKeyManager);

    this._items = _items;
    this._activeItemIndex = -1;
    this._activeItem = null;
    this._wrap = false;
    this._letterKeyStream = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    this._typeaheadSubscription = rxjs__WEBPACK_IMPORTED_MODULE_10__["Subscription"].EMPTY;
    this._vertical = true;
    this._allowedModifierKeys = [];
    this._homeAndEnd = false;
    /**
     * Predicate function that can be used to check whether an item should be skipped
     * by the key manager. By default, disabled items are skipped.
     */

    this._skipPredicateFn = function (item) {
      return item.disabled;
    }; // Buffer for the letters that the user has pressed when the typeahead option is turned on.


    this._pressedLetters = [];
    /**
     * Stream that emits any time the TAB key is pressed, so components can react
     * when focus is shifted off of the list.
     */

    this.tabOut = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Stream that emits whenever the active item of the list manager changes. */

    this.change = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"](); // We allow for the items to be an array because, in some cases, the consumer may
    // not have access to a QueryList of the items they want to manage (e.g. when the
    // items aren't being collected via `ViewChildren` or `ContentChildren`).

    if (_items instanceof _angular_core__WEBPACK_IMPORTED_MODULE_8__["QueryList"]) {
      _items.changes.subscribe(function (newItems) {
        if (_this._activeItem) {
          var itemArray = newItems.toArray();
          var newIndex = itemArray.indexOf(_this._activeItem);

          if (newIndex > -1 && newIndex !== _this._activeItemIndex) {
            _this._activeItemIndex = newIndex;
          }
        }
      });
    }
  }
  /**
   * Sets the predicate function that determines which items should be skipped by the
   * list key manager.
   * @param predicate Function that determines whether the given item should be skipped.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ListKeyManager, [{
    key: "skipPredicate",
    value: function skipPredicate(predicate) {
      this._skipPredicateFn = predicate;
      return this;
    }
    /**
     * Configures wrapping mode, which determines whether the active item will wrap to
     * the other end of list when there are no more items in the given direction.
     * @param shouldWrap Whether the list should wrap when reaching the end.
     */

  }, {
    key: "withWrap",
    value: function withWrap() {
      var shouldWrap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._wrap = shouldWrap;
      return this;
    }
    /**
     * Configures whether the key manager should be able to move the selection vertically.
     * @param enabled Whether vertical selection should be enabled.
     */

  }, {
    key: "withVerticalOrientation",
    value: function withVerticalOrientation() {
      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._vertical = enabled;
      return this;
    }
    /**
     * Configures the key manager to move the selection horizontally.
     * Passing in `null` will disable horizontal movement.
     * @param direction Direction in which the selection can be moved.
     */

  }, {
    key: "withHorizontalOrientation",
    value: function withHorizontalOrientation(direction) {
      this._horizontal = direction;
      return this;
    }
    /**
     * Modifier keys which are allowed to be held down and whose default actions will be prevented
     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.
     */

  }, {
    key: "withAllowedModifierKeys",
    value: function withAllowedModifierKeys(keys) {
      this._allowedModifierKeys = keys;
      return this;
    }
    /**
     * Turns on typeahead mode which allows users to set the active item by typing.
     * @param debounceInterval Time to wait after the last keystroke before setting the active item.
     */

  }, {
    key: "withTypeAhead",
    value: function withTypeAhead() {
      var _this2 = this;

      var debounceInterval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 200;

      if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._items.length && this._items.some(function (item) {
        return typeof item.getLabel !== 'function';
      })) {
        throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');
      }

      this._typeaheadSubscription.unsubscribe(); // Debounce the presses of non-navigational keys, collect the ones that correspond to letters
      // and convert those letters back into a string. Afterwards find the first item that starts
      // with that string and select it.


      this._typeaheadSubscription = this._letterKeyStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["tap"])(function (letter) {
        return _this2._pressedLetters.push(letter);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["debounceTime"])(debounceInterval), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["filter"])(function () {
        return _this2._pressedLetters.length > 0;
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["map"])(function () {
        return _this2._pressedLetters.join('');
      })).subscribe(function (inputString) {
        var items = _this2._getItemsArray(); // Start at 1 because we want to start searching at the item immediately
        // following the current active item.


        for (var i = 1; i < items.length + 1; i++) {
          var index = (_this2._activeItemIndex + i) % items.length;
          var item = items[index];

          if (!_this2._skipPredicateFn(item) && item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {
            _this2.setActiveItem(index);

            break;
          }
        }

        _this2._pressedLetters = [];
      });
      return this;
    }
    /**
     * Configures the key manager to activate the first and last items
     * respectively when the Home or End key is pressed.
     * @param enabled Whether pressing the Home or End key activates the first/last item.
     */

  }, {
    key: "withHomeAndEnd",
    value: function withHomeAndEnd() {
      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      this._homeAndEnd = enabled;
      return this;
    }
  }, {
    key: "setActiveItem",
    value: function setActiveItem(item) {
      var previousActiveItem = this._activeItem;
      this.updateActiveItem(item);

      if (this._activeItem !== previousActiveItem) {
        this.change.next(this._activeItemIndex);
      }
    }
    /**
     * Sets the active item depending on the key event passed in.
     * @param event Keyboard event to be used for determining which element should be active.
     */

  }, {
    key: "onKeydown",
    value: function onKeydown(event) {
      var _this3 = this;

      var keyCode = event.keyCode;
      var modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];
      var isModifierAllowed = modifiers.every(function (modifier) {
        return !event[modifier] || _this3._allowedModifierKeys.indexOf(modifier) > -1;
      });

      switch (keyCode) {
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["TAB"]:
          this.tabOut.next();
          return;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["DOWN_ARROW"]:
          if (this._vertical && isModifierAllowed) {
            this.setNextItemActive();
            break;
          } else {
            return;
          }

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["UP_ARROW"]:
          if (this._vertical && isModifierAllowed) {
            this.setPreviousItemActive();
            break;
          } else {
            return;
          }

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["RIGHT_ARROW"]:
          if (this._horizontal && isModifierAllowed) {
            this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();
            break;
          } else {
            return;
          }

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["LEFT_ARROW"]:
          if (this._horizontal && isModifierAllowed) {
            this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();
            break;
          } else {
            return;
          }

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["HOME"]:
          if (this._homeAndEnd && isModifierAllowed) {
            this.setFirstItemActive();
            break;
          } else {
            return;
          }

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["END"]:
          if (this._homeAndEnd && isModifierAllowed) {
            this.setLastItemActive();
            break;
          } else {
            return;
          }

        default:
          if (isModifierAllowed || Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["hasModifierKey"])(event, 'shiftKey')) {
            // Attempt to use the `event.key` which also maps it to the user's keyboard language,
            // otherwise fall back to resolving alphanumeric characters via the keyCode.
            if (event.key && event.key.length === 1) {
              this._letterKeyStream.next(event.key.toLocaleUpperCase());
            } else if (keyCode >= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["A"] && keyCode <= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["Z"] || keyCode >= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["ZERO"] && keyCode <= _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_11__["NINE"]) {
              this._letterKeyStream.next(String.fromCharCode(keyCode));
            }
          } // Note that we return here, in order to avoid preventing
          // the default action of non-navigational keys.


          return;
      }

      this._pressedLetters = [];
      event.preventDefault();
    }
    /** Index of the currently active item. */

  }, {
    key: "activeItemIndex",
    get: function get() {
      return this._activeItemIndex;
    }
    /** The active item. */

  }, {
    key: "activeItem",
    get: function get() {
      return this._activeItem;
    }
    /** Gets whether the user is currently typing into the manager using the typeahead feature. */

  }, {
    key: "isTyping",
    value: function isTyping() {
      return this._pressedLetters.length > 0;
    }
    /** Sets the active item to the first enabled item in the list. */

  }, {
    key: "setFirstItemActive",
    value: function setFirstItemActive() {
      this._setActiveItemByIndex(0, 1);
    }
    /** Sets the active item to the last enabled item in the list. */

  }, {
    key: "setLastItemActive",
    value: function setLastItemActive() {
      this._setActiveItemByIndex(this._items.length - 1, -1);
    }
    /** Sets the active item to the next enabled item in the list. */

  }, {
    key: "setNextItemActive",
    value: function setNextItemActive() {
      this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);
    }
    /** Sets the active item to a previous enabled item in the list. */

  }, {
    key: "setPreviousItemActive",
    value: function setPreviousItemActive() {
      this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);
    }
  }, {
    key: "updateActiveItem",
    value: function updateActiveItem(item) {
      var itemArray = this._getItemsArray();

      var index = typeof item === 'number' ? item : itemArray.indexOf(item);
      var activeItem = itemArray[index]; // Explicitly check for `null` and `undefined` because other falsy values are valid.

      this._activeItem = activeItem == null ? null : activeItem;
      this._activeItemIndex = index;
    }
    /**
     * This method sets the active item, given a list of items and the delta between the
     * currently active item and the new active item. It will calculate differently
     * depending on whether wrap mode is turned on.
     */

  }, {
    key: "_setActiveItemByDelta",
    value: function _setActiveItemByDelta(delta) {
      this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);
    }
    /**
     * Sets the active item properly given "wrap" mode. In other words, it will continue to move
     * down the list until it finds an item that is not disabled, and it will wrap if it
     * encounters either end of the list.
     */

  }, {
    key: "_setActiveInWrapMode",
    value: function _setActiveInWrapMode(delta) {
      var items = this._getItemsArray();

      for (var i = 1; i <= items.length; i++) {
        var index = (this._activeItemIndex + delta * i + items.length) % items.length;
        var item = items[index];

        if (!this._skipPredicateFn(item)) {
          this.setActiveItem(index);
          return;
        }
      }
    }
    /**
     * Sets the active item properly given the default mode. In other words, it will
     * continue to move down the list until it finds an item that is not disabled. If
     * it encounters either end of the list, it will stop and not wrap.
     */

  }, {
    key: "_setActiveInDefaultMode",
    value: function _setActiveInDefaultMode(delta) {
      this._setActiveItemByIndex(this._activeItemIndex + delta, delta);
    }
    /**
     * Sets the active item to the first enabled item starting at the index specified. If the
     * item is disabled, it will move in the fallbackDelta direction until it either
     * finds an enabled item or encounters the end of the list.
     */

  }, {
    key: "_setActiveItemByIndex",
    value: function _setActiveItemByIndex(index, fallbackDelta) {
      var items = this._getItemsArray();

      if (!items[index]) {
        return;
      }

      while (this._skipPredicateFn(items[index])) {
        index += fallbackDelta;

        if (!items[index]) {
          return;
        }
      }

      this.setActiveItem(index);
    }
    /** Returns the items as an array. */

  }, {
    key: "_getItemsArray",
    value: function _getItemsArray() {
      return this._items instanceof _angular_core__WEBPACK_IMPORTED_MODULE_8__["QueryList"] ? this._items.toArray() : this._items;
    }
  }]);

  return ListKeyManager;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var ActiveDescendantKeyManager = /*#__PURE__*/function (_ListKeyManager) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(ActiveDescendantKeyManager, _ListKeyManager);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(ActiveDescendantKeyManager);

  function ActiveDescendantKeyManager() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ActiveDescendantKeyManager);

    return _super.apply(this, arguments);
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ActiveDescendantKeyManager, [{
    key: "setActiveItem",
    value: function setActiveItem(index) {
      if (this.activeItem) {
        this.activeItem.setInactiveStyles();
      }

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(ActiveDescendantKeyManager.prototype), "setActiveItem", this).call(this, index);

      if (this.activeItem) {
        this.activeItem.setActiveStyles();
      }
    }
  }]);

  return ActiveDescendantKeyManager;
}(ListKeyManager);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var FocusKeyManager = /*#__PURE__*/function (_ListKeyManager2) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(FocusKeyManager, _ListKeyManager2);

  var _super2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(FocusKeyManager);

  function FocusKeyManager() {
    var _this4;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FocusKeyManager);

    _this4 = _super2.apply(this, arguments);
    _this4._origin = 'program';
    return _this4;
  }
  /**
   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.
   * @param origin Focus origin to be used when focusing items.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FocusKeyManager, [{
    key: "setFocusOrigin",
    value: function setFocusOrigin(origin) {
      this._origin = origin;
      return this;
    }
  }, {
    key: "setActiveItem",
    value: function setActiveItem(item) {
      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(FocusKeyManager.prototype), "setActiveItem", this).call(this, item);

      if (this.activeItem) {
        this.activeItem.focus(this._origin);
      }
    }
  }]);

  return FocusKeyManager;
}(ListKeyManager);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Configuration for the isFocusable method.
 */


var IsFocusableConfig = function IsFocusableConfig() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, IsFocusableConfig);

  /**
   * Whether to count an element as focusable even if it is not currently visible.
   */
  this.ignoreVisibility = false;
}; // The InteractivityChecker leans heavily on the ally.js accessibility utilities.
// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are
// supported.

/**
 * Utility for checking the interactivity of an element, such as whether is is focusable or
 * tabbable.
 */


var InteractivityChecker = /*#__PURE__*/function () {
  function InteractivityChecker(_platform) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, InteractivityChecker);

    this._platform = _platform;
  }
  /**
   * Gets whether an element is disabled.
   *
   * @param element Element to be checked.
   * @returns Whether the element is disabled.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(InteractivityChecker, [{
    key: "isDisabled",
    value: function isDisabled(element) {
      // This does not capture some cases, such as a non-form control with a disabled attribute or
      // a form control inside of a disabled form, but should capture the most common cases.
      return element.hasAttribute('disabled');
    }
    /**
     * Gets whether an element is visible for the purposes of interactivity.
     *
     * This will capture states like `display: none` and `visibility: hidden`, but not things like
     * being clipped by an `overflow: hidden` parent or being outside the viewport.
     *
     * @returns Whether the element is visible.
     */

  }, {
    key: "isVisible",
    value: function isVisible(element) {
      return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';
    }
    /**
     * Gets whether an element can be reached via Tab key.
     * Assumes that the element has already been checked with isFocusable.
     *
     * @param element Element to be checked.
     * @returns Whether the element is tabbable.
     */

  }, {
    key: "isTabbable",
    value: function isTabbable(element) {
      // Nothing is tabbable on the server 😎
      if (!this._platform.isBrowser) {
        return false;
      }

      var frameElement = getFrameElement(getWindow(element));

      if (frameElement) {
        // Frame elements inherit their tabindex onto all child elements.
        if (getTabIndexValue(frameElement) === -1) {
          return false;
        } // Browsers disable tabbing to an element inside of an invisible frame.


        if (!this.isVisible(frameElement)) {
          return false;
        }
      }

      var nodeName = element.nodeName.toLowerCase();
      var tabIndexValue = getTabIndexValue(element);

      if (element.hasAttribute('contenteditable')) {
        return tabIndexValue !== -1;
      }

      if (nodeName === 'iframe' || nodeName === 'object') {
        // The frame or object's content may be tabbable depending on the content, but it's
        // not possibly to reliably detect the content of the frames. We always consider such
        // elements as non-tabbable.
        return false;
      } // In iOS, the browser only considers some specific elements as tabbable.


      if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {
        return false;
      }

      if (nodeName === 'audio') {
        // Audio elements without controls enabled are never tabbable, regardless
        // of the tabindex attribute explicitly being set.
        if (!element.hasAttribute('controls')) {
          return false;
        } // Audio elements with controls are by default tabbable unless the
        // tabindex attribute is set to `-1` explicitly.


        return tabIndexValue !== -1;
      }

      if (nodeName === 'video') {
        // For all video elements, if the tabindex attribute is set to `-1`, the video
        // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`
        // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The
        // tabindex attribute is the source of truth here.
        if (tabIndexValue === -1) {
          return false;
        } // If the tabindex is explicitly set, and not `-1` (as per check before), the
        // video element is always tabbable (regardless of whether it has controls or not).


        if (tabIndexValue !== null) {
          return true;
        } // Otherwise (when no explicit tabindex is set), a video is only tabbable if it
        // has controls enabled. Firefox is special as videos are always tabbable regardless
        // of whether there are controls or not.


        return this._platform.FIREFOX || element.hasAttribute('controls');
      }

      return element.tabIndex >= 0;
    }
    /**
     * Gets whether an element can be focused by the user.
     *
     * @param element Element to be checked.
     * @param config The config object with options to customize this method's behavior
     * @returns Whether the element is focusable.
     */

  }, {
    key: "isFocusable",
    value: function isFocusable(element, config) {
      // Perform checks in order of left to most expensive.
      // Again, naive approach that does not capture many edge cases and browser quirks.
      return isPotentiallyFocusable(element) && !this.isDisabled(element) && ((config === null || config === void 0 ? void 0 : config.ignoreVisibility) || this.isVisible(element));
    }
  }]);

  return InteractivityChecker;
}();

InteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) {
  return new (t || InteractivityChecker)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]));
};

InteractivityChecker.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function InteractivityChecker_Factory() {
    return new InteractivityChecker(Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]));
  },
  token: InteractivityChecker,
  providedIn: "root"
});

InteractivityChecker.ctorParameters = function () {
  return [{
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](InteractivityChecker, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
    }];
  }, null);
})();
/**
 * Returns the frame element from a window object. Since browsers like MS Edge throw errors if
 * the frameElement property is being accessed from a different host address, this property
 * should be accessed carefully.
 */


function getFrameElement(window) {
  try {
    return window.frameElement;
  } catch (_a) {
    return null;
  }
}
/** Checks whether the specified element has any geometry / rectangles. */


function hasGeometry(element) {
  // Use logic from jQuery to check for an invisible element.
  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12
  return !!(element.offsetWidth || element.offsetHeight || typeof element.getClientRects === 'function' && element.getClientRects().length);
}
/** Gets whether an element's  */


function isNativeFormElement(element) {
  var nodeName = element.nodeName.toLowerCase();
  return nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea';
}
/** Gets whether an element is an `<input type="hidden">`. */


function isHiddenInput(element) {
  return isInputElement(element) && element.type == 'hidden';
}
/** Gets whether an element is an anchor that has an href attribute. */


function isAnchorWithHref(element) {
  return isAnchorElement(element) && element.hasAttribute('href');
}
/** Gets whether an element is an input element. */


function isInputElement(element) {
  return element.nodeName.toLowerCase() == 'input';
}
/** Gets whether an element is an anchor element. */


function isAnchorElement(element) {
  return element.nodeName.toLowerCase() == 'a';
}
/** Gets whether an element has a valid tabindex. */


function hasValidTabIndex(element) {
  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {
    return false;
  }

  var tabIndex = element.getAttribute('tabindex'); // IE11 parses tabindex="" as the value "-32768"

  if (tabIndex == '-32768') {
    return false;
  }

  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));
}
/**
 * Returns the parsed tabindex from the element attributes instead of returning the
 * evaluated tabindex from the browsers defaults.
 */


function getTabIndexValue(element) {
  if (!hasValidTabIndex(element)) {
    return null;
  } // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054


  var tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);
  return isNaN(tabIndex) ? -1 : tabIndex;
}
/** Checks whether the specified element is potentially tabbable on iOS */


function isPotentiallyTabbableIOS(element) {
  var nodeName = element.nodeName.toLowerCase();
  var inputType = nodeName === 'input' && element.type;
  return inputType === 'text' || inputType === 'password' || nodeName === 'select' || nodeName === 'textarea';
}
/**
 * Gets whether an element is potentially focusable without taking current visible/disabled state
 * into account.
 */


function isPotentiallyFocusable(element) {
  // Inputs are potentially focusable *unless* they're type="hidden".
  if (isHiddenInput(element)) {
    return false;
  }

  return isNativeFormElement(element) || isAnchorWithHref(element) || element.hasAttribute('contenteditable') || hasValidTabIndex(element);
}
/** Gets the parent window of a DOM node with regards of being inside of an iframe. */


function getWindow(node) {
  // ownerDocument is null if `node` itself *is* a document.
  return node.ownerDocument && node.ownerDocument.defaultView || window;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Class that allows for trapping focus within a DOM element.
 *
 * This class currently uses a relatively simple approach to focus trapping.
 * It assumes that the tab order is the same as DOM order, which is not necessarily true.
 * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to misalign.
 *
 * @deprecated Use `ConfigurableFocusTrap` instead.
 * @breaking-change for 11.0.0 Remove this class.
 */


var FocusTrap = /*#__PURE__*/function () {
  function FocusTrap(_element, _checker, _ngZone, _document) {
    var _this5 = this;

    var deferAnchors = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FocusTrap);

    this._element = _element;
    this._checker = _checker;
    this._ngZone = _ngZone;
    this._document = _document;
    this._hasAttached = false; // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.

    this.startAnchorListener = function () {
      return _this5.focusLastTabbableElement();
    };

    this.endAnchorListener = function () {
      return _this5.focusFirstTabbableElement();
    };

    this._enabled = true;

    if (!deferAnchors) {
      this.attachAnchors();
    }
  }
  /** Whether the focus trap is active. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FocusTrap, [{
    key: "enabled",
    get: function get() {
      return this._enabled;
    },
    set: function set(value) {
      this._enabled = value;

      if (this._startAnchor && this._endAnchor) {
        this._toggleAnchorTabIndex(value, this._startAnchor);

        this._toggleAnchorTabIndex(value, this._endAnchor);
      }
    }
    /** Destroys the focus trap by cleaning up the anchors. */

  }, {
    key: "destroy",
    value: function destroy() {
      var startAnchor = this._startAnchor;
      var endAnchor = this._endAnchor;

      if (startAnchor) {
        startAnchor.removeEventListener('focus', this.startAnchorListener);

        if (startAnchor.parentNode) {
          startAnchor.parentNode.removeChild(startAnchor);
        }
      }

      if (endAnchor) {
        endAnchor.removeEventListener('focus', this.endAnchorListener);

        if (endAnchor.parentNode) {
          endAnchor.parentNode.removeChild(endAnchor);
        }
      }

      this._startAnchor = this._endAnchor = null;
      this._hasAttached = false;
    }
    /**
     * Inserts the anchors into the DOM. This is usually done automatically
     * in the constructor, but can be deferred for cases like directives with `*ngIf`.
     * @returns Whether the focus trap managed to attach successfuly. This may not be the case
     * if the target element isn't currently in the DOM.
     */

  }, {
    key: "attachAnchors",
    value: function attachAnchors() {
      var _this6 = this;

      // If we're not on the browser, there can be no focus to trap.
      if (this._hasAttached) {
        return true;
      }

      this._ngZone.runOutsideAngular(function () {
        if (!_this6._startAnchor) {
          _this6._startAnchor = _this6._createAnchor();

          _this6._startAnchor.addEventListener('focus', _this6.startAnchorListener);
        }

        if (!_this6._endAnchor) {
          _this6._endAnchor = _this6._createAnchor();

          _this6._endAnchor.addEventListener('focus', _this6.endAnchorListener);
        }
      });

      if (this._element.parentNode) {
        this._element.parentNode.insertBefore(this._startAnchor, this._element);

        this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);

        this._hasAttached = true;
      }

      return this._hasAttached;
    }
    /**
     * Waits for the zone to stabilize, then either focuses the first element that the
     * user specified, or the first tabbable element.
     * @returns Returns a promise that resolves with a boolean, depending
     * on whether focus was moved successfuly.
     */

  }, {
    key: "focusInitialElementWhenReady",
    value: function focusInitialElementWhenReady() {
      var _this7 = this;

      return new Promise(function (resolve) {
        _this7._executeOnStable(function () {
          return resolve(_this7.focusInitialElement());
        });
      });
    }
    /**
     * Waits for the zone to stabilize, then focuses
     * the first tabbable element within the focus trap region.
     * @returns Returns a promise that resolves with a boolean, depending
     * on whether focus was moved successfuly.
     */

  }, {
    key: "focusFirstTabbableElementWhenReady",
    value: function focusFirstTabbableElementWhenReady() {
      var _this8 = this;

      return new Promise(function (resolve) {
        _this8._executeOnStable(function () {
          return resolve(_this8.focusFirstTabbableElement());
        });
      });
    }
    /**
     * Waits for the zone to stabilize, then focuses
     * the last tabbable element within the focus trap region.
     * @returns Returns a promise that resolves with a boolean, depending
     * on whether focus was moved successfuly.
     */

  }, {
    key: "focusLastTabbableElementWhenReady",
    value: function focusLastTabbableElementWhenReady() {
      var _this9 = this;

      return new Promise(function (resolve) {
        _this9._executeOnStable(function () {
          return resolve(_this9.focusLastTabbableElement());
        });
      });
    }
    /**
     * Get the specified boundary element of the trapped region.
     * @param bound The boundary to get (start or end of trapped region).
     * @returns The boundary element.
     */

  }, {
    key: "_getRegionBoundary",
    value: function _getRegionBoundary(bound) {
      // Contains the deprecated version of selector, for temporary backwards comparability.
      var markers = this._element.querySelectorAll("[cdk-focus-region-".concat(bound, "], ") + "[cdkFocusRegion".concat(bound, "], ") + "[cdk-focus-".concat(bound, "]"));

      for (var i = 0; i < markers.length; i++) {
        // @breaking-change 8.0.0
        if (markers[i].hasAttribute("cdk-focus-".concat(bound))) {
          console.warn("Found use of deprecated attribute 'cdk-focus-".concat(bound, "', ") + "use 'cdkFocusRegion".concat(bound, "' instead. The deprecated ") + "attribute will be removed in 8.0.0.", markers[i]);
        } else if (markers[i].hasAttribute("cdk-focus-region-".concat(bound))) {
          console.warn("Found use of deprecated attribute 'cdk-focus-region-".concat(bound, "', ") + "use 'cdkFocusRegion".concat(bound, "' instead. The deprecated attribute ") + "will be removed in 8.0.0.", markers[i]);
        }
      }

      if (bound == 'start') {
        return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);
      }

      return markers.length ? markers[markers.length - 1] : this._getLastTabbableElement(this._element);
    }
    /**
     * Focuses the element that should be focused when the focus trap is initialized.
     * @returns Whether focus was moved successfuly.
     */

  }, {
    key: "focusInitialElement",
    value: function focusInitialElement() {
      // Contains the deprecated version of selector, for temporary backwards comparability.
      var redirectToElement = this._element.querySelector("[cdk-focus-initial], " + "[cdkFocusInitial]");

      if (redirectToElement) {
        // @breaking-change 8.0.0
        if (redirectToElement.hasAttribute("cdk-focus-initial")) {
          console.warn("Found use of deprecated attribute 'cdk-focus-initial', " + "use 'cdkFocusInitial' instead. The deprecated attribute " + "will be removed in 8.0.0", redirectToElement);
        } // Warn the consumer if the element they've pointed to
        // isn't focusable, when not in production mode.


        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._checker.isFocusable(redirectToElement)) {
          console.warn("Element matching '[cdkFocusInitial]' is not focusable.", redirectToElement);
        }

        redirectToElement.focus();
        return true;
      }

      return this.focusFirstTabbableElement();
    }
    /**
     * Focuses the first tabbable element within the focus trap region.
     * @returns Whether focus was moved successfuly.
     */

  }, {
    key: "focusFirstTabbableElement",
    value: function focusFirstTabbableElement() {
      var redirectToElement = this._getRegionBoundary('start');

      if (redirectToElement) {
        redirectToElement.focus();
      }

      return !!redirectToElement;
    }
    /**
     * Focuses the last tabbable element within the focus trap region.
     * @returns Whether focus was moved successfuly.
     */

  }, {
    key: "focusLastTabbableElement",
    value: function focusLastTabbableElement() {
      var redirectToElement = this._getRegionBoundary('end');

      if (redirectToElement) {
        redirectToElement.focus();
      }

      return !!redirectToElement;
    }
    /**
     * Checks whether the focus trap has successfuly been attached.
     */

  }, {
    key: "hasAttached",
    value: function hasAttached() {
      return this._hasAttached;
    }
    /** Get the first tabbable element from a DOM subtree (inclusive). */

  }, {
    key: "_getFirstTabbableElement",
    value: function _getFirstTabbableElement(root) {
      if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {
        return root;
      } // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall
      // back to `childNodes` which includes text nodes, comments etc.


      var children = root.children || root.childNodes;

      for (var i = 0; i < children.length; i++) {
        var tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(children[i]) : null;

        if (tabbableChild) {
          return tabbableChild;
        }
      }

      return null;
    }
    /** Get the last tabbable element from a DOM subtree (inclusive). */

  }, {
    key: "_getLastTabbableElement",
    value: function _getLastTabbableElement(root) {
      if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {
        return root;
      } // Iterate in reverse DOM order.


      var children = root.children || root.childNodes;

      for (var i = children.length - 1; i >= 0; i--) {
        var tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(children[i]) : null;

        if (tabbableChild) {
          return tabbableChild;
        }
      }

      return null;
    }
    /** Creates an anchor element. */

  }, {
    key: "_createAnchor",
    value: function _createAnchor() {
      var anchor = this._document.createElement('div');

      this._toggleAnchorTabIndex(this._enabled, anchor);

      anchor.classList.add('cdk-visually-hidden');
      anchor.classList.add('cdk-focus-trap-anchor');
      anchor.setAttribute('aria-hidden', 'true');
      return anchor;
    }
    /**
     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.
     * @param isEnabled Whether the focus trap is enabled.
     * @param anchor Anchor on which to toggle the tabindex.
     */

  }, {
    key: "_toggleAnchorTabIndex",
    value: function _toggleAnchorTabIndex(isEnabled, anchor) {
      // Remove the tabindex completely, rather than setting it to -1, because if the
      // element has a tabindex, the user might still hit it when navigating with the arrow keys.
      isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');
    }
    /**
     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.
     * @param enabled: Whether the anchors should trap Tab.
     */

  }, {
    key: "toggleAnchors",
    value: function toggleAnchors(enabled) {
      if (this._startAnchor && this._endAnchor) {
        this._toggleAnchorTabIndex(enabled, this._startAnchor);

        this._toggleAnchorTabIndex(enabled, this._endAnchor);
      }
    }
    /** Executes a function when the zone is stable. */

  }, {
    key: "_executeOnStable",
    value: function _executeOnStable(fn) {
      if (this._ngZone.isStable) {
        fn();
      } else {
        this._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_12__["take"])(1)).subscribe(fn);
      }
    }
  }]);

  return FocusTrap;
}();
/**
 * Factory that allows easy instantiation of focus traps.
 * @deprecated Use `ConfigurableFocusTrapFactory` instead.
 * @breaking-change for 11.0.0 Remove this class.
 */


var FocusTrapFactory = /*#__PURE__*/function () {
  function FocusTrapFactory(_checker, _ngZone, _document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FocusTrapFactory);

    this._checker = _checker;
    this._ngZone = _ngZone;
    this._document = _document;
  }
  /**
   * Creates a focus-trapped region around the given element.
   * @param element The element around which focus will be trapped.
   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done
   *     manually by the user.
   * @returns The created focus trap instance.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FocusTrapFactory, [{
    key: "create",
    value: function create(element) {
      var deferCaptureElements = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);
    }
  }]);

  return FocusTrapFactory;
}();

FocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) {
  return new (t || FocusTrapFactory)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](InteractivityChecker), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]));
};

FocusTrapFactory.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function FocusTrapFactory_Factory() {
    return new FocusTrapFactory(Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(InteractivityChecker), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]));
  },
  token: FocusTrapFactory,
  providedIn: "root"
});

FocusTrapFactory.ctorParameters = function () {
  return [{
    type: InteractivityChecker
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](FocusTrapFactory, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: InteractivityChecker
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/** Directive for trapping focus within a region. */


var CdkTrapFocus = /*#__PURE__*/function () {
  function CdkTrapFocus(_elementRef, _focusTrapFactory, _document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CdkTrapFocus);

    this._elementRef = _elementRef;
    this._focusTrapFactory = _focusTrapFactory;
    /** Previously focused element to restore focus to upon destroy when using autoCapture. */

    this._previouslyFocusedElement = null;
    this._document = _document;
    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);
  }
  /** Whether the focus trap is active. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkTrapFocus, [{
    key: "enabled",
    get: function get() {
      return this.focusTrap.enabled;
    },
    set: function set(value) {
      this.focusTrap.enabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceBooleanProperty"])(value);
    }
    /**
     * Whether the directive should automatially move focus into the trapped region upon
     * initialization and return focus to the previous activeElement upon destruction.
     */

  }, {
    key: "autoCapture",
    get: function get() {
      return this._autoCapture;
    },
    set: function set(value) {
      this._autoCapture = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceBooleanProperty"])(value);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.focusTrap.destroy(); // If we stored a previously focused element when using autoCapture, return focus to that
      // element now that the trapped region is being destroyed.

      if (this._previouslyFocusedElement) {
        this._previouslyFocusedElement.focus();

        this._previouslyFocusedElement = null;
      }
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      this.focusTrap.attachAnchors();

      if (this.autoCapture) {
        this._captureFocus();
      }
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      if (!this.focusTrap.hasAttached()) {
        this.focusTrap.attachAnchors();
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var autoCaptureChange = changes['autoCapture'];

      if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture && this.focusTrap.hasAttached()) {
        this._captureFocus();
      }
    }
  }, {
    key: "_captureFocus",
    value: function _captureFocus() {
      this._previouslyFocusedElement = this._document.activeElement;
      this.focusTrap.focusInitialElementWhenReady();
    }
  }]);

  return CdkTrapFocus;
}();

CdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) {
  return new (t || CdkTrapFocus)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](FocusTrapFactory), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]));
};

CdkTrapFocus.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineDirective"]({
  type: CdkTrapFocus,
  selectors: [["", "cdkTrapFocus", ""]],
  inputs: {
    enabled: ["cdkTrapFocus", "enabled"],
    autoCapture: ["cdkTrapFocusAutoCapture", "autoCapture"]
  },
  exportAs: ["cdkTrapFocus"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵNgOnChangesFeature"]]
});

CdkTrapFocus.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
  }, {
    type: FocusTrapFactory
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }];
};

CdkTrapFocus.propDecorators = {
  enabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
    args: ['cdkTrapFocus']
  }],
  autoCapture: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
    args: ['cdkTrapFocusAutoCapture']
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](CdkTrapFocus, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Directive"],
    args: [{
      selector: '[cdkTrapFocus]',
      exportAs: 'cdkTrapFocus'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
    }, {
      type: FocusTrapFactory
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }];
  }, {
    enabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
      args: ['cdkTrapFocus']
    }],
    autoCapture: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
      args: ['cdkTrapFocusAutoCapture']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Class that allows for trapping focus within a DOM element.
 *
 * This class uses a strategy pattern that determines how it traps focus.
 * See FocusTrapInertStrategy.
 */


var ConfigurableFocusTrap = /*#__PURE__*/function (_FocusTrap) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(ConfigurableFocusTrap, _FocusTrap);

  var _super3 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(ConfigurableFocusTrap);

  function ConfigurableFocusTrap(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {
    var _this10;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ConfigurableFocusTrap);

    _this10 = _super3.call(this, _element, _checker, _ngZone, _document, config.defer);
    _this10._focusTrapManager = _focusTrapManager;
    _this10._inertStrategy = _inertStrategy;

    _this10._focusTrapManager.register(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this10));

    return _this10;
  }
  /** Whether the FocusTrap is enabled. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ConfigurableFocusTrap, [{
    key: "enabled",
    get: function get() {
      return this._enabled;
    },
    set: function set(value) {
      this._enabled = value;

      if (this._enabled) {
        this._focusTrapManager.register(this);
      } else {
        this._focusTrapManager.deregister(this);
      }
    }
    /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */

  }, {
    key: "destroy",
    value: function destroy() {
      this._focusTrapManager.deregister(this);

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(ConfigurableFocusTrap.prototype), "destroy", this).call(this);
    }
    /** @docs-private Implemented as part of ManagedFocusTrap. */

  }, {
    key: "_enable",
    value: function _enable() {
      this._inertStrategy.preventFocus(this);

      this.toggleAnchors(true);
    }
    /** @docs-private Implemented as part of ManagedFocusTrap. */

  }, {
    key: "_disable",
    value: function _disable() {
      this._inertStrategy.allowFocus(this);

      this.toggleAnchors(false);
    }
  }]);

  return ConfigurableFocusTrap;
}(FocusTrap);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** IE 11 compatible closest implementation that is able to start from non-Element Nodes. */


function closest(element, selector) {
  if (!(element instanceof Node)) {
    return null;
  }

  var curr = element;

  while (curr != null && !(curr instanceof Element)) {
    curr = curr.parentNode;
  }

  return curr && (hasNativeClosest ? curr.closest(selector) : polyfillClosest(curr, selector));
}
/** Polyfill for browsers without Element.closest. */


function polyfillClosest(element, selector) {
  var curr = element;

  while (curr != null && !(curr instanceof Element && matches(curr, selector))) {
    curr = curr.parentNode;
  }

  return curr || null;
}

var hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;
/** IE 11 compatible matches implementation. */

function matches(element, selector) {
  return element.matches ? element.matches(selector) : element['msMatchesSelector'](selector);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Lightweight FocusTrapInertStrategy that adds a document focus event
 * listener to redirect focus back inside the FocusTrap.
 */


var EventListenerFocusTrapInertStrategy = /*#__PURE__*/function () {
  function EventListenerFocusTrapInertStrategy() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, EventListenerFocusTrapInertStrategy);

    /** Focus event handler. */
    this._listener = null;
  }
  /** Adds a document event listener that keeps focus inside the FocusTrap. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(EventListenerFocusTrapInertStrategy, [{
    key: "preventFocus",
    value: function preventFocus(focusTrap) {
      var _this11 = this;

      // Ensure there's only one listener per document
      if (this._listener) {
        focusTrap._document.removeEventListener('focus', this._listener, true);
      }

      this._listener = function (e) {
        return _this11._trapFocus(focusTrap, e);
      };

      focusTrap._ngZone.runOutsideAngular(function () {
        focusTrap._document.addEventListener('focus', _this11._listener, true);
      });
    }
    /** Removes the event listener added in preventFocus. */

  }, {
    key: "allowFocus",
    value: function allowFocus(focusTrap) {
      if (!this._listener) {
        return;
      }

      focusTrap._document.removeEventListener('focus', this._listener, true);

      this._listener = null;
    }
    /**
     * Refocuses the first element in the FocusTrap if the focus event target was outside
     * the FocusTrap.
     *
     * This is an event listener callback. The event listener is added in runOutsideAngular,
     * so all this code runs outside Angular as well.
     */

  }, {
    key: "_trapFocus",
    value: function _trapFocus(focusTrap, event) {
      var target = event.target;
      var focusTrapRoot = focusTrap._element; // Don't refocus if target was in an overlay, because the overlay might be associated
      // with an element inside the FocusTrap, ex. mat-select.

      if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {
        // Some legacy FocusTrap usages have logic that focuses some element on the page
        // just before FocusTrap is destroyed. For backwards compatibility, wait
        // to be sure FocusTrap is still enabled before refocusing.
        setTimeout(function () {
          // Check whether focus wasn't put back into the focus trap while the timeout was pending.
          if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {
            focusTrap.focusFirstTabbableElement();
          }
        });
      }
    }
  }]);

  return EventListenerFocusTrapInertStrategy;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Configuration for creating a ConfigurableFocusTrap.
 */


var ConfigurableFocusTrapConfig = function ConfigurableFocusTrapConfig() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ConfigurableFocusTrapConfig);

  /**
   * Whether to defer the creation of FocusTrap elements to be
   * done manually by the user. Default is to create them
   * automatically.
   */
  this.defer = false;
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** The injection token used to specify the inert strategy. */


var FOCUS_TRAP_INERT_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["InjectionToken"]('FOCUS_TRAP_INERT_STRATEGY');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injectable that ensures only the most recently enabled FocusTrap is active. */

var FocusTrapManager = /*#__PURE__*/function () {
  function FocusTrapManager() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FocusTrapManager);

    // A stack of the FocusTraps on the page. Only the FocusTrap at the
    // top of the stack is active.
    this._focusTrapStack = [];
  }
  /**
   * Disables the FocusTrap at the top of the stack, and then pushes
   * the new FocusTrap onto the stack.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FocusTrapManager, [{
    key: "register",
    value: function register(focusTrap) {
      // Dedupe focusTraps that register multiple times.
      this._focusTrapStack = this._focusTrapStack.filter(function (ft) {
        return ft !== focusTrap;
      });
      var stack = this._focusTrapStack;

      if (stack.length) {
        stack[stack.length - 1]._disable();
      }

      stack.push(focusTrap);

      focusTrap._enable();
    }
    /**
     * Removes the FocusTrap from the stack, and activates the
     * FocusTrap that is the new top of the stack.
     */

  }, {
    key: "deregister",
    value: function deregister(focusTrap) {
      focusTrap._disable();

      var stack = this._focusTrapStack;
      var i = stack.indexOf(focusTrap);

      if (i !== -1) {
        stack.splice(i, 1);

        if (stack.length) {
          stack[stack.length - 1]._enable();
        }
      }
    }
  }]);

  return FocusTrapManager;
}();

FocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) {
  return new (t || FocusTrapManager)();
};

FocusTrapManager.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function FocusTrapManager_Factory() {
    return new FocusTrapManager();
  },
  token: FocusTrapManager,
  providedIn: "root"
});
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](FocusTrapManager, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Factory that allows easy instantiation of configurable focus traps. */


var ConfigurableFocusTrapFactory = /*#__PURE__*/function () {
  function ConfigurableFocusTrapFactory(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, ConfigurableFocusTrapFactory);

    this._checker = _checker;
    this._ngZone = _ngZone;
    this._focusTrapManager = _focusTrapManager;
    this._document = _document; // TODO split up the strategies into different modules, similar to DateAdapter.

    this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(ConfigurableFocusTrapFactory, [{
    key: "create",
    value: function create(element) {
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new ConfigurableFocusTrapConfig();
      var configObject;

      if (typeof config === 'boolean') {
        configObject = new ConfigurableFocusTrapConfig();
        configObject.defer = config;
      } else {
        configObject = config;
      }

      return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);
    }
  }]);

  return ConfigurableFocusTrapFactory;
}();

ConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) {
  return new (t || ConfigurableFocusTrapFactory)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](InteractivityChecker), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](FocusTrapManager), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](FOCUS_TRAP_INERT_STRATEGY, 8));
};

ConfigurableFocusTrapFactory.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function ConfigurableFocusTrapFactory_Factory() {
    return new ConfigurableFocusTrapFactory(Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(InteractivityChecker), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(FocusTrapManager), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(FOCUS_TRAP_INERT_STRATEGY, 8));
  },
  token: ConfigurableFocusTrapFactory,
  providedIn: "root"
});

ConfigurableFocusTrapFactory.ctorParameters = function () {
  return [{
    type: InteractivityChecker
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
  }, {
    type: FocusTrapManager
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [FOCUS_TRAP_INERT_STRATEGY]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](ConfigurableFocusTrapFactory, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: InteractivityChecker
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
    }, {
      type: FocusTrapManager
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [FOCUS_TRAP_INERT_STRATEGY]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var LIVE_ANNOUNCER_ELEMENT_TOKEN = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["InjectionToken"]('liveAnnouncerElement', {
  providedIn: 'root',
  factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY
});
/** @docs-private */

function LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {
  return null;
}
/** Injection token that can be used to configure the default options for the LiveAnnouncer. */


var LIVE_ANNOUNCER_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["InjectionToken"]('LIVE_ANNOUNCER_DEFAULT_OPTIONS');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var LiveAnnouncer = /*#__PURE__*/function () {
  function LiveAnnouncer(elementToken, _ngZone, _document, _defaultOptions) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, LiveAnnouncer);

    this._ngZone = _ngZone;
    this._defaultOptions = _defaultOptions; // We inject the live element and document as `any` because the constructor signature cannot
    // reference browser globals (HTMLElement, Document) on non-browser environments, since having
    // a class decorator causes TypeScript to preserve the constructor signature types.

    this._document = _document;
    this._liveElement = elementToken || this._createLiveElement();
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(LiveAnnouncer, [{
    key: "announce",
    value: function announce(message) {
      var _this12 = this;

      var defaultOptions = this._defaultOptions;
      var politeness;
      var duration;

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      if (args.length === 1 && typeof args[0] === 'number') {
        duration = args[0];
      } else {
        politeness = args[0];
        duration = args[1];
      }

      this.clear();
      clearTimeout(this._previousTimeout);

      if (!politeness) {
        politeness = defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';
      }

      if (duration == null && defaultOptions) {
        duration = defaultOptions.duration;
      } // TODO: ensure changing the politeness works on all environments we support.


      this._liveElement.setAttribute('aria-live', politeness); // This 100ms timeout is necessary for some browser + screen-reader combinations:
      // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.
      // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a
      //   second time without clearing and then using a non-zero delay.
      // (using JAWS 17 at time of this writing).


      return this._ngZone.runOutsideAngular(function () {
        return new Promise(function (resolve) {
          clearTimeout(_this12._previousTimeout);
          _this12._previousTimeout = setTimeout(function () {
            _this12._liveElement.textContent = message;
            resolve();

            if (typeof duration === 'number') {
              _this12._previousTimeout = setTimeout(function () {
                return _this12.clear();
              }, duration);
            }
          }, 100);
        });
      });
    }
    /**
     * Clears the current text from the announcer element. Can be used to prevent
     * screen readers from reading the text out again while the user is going
     * through the page landmarks.
     */

  }, {
    key: "clear",
    value: function clear() {
      if (this._liveElement) {
        this._liveElement.textContent = '';
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      clearTimeout(this._previousTimeout);

      if (this._liveElement && this._liveElement.parentNode) {
        this._liveElement.parentNode.removeChild(this._liveElement);

        this._liveElement = null;
      }
    }
  }, {
    key: "_createLiveElement",
    value: function _createLiveElement() {
      var elementClass = 'cdk-live-announcer-element';

      var previousElements = this._document.getElementsByClassName(elementClass);

      var liveEl = this._document.createElement('div'); // Remove any old containers. This can happen when coming in from a server-side-rendered page.


      for (var i = 0; i < previousElements.length; i++) {
        previousElements[i].parentNode.removeChild(previousElements[i]);
      }

      liveEl.classList.add(elementClass);
      liveEl.classList.add('cdk-visually-hidden');
      liveEl.setAttribute('aria-atomic', 'true');
      liveEl.setAttribute('aria-live', 'polite');

      this._document.body.appendChild(liveEl);

      return liveEl;
    }
  }]);

  return LiveAnnouncer;
}();

LiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) {
  return new (t || LiveAnnouncer)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8));
};

LiveAnnouncer.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function LiveAnnouncer_Factory() {
    return new LiveAnnouncer(Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8));
  },
  token: LiveAnnouncer,
  providedIn: "root"
});

LiveAnnouncer.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](LiveAnnouncer, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]
      }]
    }];
  }, null);
})();
/**
 * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility
 * with a wider range of browsers and screen readers.
 */


var CdkAriaLive = /*#__PURE__*/function () {
  function CdkAriaLive(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CdkAriaLive);

    this._elementRef = _elementRef;
    this._liveAnnouncer = _liveAnnouncer;
    this._contentObserver = _contentObserver;
    this._ngZone = _ngZone;
    this._politeness = 'polite';
  }
  /** The aria-live politeness level to use when announcing messages. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkAriaLive, [{
    key: "politeness",
    get: function get() {
      return this._politeness;
    },
    set: function set(value) {
      var _this13 = this;

      this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';

      if (this._politeness === 'off') {
        if (this._subscription) {
          this._subscription.unsubscribe();

          this._subscription = null;
        }
      } else if (!this._subscription) {
        this._subscription = this._ngZone.runOutsideAngular(function () {
          return _this13._contentObserver.observe(_this13._elementRef).subscribe(function () {
            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.
            var elementText = _this13._elementRef.nativeElement.textContent; // The `MutationObserver` fires also for attribute
            // changes which we don't want to announce.

            if (elementText !== _this13._previousAnnouncedText) {
              _this13._liveAnnouncer.announce(elementText, _this13._politeness);

              _this13._previousAnnouncedText = elementText;
            }
          });
        });
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this._subscription) {
        this._subscription.unsubscribe();
      }
    }
  }]);

  return CdkAriaLive;
}();

CdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) {
  return new (t || CdkAriaLive)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](LiveAnnouncer), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__["ContentObserver"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]));
};

CdkAriaLive.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineDirective"]({
  type: CdkAriaLive,
  selectors: [["", "cdkAriaLive", ""]],
  inputs: {
    politeness: ["cdkAriaLive", "politeness"]
  },
  exportAs: ["cdkAriaLive"]
});

CdkAriaLive.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
  }, {
    type: LiveAnnouncer
  }, {
    type: _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__["ContentObserver"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
  }];
};

CdkAriaLive.propDecorators = {
  politeness: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
    args: ['cdkAriaLive']
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](CdkAriaLive, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Directive"],
    args: [{
      selector: '[cdkAriaLive]',
      exportAs: 'cdkAriaLive'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
    }, {
      type: LiveAnnouncer
    }, {
      type: _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__["ContentObserver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
    }];
  }, {
    politeness: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Input"],
      args: ['cdkAriaLive']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Screenreaders will often fire fake mousedown events when a focusable element
 * is activated using the keyboard. We can typically distinguish between these faked
 * mousedown events and real mousedown events using the "buttons" property. While
 * real mousedowns will indicate the mouse button that was pressed (e.g. "1" for
 * the left mouse button), faked mousedowns will usually set the property value to 0.
 */


function isFakeMousedownFromScreenReader(event) {
  return event.buttons === 0;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found
// that a value of around 650ms seems appropriate.


var TOUCH_BUFFER_MS = 650;
/** InjectionToken for FocusMonitorOptions. */

var FOCUS_MONITOR_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["InjectionToken"]('cdk-focus-monitor-default-options');
/**
 * Event listener options that enable capturing and also
 * mark the listener as passive if the browser supports it.
 */

var captureEventListenerOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["normalizePassiveListenerOptions"])({
  passive: true,
  capture: true
});
/** Monitors mouse and keyboard events to determine the cause of focus events. */

var FocusMonitor = /*#__PURE__*/function () {
  function FocusMonitor(_ngZone, _platform,
  /** @breaking-change 11.0.0 make document required */
  document, options) {
    var _this14 = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, FocusMonitor);

    this._ngZone = _ngZone;
    this._platform = _platform;
    /** The focus origin that the next focus event is a result of. */

    this._origin = null;
    /** Whether the window has just been focused. */

    this._windowFocused = false;
    /** Map of elements being monitored to their info. */

    this._elementInfo = new Map();
    /** The number of elements currently being monitored. */

    this._monitoredElementCount = 0;
    /**
     * Keeps track of the root nodes to which we've currently bound a focus/blur handler,
     * as well as the number of monitored elements that they contain. We have to treat focus/blur
     * handlers differently from the rest of the events, because the browser won't emit events
     * to the document when focus moves inside of a shadow root.
     */

    this._rootNodeFocusListenerCount = new Map();
    /**
     * Event listener for `keydown` events on the document.
     * Needs to be an arrow function in order to preserve the context when it gets bound.
     */

    this._documentKeydownListener = function () {
      // On keydown record the origin and clear any touch event that may be in progress.
      _this14._lastTouchTarget = null;

      _this14._setOriginForCurrentEventQueue('keyboard');
    };
    /**
     * Event listener for `mousedown` events on the document.
     * Needs to be an arrow function in order to preserve the context when it gets bound.
     */


    this._documentMousedownListener = function (event) {
      // On mousedown record the origin only if there is not touch
      // target, since a mousedown can happen as a result of a touch event.
      if (!_this14._lastTouchTarget) {
        // In some cases screen readers fire fake `mousedown` events instead of `keydown`.
        // Resolve the focus source to `keyboard` if we detect one of them.
        var source = isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse';

        _this14._setOriginForCurrentEventQueue(source);
      }
    };
    /**
     * Event listener for `touchstart` events on the document.
     * Needs to be an arrow function in order to preserve the context when it gets bound.
     */


    this._documentTouchstartListener = function (event) {
      // When the touchstart event fires the focus event is not yet in the event queue. This means
      // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to
      // see if a focus happens.
      if (_this14._touchTimeoutId != null) {
        clearTimeout(_this14._touchTimeoutId);
      }

      _this14._lastTouchTarget = getTarget(event);
      _this14._touchTimeoutId = setTimeout(function () {
        return _this14._lastTouchTarget = null;
      }, TOUCH_BUFFER_MS);
    };
    /**
     * Event listener for `focus` events on the window.
     * Needs to be an arrow function in order to preserve the context when it gets bound.
     */


    this._windowFocusListener = function () {
      // Make a note of when the window regains focus, so we can
      // restore the origin info for the focused element.
      _this14._windowFocused = true;
      _this14._windowFocusTimeoutId = setTimeout(function () {
        return _this14._windowFocused = false;
      });
    };
    /**
     * Event listener for `focus` and 'blur' events on the document.
     * Needs to be an arrow function in order to preserve the context when it gets bound.
     */


    this._rootNodeFocusAndBlurListener = function (event) {
      var target = getTarget(event);
      var handler = event.type === 'focus' ? _this14._onFocus : _this14._onBlur; // We need to walk up the ancestor chain in order to support `checkChildren`.

      for (var element = target; element; element = element.parentElement) {
        handler.call(_this14, event, element);
      }
    };

    this._document = document;
    this._detectionMode = (options === null || options === void 0 ? void 0 : options.detectionMode) || 0
    /* IMMEDIATE */
    ;
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(FocusMonitor, [{
    key: "monitor",
    value: function monitor(element) {
      var checkChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var nativeElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceElement"])(element); // Do nothing if we're not on the browser platform or the passed in node isn't an element.

      if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])(null);
      } // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to
      // the shadow root, rather than the `document`, because the browser won't emit focus events
      // to the `document`, if focus is moving within the same shadow root.


      var rootNode = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["_getShadowRoot"])(nativeElement) || this._getDocument();

      var cachedInfo = this._elementInfo.get(nativeElement); // Check if we're already monitoring this element.


      if (cachedInfo) {
        if (checkChildren) {
          // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren
          // observers into ones that behave as if `checkChildren` was turned on. We need a more
          // robust solution.
          cachedInfo.checkChildren = true;
        }

        return cachedInfo.subject;
      } // Create monitored element info.


      var info = {
        checkChildren: checkChildren,
        subject: new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"](),
        rootNode: rootNode
      };

      this._elementInfo.set(nativeElement, info);

      this._registerGlobalListeners(info);

      return info.subject;
    }
  }, {
    key: "stopMonitoring",
    value: function stopMonitoring(element) {
      var nativeElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceElement"])(element);

      var elementInfo = this._elementInfo.get(nativeElement);

      if (elementInfo) {
        elementInfo.subject.complete();

        this._setClasses(nativeElement);

        this._elementInfo.delete(nativeElement);

        this._removeGlobalListeners(elementInfo);
      }
    }
  }, {
    key: "focusVia",
    value: function focusVia(element, origin, options) {
      var nativeElement = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_13__["coerceElement"])(element);

      this._setOriginForCurrentEventQueue(origin); // `focus` isn't available on the server


      if (typeof nativeElement.focus === 'function') {
        // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.
        nativeElement.focus(options);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var _this15 = this;

      this._elementInfo.forEach(function (_info, element) {
        return _this15.stopMonitoring(element);
      });
    }
    /** Access injected document if available or fallback to global document reference */

  }, {
    key: "_getDocument",
    value: function _getDocument() {
      return this._document || document;
    }
    /** Use defaultView of injected document if available or fallback to global window reference */

  }, {
    key: "_getWindow",
    value: function _getWindow() {
      var doc = this._getDocument();

      return doc.defaultView || window;
    }
  }, {
    key: "_toggleClass",
    value: function _toggleClass(element, className, shouldSet) {
      if (shouldSet) {
        element.classList.add(className);
      } else {
        element.classList.remove(className);
      }
    }
  }, {
    key: "_getFocusOrigin",
    value: function _getFocusOrigin(event) {
      // If we couldn't detect a cause for the focus event, it's due to one of three reasons:
      // 1) The window has just regained focus, in which case we want to restore the focused state of
      //    the element from before the window blurred.
      // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.
      // 3) The element was programmatically focused, in which case we should mark the origin as
      //    'program'.
      if (this._origin) {
        return this._origin;
      }

      if (this._windowFocused && this._lastFocusOrigin) {
        return this._lastFocusOrigin;
      } else if (this._wasCausedByTouch(event)) {
        return 'touch';
      } else {
        return 'program';
      }
    }
    /**
     * Sets the focus classes on the element based on the given focus origin.
     * @param element The element to update the classes on.
     * @param origin The focus origin.
     */

  }, {
    key: "_setClasses",
    value: function _setClasses(element, origin) {
      this._toggleClass(element, 'cdk-focused', !!origin);

      this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');

      this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');

      this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');

      this._toggleClass(element, 'cdk-program-focused', origin === 'program');
    }
    /**
     * Sets the origin and schedules an async function to clear it at the end of the event queue.
     * If the detection mode is 'eventual', the origin is never cleared.
     * @param origin The origin to set.
     */

  }, {
    key: "_setOriginForCurrentEventQueue",
    value: function _setOriginForCurrentEventQueue(origin) {
      var _this16 = this;

      this._ngZone.runOutsideAngular(function () {
        _this16._origin = origin;

        if (_this16._detectionMode === 0
        /* IMMEDIATE */
        ) {
            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*
            // tick after the interaction event fired. To ensure the focus origin is always correct,
            // the focus origin will be determined at the beginning of the next tick.
            _this16._originTimeoutId = setTimeout(function () {
              return _this16._origin = null;
            }, 1);
          }
      });
    }
    /**
     * Checks whether the given focus event was caused by a touchstart event.
     * @param event The focus event to check.
     * @returns Whether the event was caused by a touch.
     */

  }, {
    key: "_wasCausedByTouch",
    value: function _wasCausedByTouch(event) {
      // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.
      // Consider the following dom structure:
      //
      // <div #parent tabindex="0" cdkFocusClasses>
      //   <div #child (click)="#parent.focus()"></div>
      // </div>
      //
      // If the user touches the #child element and the #parent is programmatically focused as a
      // result, this code will still consider it to have been caused by the touch event and will
      // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a
      // relatively small edge-case that can be worked around by using
      // focusVia(parentEl, 'program') to focus the parent element.
      //
      // If we decide that we absolutely must handle this case correctly, we can do so by listening
      // for the first focus event after the touchstart, and then the first blur event after that
      // focus event. When that blur event fires we know that whatever follows is not a result of the
      // touchstart.
      var focusTarget = getTarget(event);
      return this._lastTouchTarget instanceof Node && focusTarget instanceof Node && (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));
    }
    /**
     * Handles focus events on a registered element.
     * @param event The focus event.
     * @param element The monitored element.
     */

  }, {
    key: "_onFocus",
    value: function _onFocus(event, element) {
      // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent
      // focus event affecting the monitored element. If we want to use the origin of the first event
      // instead we should check for the cdk-focused class here and return if the element already has
      // it. (This only matters for elements that have includesChildren = true).
      // If we are not counting child-element-focus as focused, make sure that the event target is the
      // monitored element itself.
      var elementInfo = this._elementInfo.get(element);

      if (!elementInfo || !elementInfo.checkChildren && element !== getTarget(event)) {
        return;
      }

      var origin = this._getFocusOrigin(event);

      this._setClasses(element, origin);

      this._emitOrigin(elementInfo.subject, origin);

      this._lastFocusOrigin = origin;
    }
    /**
     * Handles blur events on a registered element.
     * @param event The blur event.
     * @param element The monitored element.
     */

  }, {
    key: "_onBlur",
    value: function _onBlur(event, element) {
      // If we are counting child-element-focus as focused, make sure that we aren't just blurring in
      // order to focus another child of the monitored element.
      var elementInfo = this._elementInfo.get(element);

      if (!elementInfo || elementInfo.checkChildren && event.relatedTarget instanceof Node && element.contains(event.relatedTarget)) {
        return;
      }

      this._setClasses(element);

      this._emitOrigin(elementInfo.subject, null);
    }
  }, {
    key: "_emitOrigin",
    value: function _emitOrigin(subject, origin) {
      this._ngZone.run(function () {
        return subject.next(origin);
      });
    }
  }, {
    key: "_registerGlobalListeners",
    value: function _registerGlobalListeners(elementInfo) {
      var _this17 = this;

      if (!this._platform.isBrowser) {
        return;
      }

      var rootNode = elementInfo.rootNode;
      var rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;

      if (!rootNodeFocusListeners) {
        this._ngZone.runOutsideAngular(function () {
          rootNode.addEventListener('focus', _this17._rootNodeFocusAndBlurListener, captureEventListenerOptions);
          rootNode.addEventListener('blur', _this17._rootNodeFocusAndBlurListener, captureEventListenerOptions);
        });
      }

      this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1); // Register global listeners when first element is monitored.


      if (++this._monitoredElementCount === 1) {
        // Note: we listen to events in the capture phase so we
        // can detect them even if the user stops propagation.
        this._ngZone.runOutsideAngular(function () {
          var document = _this17._getDocument();

          var window = _this17._getWindow();

          document.addEventListener('keydown', _this17._documentKeydownListener, captureEventListenerOptions);
          document.addEventListener('mousedown', _this17._documentMousedownListener, captureEventListenerOptions);
          document.addEventListener('touchstart', _this17._documentTouchstartListener, captureEventListenerOptions);
          window.addEventListener('focus', _this17._windowFocusListener);
        });
      }
    }
  }, {
    key: "_removeGlobalListeners",
    value: function _removeGlobalListeners(elementInfo) {
      var rootNode = elementInfo.rootNode;

      if (this._rootNodeFocusListenerCount.has(rootNode)) {
        var rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);

        if (rootNodeFocusListeners > 1) {
          this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);
        } else {
          rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);
          rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);

          this._rootNodeFocusListenerCount.delete(rootNode);
        }
      } // Unregister global listeners when last element is unmonitored.


      if (! --this._monitoredElementCount) {
        var _document2 = this._getDocument();

        var _window = this._getWindow();

        _document2.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);

        _document2.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);

        _document2.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);

        _window.removeEventListener('focus', this._windowFocusListener); // Clear timeouts for all potentially pending timeouts to prevent the leaks.


        clearTimeout(this._windowFocusTimeoutId);
        clearTimeout(this._touchTimeoutId);
        clearTimeout(this._originTimeoutId);
      }
    }
  }]);

  return FocusMonitor;
}();

FocusMonitor.ɵfac = function FocusMonitor_Factory(t) {
  return new (t || FocusMonitor)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](FOCUS_MONITOR_DEFAULT_OPTIONS, 8));
};

FocusMonitor.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function FocusMonitor_Factory() {
    return new FocusMonitor(Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"], 8), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(FOCUS_MONITOR_DEFAULT_OPTIONS, 8));
  },
  token: FocusMonitor,
  providedIn: "root"
});

FocusMonitor.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [FOCUS_MONITOR_DEFAULT_OPTIONS]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](FocusMonitor, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [FOCUS_MONITOR_DEFAULT_OPTIONS]
      }]
    }];
  }, null);
})();
/** Gets the target of an event, accounting for Shadow DOM. */


function getTarget(event) {
  // If an event is bound outside the Shadow DOM, the `event.target` will
  // point to the shadow root so we have to use `composedPath` instead.
  return event.composedPath ? event.composedPath()[0] : event.target;
}
/**
 * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or
 * programmatically) and adds corresponding classes to the element.
 *
 * There are two variants of this directive:
 * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is
 *    focused.
 * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.
 */


var CdkMonitorFocus = /*#__PURE__*/function () {
  function CdkMonitorFocus(_elementRef, _focusMonitor) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, CdkMonitorFocus);

    this._elementRef = _elementRef;
    this._focusMonitor = _focusMonitor;
    this.cdkFocusChange = new _angular_core__WEBPACK_IMPORTED_MODULE_8__["EventEmitter"]();
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkMonitorFocus, [{
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this18 = this;

      var element = this._elementRef.nativeElement;
      this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus')).subscribe(function (origin) {
        return _this18.cdkFocusChange.emit(origin);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._focusMonitor.stopMonitoring(this._elementRef);

      if (this._monitorSubscription) {
        this._monitorSubscription.unsubscribe();
      }
    }
  }]);

  return CdkMonitorFocus;
}();

CdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) {
  return new (t || CdkMonitorFocus)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](FocusMonitor));
};

CdkMonitorFocus.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineDirective"]({
  type: CdkMonitorFocus,
  selectors: [["", "cdkMonitorElementFocus", ""], ["", "cdkMonitorSubtreeFocus", ""]],
  outputs: {
    cdkFocusChange: "cdkFocusChange"
  }
});

CdkMonitorFocus.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
  }, {
    type: FocusMonitor
  }];
};

CdkMonitorFocus.propDecorators = {
  cdkFocusChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](CdkMonitorFocus, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Directive"],
    args: [{
      selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["ElementRef"]
    }, {
      type: FocusMonitor
    }];
  }, {
    cdkFocusChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Output"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** CSS class applied to the document body when in black-on-white high-contrast mode. */


var BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';
/** CSS class applied to the document body when in white-on-black high-contrast mode. */

var WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';
/** CSS class applied to the document body when in high-contrast mode. */

var HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';
/**
 * Service to determine whether the browser is currently in a high-contrast-mode environment.
 *
 * Microsoft Windows supports an accessibility feature called "High Contrast Mode". This mode
 * changes the appearance of all applications, including web applications, to dramatically increase
 * contrast.
 *
 * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast
 * Mode. This service does not detect high-contrast mode as added by the Chrome "High Contrast"
 * browser extension.
 */

var HighContrastModeDetector = /*#__PURE__*/function () {
  function HighContrastModeDetector(_platform, document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, HighContrastModeDetector);

    this._platform = _platform;
    this._document = document;
  }
  /** Gets the current high-contrast-mode for the page. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(HighContrastModeDetector, [{
    key: "getHighContrastMode",
    value: function getHighContrastMode() {
      if (!this._platform.isBrowser) {
        return 0
        /* NONE */
        ;
      } // Create a test element with an arbitrary background-color that is neither black nor
      // white; high-contrast mode will coerce the color to either black or white. Also ensure that
      // appending the test element to the DOM does not affect layout by absolutely positioning it


      var testElement = this._document.createElement('div');

      testElement.style.backgroundColor = 'rgb(1,2,3)';
      testElement.style.position = 'absolute';

      this._document.body.appendChild(testElement); // Get the computed style for the background color, collapsing spaces to normalize between
      // browsers. Once we get this color, we no longer need the test element. Access the `window`
      // via the document so we can fake it in tests. Note that we have extra null checks, because
      // this logic will likely run during app bootstrap and throwing can break the entire app.


      var documentWindow = this._document.defaultView || window;
      var computedStyle = documentWindow && documentWindow.getComputedStyle ? documentWindow.getComputedStyle(testElement) : null;
      var computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');

      this._document.body.removeChild(testElement);

      switch (computedColor) {
        case 'rgb(0,0,0)':
          return 2
          /* WHITE_ON_BLACK */
          ;

        case 'rgb(255,255,255)':
          return 1
          /* BLACK_ON_WHITE */
          ;
      }

      return 0
      /* NONE */
      ;
    }
    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */

  }, {
    key: "_applyBodyHighContrastModeCssClasses",
    value: function _applyBodyHighContrastModeCssClasses() {
      if (this._platform.isBrowser && this._document.body) {
        var bodyClasses = this._document.body.classList; // IE11 doesn't support `classList` operations with multiple arguments

        bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);
        bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);
        bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);
        var mode = this.getHighContrastMode();

        if (mode === 1
        /* BLACK_ON_WHITE */
        ) {
            bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);
            bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);
          } else if (mode === 2
        /* WHITE_ON_BLACK */
        ) {
            bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);
            bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);
          }
      }
    }
  }]);

  return HighContrastModeDetector;
}();

HighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) {
  return new (t || HighContrastModeDetector)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]));
};

HighContrastModeDetector.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"])({
  factory: function HighContrastModeDetector_Factory() {
    return new HighContrastModeDetector(Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]));
  },
  token: HighContrastModeDetector,
  providedIn: "root"
});

HighContrastModeDetector.ctorParameters = function () {
  return [{
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](HighContrastModeDetector, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["Platform"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_7__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var A11yModule = function A11yModule(highContrastModeDetector) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, A11yModule);

  highContrastModeDetector._applyBodyHighContrastModeCssClasses();
};

A11yModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineNgModule"]({
  type: A11yModule
});
A11yModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjector"]({
  factory: function A11yModule_Factory(t) {
    return new (t || A11yModule)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](HighContrastModeDetector));
  },
  imports: [[_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["PlatformModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__["ObserversModule"]]]
});

A11yModule.ctorParameters = function () {
  return [{
    type: HighContrastModeDetector
  }];
};

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵsetNgModuleScope"](A11yModule, {
    declarations: function declarations() {
      return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus];
    },
    imports: function imports() {
      return [_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["PlatformModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__["ObserversModule"]];
    },
    exports: function exports() {
      return [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵsetClassMetadata"](A11yModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_8__["NgModule"],
    args: [{
      imports: [_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_9__["PlatformModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_14__["ObserversModule"]],
      declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],
      exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]
    }]
  }], function () {
    return [{
      type: HighContrastModeDetector
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "vxfF":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js ***!
  \**********************************************************************/
/*! exports provided: CdkFixedSizeVirtualScroll, CdkScrollable, CdkScrollableModule, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkFixedSizeVirtualScroll", function() { return CdkFixedSizeVirtualScroll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkScrollable", function() { return CdkScrollable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkScrollableModule", function() { return CdkScrollableModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkVirtualForOf", function() { return CdkVirtualForOf; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkVirtualScrollViewport", function() { return CdkVirtualScrollViewport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_RESIZE_TIME", function() { return DEFAULT_RESIZE_TIME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_SCROLL_TIME", function() { return DEFAULT_SCROLL_TIME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FixedSizeVirtualScrollStrategy", function() { return FixedSizeVirtualScrollStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollDispatcher", function() { return ScrollDispatcher; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollingModule", function() { return ScrollingModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VIRTUAL_SCROLL_STRATEGY", function() { return VIRTUAL_SCROLL_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewportRuler", function() { return ViewportRuler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_fixedSizeVirtualScrollStrategyFactory", function() { return _fixedSizeVirtualScrollStrategyFactory; });
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/cdk/collections */ "0EQZ");
















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** The injection token used to specify the virtual scrolling strategy. */





var _c0 = ["contentWrapper"];
var _c1 = ["*"];
var VIRTUAL_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_9__["InjectionToken"]('VIRTUAL_SCROLL_STRATEGY');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Virtual scrolling strategy for lists with items of known fixed size. */

var FixedSizeVirtualScrollStrategy = /*#__PURE__*/function () {
  /**
   * @param itemSize The size of the items in the virtually scrolling list.
   * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more
   * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.
   */
  function FixedSizeVirtualScrollStrategy(itemSize, minBufferPx, maxBufferPx) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, FixedSizeVirtualScrollStrategy);

    this._scrolledIndexChange = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** @docs-private Implemented as part of VirtualScrollStrategy. */

    this.scrolledIndexChange = this._scrolledIndexChange.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["distinctUntilChanged"])());
    /** The attached viewport. */

    this._viewport = null;
    this._itemSize = itemSize;
    this._minBufferPx = minBufferPx;
    this._maxBufferPx = maxBufferPx;
  }
  /**
   * Attaches this scroll strategy to a viewport.
   * @param viewport The viewport to attach this strategy to.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(FixedSizeVirtualScrollStrategy, [{
    key: "attach",
    value: function attach(viewport) {
      this._viewport = viewport;

      this._updateTotalContentSize();

      this._updateRenderedRange();
    }
    /** Detaches this scroll strategy from the currently attached viewport. */

  }, {
    key: "detach",
    value: function detach() {
      this._scrolledIndexChange.complete();

      this._viewport = null;
    }
    /**
     * Update the item size and buffer size.
     * @param itemSize The size of the items in the virtually scrolling list.
     * @param minBufferPx The minimum amount of buffer (in pixels) before needing to render more
     * @param maxBufferPx The amount of buffer (in pixels) to render when rendering more.
     */

  }, {
    key: "updateItemAndBufferSize",
    value: function updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {
      if (maxBufferPx < minBufferPx && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');
      }

      this._itemSize = itemSize;
      this._minBufferPx = minBufferPx;
      this._maxBufferPx = maxBufferPx;

      this._updateTotalContentSize();

      this._updateRenderedRange();
    }
    /** @docs-private Implemented as part of VirtualScrollStrategy. */

  }, {
    key: "onContentScrolled",
    value: function onContentScrolled() {
      this._updateRenderedRange();
    }
    /** @docs-private Implemented as part of VirtualScrollStrategy. */

  }, {
    key: "onDataLengthChanged",
    value: function onDataLengthChanged() {
      this._updateTotalContentSize();

      this._updateRenderedRange();
    }
    /** @docs-private Implemented as part of VirtualScrollStrategy. */

  }, {
    key: "onContentRendered",
    value: function onContentRendered() {}
    /** @docs-private Implemented as part of VirtualScrollStrategy. */

  }, {
    key: "onRenderedOffsetChanged",
    value: function onRenderedOffsetChanged() {}
    /**
     * Scroll to the offset for the given index.
     * @param index The index of the element to scroll to.
     * @param behavior The ScrollBehavior to use when scrolling.
     */

  }, {
    key: "scrollToIndex",
    value: function scrollToIndex(index, behavior) {
      if (this._viewport) {
        this._viewport.scrollToOffset(index * this._itemSize, behavior);
      }
    }
    /** Update the viewport's total content size. */

  }, {
    key: "_updateTotalContentSize",
    value: function _updateTotalContentSize() {
      if (!this._viewport) {
        return;
      }

      this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);
    }
    /** Update the viewport's rendered range. */

  }, {
    key: "_updateRenderedRange",
    value: function _updateRenderedRange() {
      if (!this._viewport) {
        return;
      }

      var renderedRange = this._viewport.getRenderedRange();

      var newRange = {
        start: renderedRange.start,
        end: renderedRange.end
      };

      var viewportSize = this._viewport.getViewportSize();

      var dataLength = this._viewport.getDataLength();

      var scrollOffset = this._viewport.measureScrollOffset();

      var firstVisibleIndex = scrollOffset / this._itemSize; // If user scrolls to the bottom of the list and data changes to a smaller list

      if (newRange.end > dataLength) {
        // We have to recalculate the first visible index based on new data length and viewport size.
        var maxVisibleItems = Math.ceil(viewportSize / this._itemSize);
        var newVisibleIndex = Math.max(0, Math.min(firstVisibleIndex, dataLength - maxVisibleItems)); // If first visible index changed we must update scroll offset to handle start/end buffers
        // Current range must also be adjusted to cover the new position (bottom of new list).

        if (firstVisibleIndex != newVisibleIndex) {
          firstVisibleIndex = newVisibleIndex;
          scrollOffset = newVisibleIndex * this._itemSize;
          newRange.start = Math.floor(firstVisibleIndex);
        }

        newRange.end = Math.max(0, Math.min(dataLength, newRange.start + maxVisibleItems));
      }

      var startBuffer = scrollOffset - newRange.start * this._itemSize;

      if (startBuffer < this._minBufferPx && newRange.start != 0) {
        var expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);
        newRange.start = Math.max(0, newRange.start - expandStart);
        newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));
      } else {
        var endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);

        if (endBuffer < this._minBufferPx && newRange.end != dataLength) {
          var expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);

          if (expandEnd > 0) {
            newRange.end = Math.min(dataLength, newRange.end + expandEnd);
            newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));
          }
        }
      }

      this._viewport.setRenderedRange(newRange);

      this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);

      this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));
    }
  }]);

  return FixedSizeVirtualScrollStrategy;
}();
/**
 * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created
 * `FixedSizeVirtualScrollStrategy` from the given directive.
 * @param fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the
 *     `FixedSizeVirtualScrollStrategy` from.
 */


function _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {
  return fixedSizeDir._scrollStrategy;
}
/** A virtual scroll strategy that supports fixed-size items. */


var CdkFixedSizeVirtualScroll = /*#__PURE__*/function () {
  function CdkFixedSizeVirtualScroll() {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CdkFixedSizeVirtualScroll);

    this._itemSize = 20;
    this._minBufferPx = 100;
    this._maxBufferPx = 200;
    /** The scroll strategy used by this directive. */

    this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);
  }
  /** The size of the items in the list (in pixels). */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkFixedSizeVirtualScroll, [{
    key: "itemSize",
    get: function get() {
      return this._itemSize;
    },
    set: function set(value) {
      this._itemSize = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__["coerceNumberProperty"])(value);
    }
    /**
     * The minimum amount of buffer rendered beyond the viewport (in pixels).
     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.
     */

  }, {
    key: "minBufferPx",
    get: function get() {
      return this._minBufferPx;
    },
    set: function set(value) {
      this._minBufferPx = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__["coerceNumberProperty"])(value);
    }
    /**
     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.
     */

  }, {
    key: "maxBufferPx",
    get: function get() {
      return this._maxBufferPx;
    },
    set: function set(value) {
      this._maxBufferPx = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__["coerceNumberProperty"])(value);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges() {
      this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);
    }
  }]);

  return CdkFixedSizeVirtualScroll;
}();

CdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) {
  return new (t || CdkFixedSizeVirtualScroll)();
};

CdkFixedSizeVirtualScroll.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineDirective"]({
  type: CdkFixedSizeVirtualScroll,
  selectors: [["cdk-virtual-scroll-viewport", "itemSize", ""]],
  inputs: {
    itemSize: "itemSize",
    minBufferPx: "minBufferPx",
    maxBufferPx: "maxBufferPx"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵProvidersFeature"]([{
    provide: VIRTUAL_SCROLL_STRATEGY,
    useFactory: _fixedSizeVirtualScrollStrategyFactory,
    deps: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["forwardRef"])(function () {
      return CdkFixedSizeVirtualScroll;
    })]
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵNgOnChangesFeature"]]
});
CdkFixedSizeVirtualScroll.propDecorators = {
  itemSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }],
  minBufferPx: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }],
  maxBufferPx: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](CdkFixedSizeVirtualScroll, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Directive"],
    args: [{
      selector: 'cdk-virtual-scroll-viewport[itemSize]',
      providers: [{
        provide: VIRTUAL_SCROLL_STRATEGY,
        useFactory: _fixedSizeVirtualScrollStrategyFactory,
        deps: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["forwardRef"])(function () {
          return CdkFixedSizeVirtualScroll;
        })]
      }]
    }]
  }], function () {
    return [];
  }, {
    itemSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }],
    minBufferPx: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }],
    maxBufferPx: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Time in ms to throttle the scrolling events by default. */


var DEFAULT_SCROLL_TIME = 20;
/**
 * Service contained all registered Scrollable references and emits an event when any one of the
 * Scrollable references emit a scrolled event.
 */

var ScrollDispatcher = /*#__PURE__*/function () {
  function ScrollDispatcher(_ngZone, _platform,
  /** @breaking-change 11.0.0 make document required */
  document) {
    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ScrollDispatcher);

    this._ngZone = _ngZone;
    this._platform = _platform;
    /** Subject for notifying that a registered scrollable reference element has been scrolled. */

    this._scrolled = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Keeps track of the global `scroll` and `resize` subscriptions. */

    this._globalSubscription = null;
    /** Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards. */

    this._scrolledCount = 0;
    /**
     * Map of all the scrollable references that are registered with the service and their
     * scroll event subscriptions.
     */

    this.scrollContainers = new Map();
    this._document = document;
  }
  /**
   * Registers a scrollable instance with the service and listens for its scrolled events. When the
   * scrollable is scrolled, the service emits the event to its scrolled observable.
   * @param scrollable Scrollable instance to be registered.
   */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(ScrollDispatcher, [{
    key: "register",
    value: function register(scrollable) {
      var _this = this;

      if (!this.scrollContainers.has(scrollable)) {
        this.scrollContainers.set(scrollable, scrollable.elementScrolled().subscribe(function () {
          return _this._scrolled.next(scrollable);
        }));
      }
    }
    /**
     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.
     * @param scrollable Scrollable instance to be deregistered.
     */

  }, {
    key: "deregister",
    value: function deregister(scrollable) {
      var scrollableReference = this.scrollContainers.get(scrollable);

      if (scrollableReference) {
        scrollableReference.unsubscribe();
        this.scrollContainers.delete(scrollable);
      }
    }
    /**
     * Returns an observable that emits an event whenever any of the registered Scrollable
     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms
     * to override the default "throttle" time.
     *
     * **Note:** in order to avoid hitting change detection for every scroll event,
     * all of the events emitted from this stream will be run outside the Angular zone.
     * If you need to update any data bindings as a result of a scroll event, you have
     * to run the callback using `NgZone.run`.
     */

  }, {
    key: "scrolled",
    value: function scrolled() {
      var _this2 = this;

      var auditTimeInMs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_SCROLL_TIME;

      if (!this._platform.isBrowser) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])();
      }

      return new rxjs__WEBPACK_IMPORTED_MODULE_10__["Observable"](function (observer) {
        if (!_this2._globalSubscription) {
          _this2._addGlobalListener();
        } // In the case of a 0ms delay, use an observable without auditTime
        // since it does add a perceptible delay in processing overhead.


        var subscription = auditTimeInMs > 0 ? _this2._scrolled.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["auditTime"])(auditTimeInMs)).subscribe(observer) : _this2._scrolled.subscribe(observer);
        _this2._scrolledCount++;
        return function () {
          subscription.unsubscribe();
          _this2._scrolledCount--;

          if (!_this2._scrolledCount) {
            _this2._removeGlobalListener();
          }
        };
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var _this3 = this;

      this._removeGlobalListener();

      this.scrollContainers.forEach(function (_, container) {
        return _this3.deregister(container);
      });

      this._scrolled.complete();
    }
    /**
     * Returns an observable that emits whenever any of the
     * scrollable ancestors of an element are scrolled.
     * @param elementRef Element whose ancestors to listen for.
     * @param auditTimeInMs Time to throttle the scroll events.
     */

  }, {
    key: "ancestorScrolled",
    value: function ancestorScrolled(elementRef, auditTimeInMs) {
      var ancestors = this.getAncestorScrollContainers(elementRef);
      return this.scrolled(auditTimeInMs).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (target) {
        return !target || ancestors.indexOf(target) > -1;
      }));
    }
    /** Returns all registered Scrollables that contain the provided element. */

  }, {
    key: "getAncestorScrollContainers",
    value: function getAncestorScrollContainers(elementRef) {
      var _this4 = this;

      var scrollingContainers = [];
      this.scrollContainers.forEach(function (_subscription, scrollable) {
        if (_this4._scrollableContainsElement(scrollable, elementRef)) {
          scrollingContainers.push(scrollable);
        }
      });
      return scrollingContainers;
    }
    /** Access injected document if available or fallback to global document reference */

  }, {
    key: "_getDocument",
    value: function _getDocument() {
      return this._document || document;
    }
    /** Use defaultView of injected document if available or fallback to global window reference */

  }, {
    key: "_getWindow",
    value: function _getWindow() {
      var doc = this._getDocument();

      return doc.defaultView || window;
    }
    /** Returns true if the element is contained within the provided Scrollable. */

  }, {
    key: "_scrollableContainsElement",
    value: function _scrollableContainsElement(scrollable, elementRef) {
      var element = elementRef.nativeElement;
      var scrollableElement = scrollable.getElementRef().nativeElement; // Traverse through the element parents until we reach null, checking if any of the elements
      // are the scrollable's element.

      do {
        if (element == scrollableElement) {
          return true;
        }
      } while (element = element.parentElement);

      return false;
    }
    /** Sets up the global scroll listeners. */

  }, {
    key: "_addGlobalListener",
    value: function _addGlobalListener() {
      var _this5 = this;

      this._globalSubscription = this._ngZone.runOutsideAngular(function () {
        var window = _this5._getWindow();

        return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["fromEvent"])(window.document, 'scroll').subscribe(function () {
          return _this5._scrolled.next();
        });
      });
    }
    /** Cleans up the global scroll listener. */

  }, {
    key: "_removeGlobalListener",
    value: function _removeGlobalListener() {
      if (this._globalSubscription) {
        this._globalSubscription.unsubscribe();

        this._globalSubscription = null;
      }
    }
  }]);

  return ScrollDispatcher;
}();

ScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) {
  return new (t || ScrollDispatcher)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"], 8));
};

ScrollDispatcher.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function ScrollDispatcher_Factory() {
    return new ScrollDispatcher(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"], 8));
  },
  token: ScrollDispatcher,
  providedIn: "root"
});

ScrollDispatcher.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](ScrollDispatcher, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Sends an event when the directive's element is scrolled. Registers itself with the
 * ScrollDispatcher service to include itself as part of its collection of scrolling events that it
 * can be listened to through the service.
 */


var CdkScrollable = /*#__PURE__*/function () {
  function CdkScrollable(elementRef, scrollDispatcher, ngZone, dir) {
    var _this6 = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CdkScrollable);

    this.elementRef = elementRef;
    this.scrollDispatcher = scrollDispatcher;
    this.ngZone = ngZone;
    this.dir = dir;
    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    this._elementScrolled = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Observable"](function (observer) {
      return _this6.ngZone.runOutsideAngular(function () {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["fromEvent"])(_this6.elementRef.nativeElement, 'scroll').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["takeUntil"])(_this6._destroyed)).subscribe(observer);
      });
    });
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkScrollable, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      this.scrollDispatcher.register(this);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.scrollDispatcher.deregister(this);

      this._destroyed.next();

      this._destroyed.complete();
    }
    /** Returns observable that emits when a scroll event is fired on the host element. */

  }, {
    key: "elementScrolled",
    value: function elementScrolled() {
      return this._elementScrolled;
    }
    /** Gets the ElementRef for the viewport. */

  }, {
    key: "getElementRef",
    value: function getElementRef() {
      return this.elementRef;
    }
    /**
     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo
     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method
     * left and right always refer to the left and right side of the scrolling container irrespective
     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa
     * in an RTL context.
     * @param options specified the offsets to scroll to.
     */

  }, {
    key: "scrollTo",
    value: function scrollTo(options) {
      var el = this.elementRef.nativeElement;
      var isRtl = this.dir && this.dir.value == 'rtl'; // Rewrite start & end offsets as right or left offsets.

      if (options.left == null) {
        options.left = isRtl ? options.end : options.start;
      }

      if (options.right == null) {
        options.right = isRtl ? options.start : options.end;
      } // Rewrite the bottom offset as a top offset.


      if (options.bottom != null) {
        options.top = el.scrollHeight - el.clientHeight - options.bottom;
      } // Rewrite the right offset as a left offset.


      if (isRtl && Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["getRtlScrollAxisType"])() != 0
      /* NORMAL */
      ) {
          if (options.left != null) {
            options.right = el.scrollWidth - el.clientWidth - options.left;
          }

          if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["getRtlScrollAxisType"])() == 2
          /* INVERTED */
          ) {
              options.left = options.right;
            } else if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["getRtlScrollAxisType"])() == 1
          /* NEGATED */
          ) {
              options.left = options.right ? -options.right : options.right;
            }
        } else {
        if (options.right != null) {
          options.left = el.scrollWidth - el.clientWidth - options.right;
        }
      }

      this._applyScrollToOptions(options);
    }
  }, {
    key: "_applyScrollToOptions",
    value: function _applyScrollToOptions(options) {
      var el = this.elementRef.nativeElement;

      if (Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["supportsScrollBehavior"])()) {
        el.scrollTo(options);
      } else {
        if (options.top != null) {
          el.scrollTop = options.top;
        }

        if (options.left != null) {
          el.scrollLeft = options.left;
        }
      }
    }
    /**
     * Measures the scroll offset relative to the specified edge of the viewport. This method can be
     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent
     * about what scrollLeft means in RTL. The values returned by this method are normalized such that
     * left and right always refer to the left and right side of the scrolling container irrespective
     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa
     * in an RTL context.
     * @param from The edge to measure from.
     */

  }, {
    key: "measureScrollOffset",
    value: function measureScrollOffset(from) {
      var LEFT = 'left';
      var RIGHT = 'right';
      var el = this.elementRef.nativeElement;

      if (from == 'top') {
        return el.scrollTop;
      }

      if (from == 'bottom') {
        return el.scrollHeight - el.clientHeight - el.scrollTop;
      } // Rewrite start & end as left or right offsets.


      var isRtl = this.dir && this.dir.value == 'rtl';

      if (from == 'start') {
        from = isRtl ? RIGHT : LEFT;
      } else if (from == 'end') {
        from = isRtl ? LEFT : RIGHT;
      }

      if (isRtl && Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["getRtlScrollAxisType"])() == 2
      /* INVERTED */
      ) {
          // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and
          // 0 when scrolled all the way right.
          if (from == LEFT) {
            return el.scrollWidth - el.clientWidth - el.scrollLeft;
          } else {
            return el.scrollLeft;
          }
        } else if (isRtl && Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["getRtlScrollAxisType"])() == 1
      /* NEGATED */
      ) {
          // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and
          // 0 when scrolled all the way right.
          if (from == LEFT) {
            return el.scrollLeft + el.scrollWidth - el.clientWidth;
          } else {
            return -el.scrollLeft;
          }
        } else {
        // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and
        // (scrollWidth - clientWidth) when scrolled all the way right.
        if (from == LEFT) {
          return el.scrollLeft;
        } else {
          return el.scrollWidth - el.clientWidth - el.scrollLeft;
        }
      }
    }
  }]);

  return CdkScrollable;
}();

CdkScrollable.ɵfac = function CdkScrollable_Factory(t) {
  return new (t || CdkScrollable)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](ScrollDispatcher), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["Directionality"], 8));
};

CdkScrollable.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineDirective"]({
  type: CdkScrollable,
  selectors: [["", "cdk-scrollable", ""], ["", "cdkScrollable", ""]]
});

CdkScrollable.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]
  }, {
    type: ScrollDispatcher
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](CdkScrollable, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Directive"],
    args: [{
      selector: '[cdk-scrollable], [cdkScrollable]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]
    }, {
      type: ScrollDispatcher
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Time in ms to throttle the resize events by default. */


var DEFAULT_RESIZE_TIME = 20;
/**
 * Simple utility for getting the bounds of the browser viewport.
 * @docs-private
 */

var ViewportRuler = /*#__PURE__*/function () {
  function ViewportRuler(_platform, ngZone,
  /** @breaking-change 11.0.0 make document required */
  document) {
    var _this7 = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ViewportRuler);

    this._platform = _platform;
    /** Stream of viewport change events. */

    this._change = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Event listener that will be used to handle the viewport change events. */

    this._changeListener = function (event) {
      _this7._change.next(event);
    };

    this._document = document;
    ngZone.runOutsideAngular(function () {
      if (_platform.isBrowser) {
        var _window = _this7._getWindow(); // Note that bind the events ourselves, rather than going through something like RxJS's
        // `fromEvent` so that we can ensure that they're bound outside of the NgZone.


        _window.addEventListener('resize', _this7._changeListener);

        _window.addEventListener('orientationchange', _this7._changeListener);
      } // We don't need to keep track of the subscription,
      // because we complete the `change` stream on destroy.


      _this7.change().subscribe(function () {
        return _this7._updateViewportSize();
      });
    });
  }

  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(ViewportRuler, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this._platform.isBrowser) {
        var _window2 = this._getWindow();

        _window2.removeEventListener('resize', this._changeListener);

        _window2.removeEventListener('orientationchange', this._changeListener);
      }

      this._change.complete();
    }
    /** Returns the viewport's width and height. */

  }, {
    key: "getViewportSize",
    value: function getViewportSize() {
      if (!this._viewportSize) {
        this._updateViewportSize();
      }

      var output = {
        width: this._viewportSize.width,
        height: this._viewportSize.height
      }; // If we're not on a browser, don't cache the size since it'll be mocked out anyway.

      if (!this._platform.isBrowser) {
        this._viewportSize = null;
      }

      return output;
    }
    /** Gets a ClientRect for the viewport's bounds. */

  }, {
    key: "getViewportRect",
    value: function getViewportRect() {
      // Use the document element's bounding rect rather than the window scroll properties
      // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll
      // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different
      // conceptual viewports. Under most circumstances these viewports are equivalent, but they
      // can disagree when the page is pinch-zoomed (on devices that support touch).
      // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4
      // We use the documentElement instead of the body because, by default (without a css reset)
      // browsers typically give the document body an 8px margin, which is not included in
      // getBoundingClientRect().
      var scrollPosition = this.getViewportScrollPosition();

      var _this$getViewportSize = this.getViewportSize(),
          width = _this$getViewportSize.width,
          height = _this$getViewportSize.height;

      return {
        top: scrollPosition.top,
        left: scrollPosition.left,
        bottom: scrollPosition.top + height,
        right: scrollPosition.left + width,
        height: height,
        width: width
      };
    }
    /** Gets the (top, left) scroll position of the viewport. */

  }, {
    key: "getViewportScrollPosition",
    value: function getViewportScrollPosition() {
      // While we can get a reference to the fake document
      // during SSR, it doesn't have getBoundingClientRect.
      if (!this._platform.isBrowser) {
        return {
          top: 0,
          left: 0
        };
      } // The top-left-corner of the viewport is determined by the scroll position of the document
      // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about
      // whether `document.body` or `document.documentElement` is the scrolled element, so reading
      // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of
      // `document.documentElement` works consistently, where the `top` and `left` values will
      // equal negative the scroll position.


      var document = this._getDocument();

      var window = this._getWindow();

      var documentElement = document.documentElement;
      var documentRect = documentElement.getBoundingClientRect();
      var top = -documentRect.top || document.body.scrollTop || window.scrollY || documentElement.scrollTop || 0;
      var left = -documentRect.left || document.body.scrollLeft || window.scrollX || documentElement.scrollLeft || 0;
      return {
        top: top,
        left: left
      };
    }
    /**
     * Returns a stream that emits whenever the size of the viewport changes.
     * @param throttleTime Time in milliseconds to throttle the stream.
     */

  }, {
    key: "change",
    value: function change() {
      var throttleTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_RESIZE_TIME;
      return throttleTime > 0 ? this._change.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["auditTime"])(throttleTime)) : this._change;
    }
    /** Access injected document if available or fallback to global document reference */

  }, {
    key: "_getDocument",
    value: function _getDocument() {
      return this._document || document;
    }
    /** Use defaultView of injected document if available or fallback to global window reference */

  }, {
    key: "_getWindow",
    value: function _getWindow() {
      var doc = this._getDocument();

      return doc.defaultView || window;
    }
    /** Updates the cached viewport size. */

  }, {
    key: "_updateViewportSize",
    value: function _updateViewportSize() {
      var window = this._getWindow();

      this._viewportSize = this._platform.isBrowser ? {
        width: window.innerWidth,
        height: window.innerHeight
      } : {
        width: 0,
        height: 0
      };
    }
  }]);

  return ViewportRuler;
}();

ViewportRuler.ɵfac = function ViewportRuler_Factory(t) {
  return new (t || ViewportRuler)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"], 8));
};

ViewportRuler.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"])({
  factory: function ViewportRuler_Factory() {
    return new ViewportRuler(Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"], 8));
  },
  token: ViewportRuler,
  providedIn: "root"
});

ViewportRuler.ctorParameters = function () {
  return [{
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"]]
    }]
  }];
};
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](ViewportRuler, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Checks if the given ranges are equal. */


function rangesEqual(r1, r2) {
  return r1.start == r2.start && r1.end == r2.end;
}
/**
 * Scheduler to be used for scroll events. Needs to fall back to
 * something that doesn't rely on requestAnimationFrame on environments
 * that don't support it (e.g. server-side rendering).
 */


var SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? rxjs__WEBPACK_IMPORTED_MODULE_10__["animationFrameScheduler"] : rxjs__WEBPACK_IMPORTED_MODULE_10__["asapScheduler"];
/** A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`. */

var CdkVirtualScrollViewport = /*#__PURE__*/function (_CdkScrollable) {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(CdkVirtualScrollViewport, _CdkScrollable);

  var _super = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(CdkVirtualScrollViewport);

  function CdkVirtualScrollViewport(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher,
  /**
   * @deprecated `viewportRuler` parameter to become required.
   * @breaking-change 11.0.0
   */
  viewportRuler) {
    var _this8;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CdkVirtualScrollViewport);

    _this8 = _super.call(this, elementRef, scrollDispatcher, ngZone, dir);
    _this8.elementRef = elementRef;
    _this8._changeDetectorRef = _changeDetectorRef;
    _this8._scrollStrategy = _scrollStrategy;
    /** Emits when the viewport is detached from a CdkVirtualForOf. */

    _this8._detachedSubject = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Emits when the rendered range changes. */

    _this8._renderedRangeSubject = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    _this8._orientation = 'vertical'; // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll
    // strategy lazily (i.e. only if the user is actually listening to the events). We do this because
    // depending on how the strategy calculates the scrolled index, it may come at a cost to
    // performance.

    /** Emits when the index of the first element visible in the viewport changes. */

    _this8.scrolledIndexChange = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Observable"](function (observer) {
      return _this8._scrollStrategy.scrolledIndexChange.subscribe(function (index) {
        return Promise.resolve().then(function () {
          return _this8.ngZone.run(function () {
            return observer.next(index);
          });
        });
      });
    });
    /** A stream that emits whenever the rendered range changes. */

    _this8.renderedRangeStream = _this8._renderedRangeSubject;
    /**
     * The total size of all content (in pixels), including content that is not currently rendered.
     */

    _this8._totalContentSize = 0;
    /** A string representing the `style.width` property value to be used for the spacer element. */

    _this8._totalContentWidth = '';
    /** A string representing the `style.height` property value to be used for the spacer element. */

    _this8._totalContentHeight = '';
    /** The currently rendered range of indices. */

    _this8._renderedRange = {
      start: 0,
      end: 0
    };
    /** The length of the data bound to this viewport (in number of items). */

    _this8._dataLength = 0;
    /** The size of the viewport (in pixels). */

    _this8._viewportSize = 0;
    /** The last rendered content offset that was set. */

    _this8._renderedContentOffset = 0;
    /**
     * Whether the last rendered content offset was to the end of the content (and therefore needs to
     * be rewritten as an offset to the start of the content).
     */

    _this8._renderedContentOffsetNeedsRewrite = false;
    /** Whether there is a pending change detection cycle. */

    _this8._isChangeDetectionPending = false;
    /** A list of functions to run after the next change detection cycle. */

    _this8._runAfterChangeDetection = [];
    /** Subscription to changes in the viewport size. */

    _this8._viewportChanges = rxjs__WEBPACK_IMPORTED_MODULE_10__["Subscription"].EMPTY;

    if (!_scrollStrategy && (typeof ngDevMode === 'undefined' || ngDevMode)) {
      throw Error('Error: cdk-virtual-scroll-viewport requires the "itemSize" property to be set.');
    } // @breaking-change 11.0.0 Remove null check for `viewportRuler`.


    if (viewportRuler) {
      _this8._viewportChanges = viewportRuler.change().subscribe(function () {
        _this8.checkViewportSize();
      });
    }

    return _this8;
  }
  /** The direction the viewport scrolls. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkVirtualScrollViewport, [{
    key: "orientation",
    get: function get() {
      return this._orientation;
    },
    set: function set(orientation) {
      if (this._orientation !== orientation) {
        this._orientation = orientation;

        this._calculateSpacerSize();
      }
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this9 = this;

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(CdkVirtualScrollViewport.prototype), "ngOnInit", this).call(this); // It's still too early to measure the viewport at this point. Deferring with a promise allows
      // the Viewport to be rendered with the correct size before we measure. We run this outside the
      // zone to avoid causing more change detection cycles. We handle the change detection loop
      // ourselves instead.


      this.ngZone.runOutsideAngular(function () {
        return Promise.resolve().then(function () {
          _this9._measureViewportSize();

          _this9._scrollStrategy.attach(_this9);

          _this9.elementScrolled().pipe( // Start off with a fake scroll event so we properly detect our initial position.
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["startWith"])(null), // Collect multiple events into one until the next animation frame. This way if
          // there are multiple scroll events in the same frame we only need to recheck
          // our layout once.
          Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["auditTime"])(0, SCROLL_SCHEDULER)).subscribe(function () {
            return _this9._scrollStrategy.onContentScrolled();
          });

          _this9._markChangeDetectionNeeded();
        });
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.detach();

      this._scrollStrategy.detach(); // Complete all subjects


      this._renderedRangeSubject.complete();

      this._detachedSubject.complete();

      this._viewportChanges.unsubscribe();

      Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(CdkVirtualScrollViewport.prototype), "ngOnDestroy", this).call(this);
    }
    /** Attaches a `CdkVirtualScrollRepeater` to this viewport. */

  }, {
    key: "attach",
    value: function attach(forOf) {
      var _this10 = this;

      if (this._forOf && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('CdkVirtualScrollViewport is already attached.');
      } // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length
      // changes. Run outside the zone to avoid triggering change detection, since we're managing the
      // change detection loop ourselves.


      this.ngZone.runOutsideAngular(function () {
        _this10._forOf = forOf;

        _this10._forOf.dataStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["takeUntil"])(_this10._detachedSubject)).subscribe(function (data) {
          var newLength = data.length;

          if (newLength !== _this10._dataLength) {
            _this10._dataLength = newLength;

            _this10._scrollStrategy.onDataLengthChanged();
          }

          _this10._doChangeDetection();
        });
      });
    }
    /** Detaches the current `CdkVirtualForOf`. */

  }, {
    key: "detach",
    value: function detach() {
      this._forOf = null;

      this._detachedSubject.next();
    }
    /** Gets the length of the data bound to this viewport (in number of items). */

  }, {
    key: "getDataLength",
    value: function getDataLength() {
      return this._dataLength;
    }
    /** Gets the size of the viewport (in pixels). */

  }, {
    key: "getViewportSize",
    value: function getViewportSize() {
      return this._viewportSize;
    } // TODO(mmalerba): This is technically out of sync with what's really rendered until a render
    // cycle happens. I'm being careful to only call it after the render cycle is complete and before
    // setting it to something else, but its error prone and should probably be split into
    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.

    /** Get the current rendered range of items. */

  }, {
    key: "getRenderedRange",
    value: function getRenderedRange() {
      return this._renderedRange;
    }
    /**
     * Sets the total size of all content (in pixels), including content that is not currently
     * rendered.
     */

  }, {
    key: "setTotalContentSize",
    value: function setTotalContentSize(size) {
      if (this._totalContentSize !== size) {
        this._totalContentSize = size;

        this._calculateSpacerSize();

        this._markChangeDetectionNeeded();
      }
    }
    /** Sets the currently rendered range of indices. */

  }, {
    key: "setRenderedRange",
    value: function setRenderedRange(range) {
      var _this11 = this;

      if (!rangesEqual(this._renderedRange, range)) {
        this._renderedRangeSubject.next(this._renderedRange = range);

        this._markChangeDetectionNeeded(function () {
          return _this11._scrollStrategy.onContentRendered();
        });
      }
    }
    /**
     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).
     */

  }, {
    key: "getOffsetToRenderedContentStart",
    value: function getOffsetToRenderedContentStart() {
      return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;
    }
    /**
     * Sets the offset from the start of the viewport to either the start or end of the rendered data
     * (in pixels).
     */

  }, {
    key: "setRenderedContentOffset",
    value: function setRenderedContentOffset(offset) {
      var _this12 = this;

      var to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'to-start';
      // For a horizontal viewport in a right-to-left language we need to translate along the x-axis
      // in the negative direction.
      var isRtl = this.dir && this.dir.value == 'rtl';
      var isHorizontal = this.orientation == 'horizontal';
      var axis = isHorizontal ? 'X' : 'Y';
      var axisDirection = isHorizontal && isRtl ? -1 : 1;
      var transform = "translate".concat(axis, "(").concat(Number(axisDirection * offset), "px)");
      this._renderedContentOffset = offset;

      if (to === 'to-end') {
        transform += " translate".concat(axis, "(-100%)"); // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise
        // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would
        // expand upward).

        this._renderedContentOffsetNeedsRewrite = true;
      }

      if (this._renderedContentTransform != transform) {
        // We know this value is safe because we parse `offset` with `Number()` before passing it
        // into the string.
        this._renderedContentTransform = transform;

        this._markChangeDetectionNeeded(function () {
          if (_this12._renderedContentOffsetNeedsRewrite) {
            _this12._renderedContentOffset -= _this12.measureRenderedContentSize();
            _this12._renderedContentOffsetNeedsRewrite = false;

            _this12.setRenderedContentOffset(_this12._renderedContentOffset);
          } else {
            _this12._scrollStrategy.onRenderedOffsetChanged();
          }
        });
      }
    }
    /**
     * Scrolls to the given offset from the start of the viewport. Please note that this is not always
     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left
     * direction, this would be the equivalent of setting a fictional `scrollRight` property.
     * @param offset The offset to scroll to.
     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.
     */

  }, {
    key: "scrollToOffset",
    value: function scrollToOffset(offset) {
      var behavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';
      var options = {
        behavior: behavior
      };

      if (this.orientation === 'horizontal') {
        options.start = offset;
      } else {
        options.top = offset;
      }

      this.scrollTo(options);
    }
    /**
     * Scrolls to the offset for the given index.
     * @param index The index of the element to scroll to.
     * @param behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.
     */

  }, {
    key: "scrollToIndex",
    value: function scrollToIndex(index) {
      var behavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';

      this._scrollStrategy.scrollToIndex(index, behavior);
    }
    /**
     * Gets the current scroll offset from the start of the viewport (in pixels).
     * @param from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'
     *     in horizontal mode.
     */

  }, {
    key: "measureScrollOffset",
    value: function measureScrollOffset(from) {
      return from ? Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(CdkVirtualScrollViewport.prototype), "measureScrollOffset", this).call(this, from) : Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(CdkVirtualScrollViewport.prototype), "measureScrollOffset", this).call(this, this.orientation === 'horizontal' ? 'start' : 'top');
    }
    /** Measure the combined size of all of the rendered items. */

  }, {
    key: "measureRenderedContentSize",
    value: function measureRenderedContentSize() {
      var contentEl = this._contentWrapper.nativeElement;
      return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;
    }
    /**
     * Measure the total combined size of the given range. Throws if the range includes items that are
     * not rendered.
     */

  }, {
    key: "measureRangeSize",
    value: function measureRangeSize(range) {
      if (!this._forOf) {
        return 0;
      }

      return this._forOf.measureRangeSize(range, this.orientation);
    }
    /** Update the viewport dimensions and re-render. */

  }, {
    key: "checkViewportSize",
    value: function checkViewportSize() {
      // TODO: Cleanup later when add logic for handling content resize
      this._measureViewportSize();

      this._scrollStrategy.onDataLengthChanged();
    }
    /** Measure the viewport size. */

  }, {
    key: "_measureViewportSize",
    value: function _measureViewportSize() {
      var viewportEl = this.elementRef.nativeElement;
      this._viewportSize = this.orientation === 'horizontal' ? viewportEl.clientWidth : viewportEl.clientHeight;
    }
    /** Queue up change detection to run. */

  }, {
    key: "_markChangeDetectionNeeded",
    value: function _markChangeDetectionNeeded(runAfter) {
      var _this13 = this;

      if (runAfter) {
        this._runAfterChangeDetection.push(runAfter);
      } // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of
      // properties sequentially we only have to run `_doChangeDetection` once at the end.


      if (!this._isChangeDetectionPending) {
        this._isChangeDetectionPending = true;
        this.ngZone.runOutsideAngular(function () {
          return Promise.resolve().then(function () {
            _this13._doChangeDetection();
          });
        });
      }
    }
    /** Run change detection. */

  }, {
    key: "_doChangeDetection",
    value: function _doChangeDetection() {
      var _this14 = this;

      this._isChangeDetectionPending = false; // Apply the content transform. The transform can't be set via an Angular binding because
      // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of
      // string literals, a variable that can only be 'X' or 'Y', and user input that is run through
      // the `Number` function first to coerce it to a numeric value.

      this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform; // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection
      // from the root, since the repeated items are content projected in. Calling `detectChanges`
      // instead does not properly check the projected content.

      this.ngZone.run(function () {
        return _this14._changeDetectorRef.markForCheck();
      });
      var runAfterChangeDetection = this._runAfterChangeDetection;
      this._runAfterChangeDetection = [];

      var _iterator = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__["default"])(runAfterChangeDetection),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var fn = _step.value;
          fn();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    /** Calculates the `style.width` and `style.height` for the spacer element. */

  }, {
    key: "_calculateSpacerSize",
    value: function _calculateSpacerSize() {
      this._totalContentHeight = this.orientation === 'horizontal' ? '' : "".concat(this._totalContentSize, "px");
      this._totalContentWidth = this.orientation === 'horizontal' ? "".concat(this._totalContentSize, "px") : '';
    }
  }]);

  return CdkVirtualScrollViewport;
}(CdkScrollable);

CdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) {
  return new (t || CdkVirtualScrollViewport)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](VIRTUAL_SCROLL_STRATEGY, 8), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](ScrollDispatcher), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](ViewportRuler));
};

CdkVirtualScrollViewport.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineComponent"]({
  type: CdkVirtualScrollViewport,
  selectors: [["cdk-virtual-scroll-viewport"]],
  viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵstaticViewQuery"](_c0, true);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵloadQuery"]()) && (ctx._contentWrapper = _t.first);
    }
  },
  hostAttrs: [1, "cdk-virtual-scroll-viewport"],
  hostVars: 4,
  hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵclassProp"]("cdk-virtual-scroll-orientation-horizontal", ctx.orientation === "horizontal")("cdk-virtual-scroll-orientation-vertical", ctx.orientation !== "horizontal");
    }
  },
  inputs: {
    orientation: "orientation"
  },
  outputs: {
    scrolledIndexChange: "scrolledIndexChange"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵProvidersFeature"]([{
    provide: CdkScrollable,
    useExisting: CdkVirtualScrollViewport
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c1,
  decls: 4,
  vars: 4,
  consts: [[1, "cdk-virtual-scroll-content-wrapper"], ["contentWrapper", ""], [1, "cdk-virtual-scroll-spacer"]],
  template: function CdkVirtualScrollViewport_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementStart"](0, "div", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵelement"](3, "div", 2);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵstyleProp"]("width", ctx._totalContentWidth)("height", ctx._totalContentHeight);
    }
  },
  styles: ["cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\n"],
  encapsulation: 2,
  changeDetection: 0
});

CdkVirtualScrollViewport.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ChangeDetectorRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [VIRTUAL_SCROLL_STRATEGY]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
    }]
  }, {
    type: ScrollDispatcher
  }, {
    type: ViewportRuler
  }];
};

CdkVirtualScrollViewport.propDecorators = {
  orientation: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }],
  scrolledIndexChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
  }],
  _contentWrapper: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewChild"],
    args: ['contentWrapper', {
      static: true
    }]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](CdkVirtualScrollViewport, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Component"],
    args: [{
      selector: 'cdk-virtual-scroll-viewport',
      template: "<!--\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\n  position.\n-->\n<div #contentWrapper class=\"cdk-virtual-scroll-content-wrapper\">\n  <ng-content></ng-content>\n</div>\n<!--\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\n  so that the scrollbar captures the size of the entire data set.\n-->\n<div class=\"cdk-virtual-scroll-spacer\"\n     [style.width]=\"_totalContentWidth\" [style.height]=\"_totalContentHeight\"></div>\n",
      host: {
        'class': 'cdk-virtual-scroll-viewport',
        '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === "horizontal"',
        '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== "horizontal"'
      },
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ChangeDetectionStrategy"].OnPush,
      providers: [{
        provide: CdkScrollable,
        useExisting: CdkVirtualScrollViewport
      }],
      styles: ["cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ChangeDetectorRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [VIRTUAL_SCROLL_STRATEGY]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Optional"]
      }]
    }, {
      type: ScrollDispatcher
    }, {
      type: ViewportRuler
    }];
  }, {
    scrolledIndexChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Output"]
    }],
    orientation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }],
    _contentWrapper: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewChild"],
      args: ['contentWrapper', {
        static: true
      }]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Helper to extract the offset of a DOM Node in a certain direction. */


function getOffset(orientation, direction, node) {
  var el = node;

  if (!el.getBoundingClientRect) {
    return 0;
  }

  var rect = el.getBoundingClientRect();

  if (orientation === 'horizontal') {
    return direction === 'start' ? rect.left : rect.right;
  }

  return direction === 'start' ? rect.top : rect.bottom;
}
/**
 * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling
 * container.
 */


var CdkVirtualForOf = /*#__PURE__*/function () {
  function CdkVirtualForOf(
  /** The view container to add items to. */
  _viewContainerRef,
  /** The template to use when stamping out new items. */
  _template,
  /** The set of available differs. */
  _differs,
  /** The strategy used to render items in the virtual scroll viewport. */
  _viewRepeater,
  /** The virtual scrolling viewport that these items are being rendered in. */
  _viewport, ngZone) {
    var _this15 = this;

    Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CdkVirtualForOf);

    this._viewContainerRef = _viewContainerRef;
    this._template = _template;
    this._differs = _differs;
    this._viewRepeater = _viewRepeater;
    this._viewport = _viewport;
    /** Emits when the rendered view of the data changes. */

    this.viewChange = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Subject that emits when a new DataSource instance is given. */

    this._dataSourceChanges = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Emits whenever the data in the current DataSource changes. */

    this.dataStream = this._dataSourceChanges.pipe( // Start off with null `DataSource`.
    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["startWith"])(null), // Bundle up the previous and current data sources so we can work with both.
    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["pairwise"])(), // Use `_changeDataSource` to disconnect from the previous data source and connect to the
    // new one, passing back a stream of data changes which we run through `switchMap` to give
    // us a data stream that emits the latest data from whatever the current `DataSource` is.
    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["switchMap"])(function (_ref) {
      var _ref2 = Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref, 2),
          prev = _ref2[0],
          cur = _ref2[1];

      return _this15._changeDataSource(prev, cur);
    }), // Replay the last emitted data when someone subscribes.
    Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["shareReplay"])(1));
    /** The differ used to calculate changes to the data. */

    this._differ = null;
    /** Whether the rendered data should be updated during the next ngDoCheck cycle. */

    this._needsUpdate = false;
    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    this.dataStream.subscribe(function (data) {
      _this15._data = data;

      _this15._onRenderedDataChange();
    });

    this._viewport.renderedRangeStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["takeUntil"])(this._destroyed)).subscribe(function (range) {
      _this15._renderedRange = range;
      ngZone.run(function () {
        return _this15.viewChange.next(_this15._renderedRange);
      });

      _this15._onRenderedDataChange();
    });

    this._viewport.attach(this);
  }
  /** The DataSource to display. */


  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkVirtualForOf, [{
    key: "cdkVirtualForOf",
    get: function get() {
      return this._cdkVirtualForOf;
    },
    set: function set(value) {
      this._cdkVirtualForOf = value;

      if (Object(_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["isDataSource"])(value)) {
        this._dataSourceChanges.next(value);
      } else {
        // Slice the value if its an NgIterable to ensure we're working with an array.
        this._dataSourceChanges.next(new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["ArrayDataSource"](Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["isObservable"])(value) ? value : Array.prototype.slice.call(value || [])));
      }
    }
    /**
     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and
     * the item and produces a value to be used as the item's identity when tracking changes.
     */

  }, {
    key: "cdkVirtualForTrackBy",
    get: function get() {
      return this._cdkVirtualForTrackBy;
    },
    set: function set(fn) {
      var _this16 = this;

      this._needsUpdate = true;
      this._cdkVirtualForTrackBy = fn ? function (index, item) {
        return fn(index + (_this16._renderedRange ? _this16._renderedRange.start : 0), item);
      } : undefined;
    }
    /** The template used to stamp out new elements. */

  }, {
    key: "cdkVirtualForTemplate",
    set: function set(value) {
      if (value) {
        this._needsUpdate = true;
        this._template = value;
      }
    }
    /**
     * The size of the cache used to store templates that are not being used for re-use later.
     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.
     */

  }, {
    key: "cdkVirtualForTemplateCacheSize",
    get: function get() {
      return this._viewRepeater.viewCacheSize;
    },
    set: function set(size) {
      this._viewRepeater.viewCacheSize = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_8__["coerceNumberProperty"])(size);
    }
    /**
     * Measures the combined size (width for horizontal orientation, height for vertical) of all items
     * in the specified range. Throws an error if the range includes items that are not currently
     * rendered.
     */

  }, {
    key: "measureRangeSize",
    value: function measureRangeSize(range, orientation) {
      if (range.start >= range.end) {
        return 0;
      }

      if ((range.start < this._renderedRange.start || range.end > this._renderedRange.end) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error("Error: attempted to measure an item that isn't rendered.");
      } // The index into the list of rendered views for the first item in the range.


      var renderedStartIndex = range.start - this._renderedRange.start; // The length of the range we're measuring.

      var rangeLen = range.end - range.start; // Loop over all the views, find the first and land node and compute the size by subtracting
      // the top of the first node from the bottom of the last one.

      var firstNode;
      var lastNode; // Find the first node by starting from the beginning and going forwards.

      for (var i = 0; i < rangeLen; i++) {
        var view = this._viewContainerRef.get(i + renderedStartIndex);

        if (view && view.rootNodes.length) {
          firstNode = lastNode = view.rootNodes[0];
          break;
        }
      } // Find the last node by starting from the end and going backwards.


      for (var _i = rangeLen - 1; _i > -1; _i--) {
        var _view = this._viewContainerRef.get(_i + renderedStartIndex);

        if (_view && _view.rootNodes.length) {
          lastNode = _view.rootNodes[_view.rootNodes.length - 1];
          break;
        }
      }

      return firstNode && lastNode ? getOffset(orientation, 'end', lastNode) - getOffset(orientation, 'start', firstNode) : 0;
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      if (this._differ && this._needsUpdate) {
        // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of
        // this list being rendered (can use simpler algorithm) vs needs update due to data actually
        // changing (need to do this diff).
        var changes = this._differ.diff(this._renderedItems);

        if (!changes) {
          this._updateContext();
        } else {
          this._applyChanges(changes);
        }

        this._needsUpdate = false;
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._viewport.detach();

      this._dataSourceChanges.next(undefined);

      this._dataSourceChanges.complete();

      this.viewChange.complete();

      this._destroyed.next();

      this._destroyed.complete();

      this._viewRepeater.detach();
    }
    /** React to scroll state changes in the viewport. */

  }, {
    key: "_onRenderedDataChange",
    value: function _onRenderedDataChange() {
      if (!this._renderedRange) {
        return;
      }

      this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);

      if (!this._differ) {
        this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);
      }

      this._needsUpdate = true;
    }
    /** Swap out one `DataSource` for another. */

  }, {
    key: "_changeDataSource",
    value: function _changeDataSource(oldDs, newDs) {
      if (oldDs) {
        oldDs.disconnect(this);
      }

      this._needsUpdate = true;
      return newDs ? newDs.connect(this) : Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])();
    }
    /** Update the `CdkVirtualForOfContext` for all views. */

  }, {
    key: "_updateContext",
    value: function _updateContext() {
      var count = this._data.length;
      var i = this._viewContainerRef.length;

      while (i--) {
        var view = this._viewContainerRef.get(i);

        view.context.index = this._renderedRange.start + i;
        view.context.count = count;

        this._updateComputedContextProperties(view.context);

        view.detectChanges();
      }
    }
    /** Apply changes to the DOM. */

  }, {
    key: "_applyChanges",
    value: function _applyChanges(changes) {
      var _this17 = this;

      this._viewRepeater.applyChanges(changes, this._viewContainerRef, function (record, adjustedPreviousIndex, currentIndex) {
        return _this17._getEmbeddedViewArgs(record, currentIndex);
      }, function (record) {
        return record.item;
      }); // Update $implicit for any items that had an identity change.


      changes.forEachIdentityChange(function (record) {
        var view = _this17._viewContainerRef.get(record.currentIndex);

        view.context.$implicit = record.item;
      }); // Update the context variables on all items.

      var count = this._data.length;
      var i = this._viewContainerRef.length;

      while (i--) {
        var view = this._viewContainerRef.get(i);

        view.context.index = this._renderedRange.start + i;
        view.context.count = count;

        this._updateComputedContextProperties(view.context);
      }
    }
    /** Update the computed properties on the `CdkVirtualForOfContext`. */

  }, {
    key: "_updateComputedContextProperties",
    value: function _updateComputedContextProperties(context) {
      context.first = context.index === 0;
      context.last = context.index === context.count - 1;
      context.even = context.index % 2 === 0;
      context.odd = !context.even;
    }
  }, {
    key: "_getEmbeddedViewArgs",
    value: function _getEmbeddedViewArgs(record, index) {
      // Note that it's important that we insert the item directly at the proper index,
      // rather than inserting it and the moving it in place, because if there's a directive
      // on the same node that injects the `ViewContainerRef`, Angular will insert another
      // comment node which can throw off the move when it's being repeated for all items.
      return {
        templateRef: this._template,
        context: {
          $implicit: record.item,
          // It's guaranteed that the iterable is not "undefined" or "null" because we only
          // generate views for elements if the "cdkVirtualForOf" iterable has elements.
          cdkVirtualForOf: this._cdkVirtualForOf,
          index: -1,
          count: -1,
          first: false,
          last: false,
          odd: false,
          even: false
        },
        index: index
      };
    }
  }]);

  return CdkVirtualForOf;
}();

CdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) {
  return new (t || CdkVirtualForOf)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["IterableDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_VIEW_REPEATER_STRATEGY"]), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](CdkVirtualScrollViewport, 4), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]));
};

CdkVirtualForOf.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineDirective"]({
  type: CdkVirtualForOf,
  selectors: [["", "cdkVirtualFor", "", "cdkVirtualForOf", ""]],
  inputs: {
    cdkVirtualForOf: "cdkVirtualForOf",
    cdkVirtualForTrackBy: "cdkVirtualForTrackBy",
    cdkVirtualForTemplate: "cdkVirtualForTemplate",
    cdkVirtualForTemplateCacheSize: "cdkVirtualForTemplateCacheSize"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_VIEW_REPEATER_STRATEGY"],
    useClass: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_RecycleViewRepeaterStrategy"]
  }])]
});

CdkVirtualForOf.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewContainerRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["TemplateRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["IterableDiffers"]
  }, {
    type: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_RecycleViewRepeaterStrategy"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
      args: [_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_VIEW_REPEATER_STRATEGY"]]
    }]
  }, {
    type: CdkVirtualScrollViewport,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["SkipSelf"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
  }];
};

CdkVirtualForOf.propDecorators = {
  cdkVirtualForOf: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }],
  cdkVirtualForTrackBy: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }],
  cdkVirtualForTemplate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }],
  cdkVirtualForTemplateCacheSize: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
  }]
};
/*@__PURE__*/

(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](CdkVirtualForOf, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Directive"],
    args: [{
      selector: '[cdkVirtualFor][cdkVirtualForOf]',
      providers: [{
        provide: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_VIEW_REPEATER_STRATEGY"],
        useClass: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_RecycleViewRepeaterStrategy"]
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["TemplateRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["IterableDiffers"]
    }, {
      type: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_RecycleViewRepeaterStrategy"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Inject"],
        args: [_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_15__["_VIEW_REPEATER_STRATEGY"]]
      }]
    }, {
      type: CdkVirtualScrollViewport,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["SkipSelf"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgZone"]
    }];
  }, {
    cdkVirtualForOf: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }],
    cdkVirtualForTrackBy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }],
    cdkVirtualForTemplate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }],
    cdkVirtualForTemplateCacheSize: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CdkScrollableModule = function CdkScrollableModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, CdkScrollableModule);
};

CdkScrollableModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineNgModule"]({
  type: CdkScrollableModule
});
CdkScrollableModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjector"]({
  factory: function CdkScrollableModule_Factory(t) {
    return new (t || CdkScrollableModule)();
  }
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵsetNgModuleScope"](CdkScrollableModule, {
    declarations: [CdkScrollable],
    exports: [CdkScrollable]
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](CdkScrollableModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgModule"],
    args: [{
      exports: [CdkScrollable],
      declarations: [CdkScrollable]
    }]
  }], null, null);
})();
/**
 * @docs-primary-export
 */


var ScrollingModule = function ScrollingModule() {
  Object(_Users_dataanalyst_Desktop_workspace_web_and_mobile_frontend_ui_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, ScrollingModule);
};

ScrollingModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineNgModule"]({
  type: ScrollingModule
});
ScrollingModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjector"]({
  factory: function ScrollingModule_Factory(t) {
    return new (t || ScrollingModule)();
  },
  imports: [[_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["BidiModule"], _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["PlatformModule"], CdkScrollableModule], _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["BidiModule"], CdkScrollableModule]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵsetNgModuleScope"](ScrollingModule, {
    declarations: function declarations() {
      return [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport];
    },
    imports: function imports() {
      return [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["BidiModule"], _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["PlatformModule"], CdkScrollableModule];
    },
    exports: function exports() {
      return [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["BidiModule"], CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport];
    }
  });
})();
/*@__PURE__*/


(function () {
  _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵsetClassMetadata"](ScrollingModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_9__["NgModule"],
    args: [{
      imports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["BidiModule"], _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["PlatformModule"], CdkScrollableModule],
      exports: [_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_14__["BidiModule"], CdkScrollableModule, CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport],
      declarations: [CdkFixedSizeVirtualScroll, CdkVirtualForOf, CdkVirtualScrollViewport]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "xz+E":
/*!***************************************************!*\
  !*** ./node_modules/@angular/cdk/fesm2015/cdk.js ***!
  \***************************************************/
/*! exports provided: VERSION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Current version of the Angular Component Development Kit. */

var VERSION = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["Version"]('10.2.4');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */



/***/ })

}]);
//# sourceMappingURL=layouts-admin-layout-admin-layout-module.js.map